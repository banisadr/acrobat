
acrobat.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  000016f2  00001786  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000016f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000030  0080010e  0080010e  00001794  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00001794  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000017f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000238  00000000  00000000  00001834  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002147  00000000  00000000  00001a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000867  00000000  00000000  00003bb3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ca8  00000000  00000000  0000441a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007c4  00000000  00000000  000050c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000086c  00000000  00000000  00005888  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000297b  00000000  00000000  000060f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000238  00000000  00000000  00008a6f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c1 00 	jmp	0x182	; 0x182 <__ctors_end>
       4:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
       8:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
       c:	0c 94 d9 03 	jmp	0x7b2	; 0x7b2 <__vector_3>
      10:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      14:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      18:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      1c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      20:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      24:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      28:	0c 94 33 06 	jmp	0xc66	; 0xc66 <__vector_10>
      2c:	0c 94 71 06 	jmp	0xce2	; 0xce2 <__vector_11>
      30:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      34:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      38:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      3c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      40:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      44:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      48:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      4c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      50:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      54:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      58:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      5c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      60:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      64:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      68:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      6c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      70:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      74:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      78:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      7c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      80:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      84:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      88:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      8c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      90:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      94:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      98:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      9c:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      a0:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      a4:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>
      a8:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__bad_interrupt>

000000ac <__trampolines_end>:
      ac:	0a 00       	.word	0x000a	; ????

000000ae <__c.2129>:
      ae:	61 6e 67 6c 65 3d 20 00                             angle= .

000000b6 <__c.2107>:
      b6:	0a 00                                               ..

000000b8 <__c.2105>:
      b8:	20 20 20 20 20 67 79 3d 00                               gy=.

000000c1 <__c.2103>:
      c1:	20 20 20 20 20 61 7a 3d 00                               az=.

000000ca <__c.2101>:
      ca:	61 78 3d 20 00                                      ax= .

000000cf <descriptor_list>:
      cf:	00 01 00 00 66 01 12 00 02 00 00 23 01 43 00 03     ....f......#.C..
      df:	00 00 1f 01 04 01 03 09 04 0b 01 12 02 03 09 04     ................
      ef:	03 01 06 03 03 09 04 f9 00 08                       ..........

000000f9 <string3>:
      f9:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

00000103 <string2>:
     103:	06 03 4d 00 32 00 00 00                             ..M.2...

0000010b <string1>:
     10b:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     11b:	65 00 00 00                                         e...

0000011f <string0>:
     11f:	04 03 09 04                                         ....

00000123 <config1_descriptor>:
     123:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     133:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     143:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     153:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     163:	40 00 00                                            @..

00000166 <device_descriptor>:
     166:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     176:	03 01                                               ..

00000178 <endpoint_config_table>:
     178:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

00000182 <__ctors_end>:
     182:	11 24       	eor	r1, r1
     184:	1f be       	out	0x3f, r1	; 63
     186:	cf ef       	ldi	r28, 0xFF	; 255
     188:	da e0       	ldi	r29, 0x0A	; 10
     18a:	de bf       	out	0x3e, r29	; 62
     18c:	cd bf       	out	0x3d, r28	; 61

0000018e <__do_copy_data>:
     18e:	11 e0       	ldi	r17, 0x01	; 1
     190:	a0 e0       	ldi	r26, 0x00	; 0
     192:	b1 e0       	ldi	r27, 0x01	; 1
     194:	e2 ef       	ldi	r30, 0xF2	; 242
     196:	f6 e1       	ldi	r31, 0x16	; 22
     198:	02 c0       	rjmp	.+4      	; 0x19e <__do_copy_data+0x10>
     19a:	05 90       	lpm	r0, Z+
     19c:	0d 92       	st	X+, r0
     19e:	ae 30       	cpi	r26, 0x0E	; 14
     1a0:	b1 07       	cpc	r27, r17
     1a2:	d9 f7       	brne	.-10     	; 0x19a <__do_copy_data+0xc>

000001a4 <__do_clear_bss>:
     1a4:	21 e0       	ldi	r18, 0x01	; 1
     1a6:	ae e0       	ldi	r26, 0x0E	; 14
     1a8:	b1 e0       	ldi	r27, 0x01	; 1
     1aa:	01 c0       	rjmp	.+2      	; 0x1ae <.do_clear_bss_start>

000001ac <.do_clear_bss_loop>:
     1ac:	1d 92       	st	X+, r1

000001ae <.do_clear_bss_start>:
     1ae:	ae 33       	cpi	r26, 0x3E	; 62
     1b0:	b2 07       	cpc	r27, r18
     1b2:	e1 f7       	brne	.-8      	; 0x1ac <.do_clear_bss_loop>
     1b4:	0e 94 ca 03 	call	0x794	; 0x794 <main>
     1b8:	0c 94 77 0b 	jmp	0x16ee	; 0x16ee <_exit>

000001bc <__bad_interrupt>:
     1bc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c0 <init>:
************************************************************/

/* Initialization of Pins and System Clock */
void init(void){
	
	m_clockdivide(CLOCK_DIVIDE); // Set to 2 MHz
     1c0:	e1 e6       	ldi	r30, 0x61	; 97
     1c2:	f0 e0       	ldi	r31, 0x00	; 0
     1c4:	80 e8       	ldi	r24, 0x80	; 128
     1c6:	80 83       	st	Z, r24
     1c8:	83 e0       	ldi	r24, 0x03	; 3
     1ca:	80 83       	st	Z, r24
	
	//Set to Input
	clear(DDRD,0); // D0
     1cc:	50 98       	cbi	0x0a, 0	; 10
	clear(DDRD,1); // D1
     1ce:	51 98       	cbi	0x0a, 1	; 10
	clear(DDRD,2); // D2
     1d0:	52 98       	cbi	0x0a, 2	; 10
	
	//Set to Output
	set(DDRB,6); // B6
     1d2:	26 9a       	sbi	0x04, 6	; 4
	set(DDRC,6);	//enable digital output on pin C6 (invert state)
     1d4:	3e 9a       	sbi	0x07, 6	; 7
	
	//Set pin low
	clear(PORTC,6);	//start with both pins low 
     1d6:	46 98       	cbi	0x08, 6	; 8
	
	while(!m_imu_init(accel_scale,gyro_scale)); //Initialize IMU
     1d8:	60 91 04 01 	lds	r22, 0x0104
     1dc:	80 91 05 01 	lds	r24, 0x0105
     1e0:	0e 94 9c 04 	call	0x938	; 0x938 <m_imu_init>
     1e4:	88 23       	and	r24, r24
     1e6:	c1 f3       	breq	.-16     	; 0x1d8 <init+0x18>
	
	
	m_bus_init();
     1e8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <m_bus_init>
     1ec:	08 95       	ret

000001ee <wireless_recieve>:
}

/* Receive Wireless Data */
void wireless_recieve(void)
{
	m_rf_read(buffer,PACKET_LENGTH); // Read RF Signal
     1ee:	63 e0       	ldi	r22, 0x03	; 3
     1f0:	81 e1       	ldi	r24, 0x11	; 17
     1f2:	91 e0       	ldi	r25, 0x01	; 1
     1f4:	0e 94 5b 05 	call	0xab6	; 0xab6 <m_rf_read>
	Kp_adjust = buffer[0];
     1f8:	e1 e1       	ldi	r30, 0x11	; 17
     1fa:	f1 e0       	ldi	r31, 0x01	; 1
     1fc:	80 81       	ld	r24, Z
     1fe:	80 93 10 01 	sts	0x0110, r24
	Ki_adjust = buffer[1];
     202:	81 81       	ldd	r24, Z+1	; 0x01
     204:	80 93 0f 01 	sts	0x010F, r24
	Kd_adjust = buffer[2];
     208:	82 81       	ldd	r24, Z+2	; 0x02
     20a:	80 93 0e 01 	sts	0x010E, r24
     20e:	08 95       	ret

00000210 <timer1_init>:

/* Timer1 Initialization for PWM Motor Control */
void timer1_init(void)
{
	//Timer initialization
	clear(TCCR1B,CS12);	//Set timer1 prescaler to /1
     210:	e1 e8       	ldi	r30, 0x81	; 129
     212:	f0 e0       	ldi	r31, 0x00	; 0
     214:	80 81       	ld	r24, Z
     216:	8b 7f       	andi	r24, 0xFB	; 251
     218:	80 83       	st	Z, r24
	clear(TCCR1B,CS11);
     21a:	80 81       	ld	r24, Z
     21c:	8d 7f       	andi	r24, 0xFD	; 253
     21e:	80 83       	st	Z, r24
	set(TCCR1B,CS10);
     220:	80 81       	ld	r24, Z
     222:	81 60       	ori	r24, 0x01	; 1
     224:	80 83       	st	Z, r24
	
	set(TCCR1B,WGM13);	//Use timer mode 15 (up to OCR1A, PWM mode)
     226:	80 81       	ld	r24, Z
     228:	80 61       	ori	r24, 0x10	; 16
     22a:	80 83       	st	Z, r24
	set(TCCR1B,WGM12);
     22c:	80 81       	ld	r24, Z
     22e:	88 60       	ori	r24, 0x08	; 8
     230:	80 83       	st	Z, r24
	set(TCCR1A,WGM11);
     232:	e0 e8       	ldi	r30, 0x80	; 128
     234:	f0 e0       	ldi	r31, 0x00	; 0
     236:	80 81       	ld	r24, Z
     238:	82 60       	ori	r24, 0x02	; 2
     23a:	80 83       	st	Z, r24
	set(TCCR1A,WGM10);
     23c:	80 81       	ld	r24, Z
     23e:	81 60       	ori	r24, 0x01	; 1
     240:	80 83       	st	Z, r24

	set(TCCR1A,COM1B1);		//clear at OCR1B, set at OCR1A
     242:	80 81       	ld	r24, Z
     244:	80 62       	ori	r24, 0x20	; 32
     246:	80 83       	st	Z, r24
	clear(TCCR1A,COM1B0);
     248:	80 81       	ld	r24, Z
     24a:	8f 7e       	andi	r24, 0xEF	; 239
     24c:	80 83       	st	Z, r24

	OCR1A = CLOCK/PWM_FREQ;
     24e:	e8 e8       	ldi	r30, 0x88	; 136
     250:	f0 e0       	ldi	r31, 0x00	; 0
     252:	80 ed       	ldi	r24, 0xD0	; 208
     254:	97 e0       	ldi	r25, 0x07	; 7
     256:	91 83       	std	Z+1, r25	; 0x01
     258:	80 83       	st	Z, r24
	OCR1B = (float)OCR1A*duty_cycle;
     25a:	60 81       	ld	r22, Z
     25c:	71 81       	ldd	r23, Z+1	; 0x01
     25e:	80 e0       	ldi	r24, 0x00	; 0
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	0e 94 92 09 	call	0x1324	; 0x1324 <__floatunsisf>
     266:	20 91 00 01 	lds	r18, 0x0100
     26a:	30 91 01 01 	lds	r19, 0x0101
     26e:	40 91 02 01 	lds	r20, 0x0102
     272:	50 91 03 01 	lds	r21, 0x0103
     276:	0e 94 49 0a 	call	0x1492	; 0x1492 <__mulsf3>
     27a:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__fixunssfsi>
     27e:	70 93 8b 00 	sts	0x008B, r23
     282:	60 93 8a 00 	sts	0x008A, r22
     286:	08 95       	ret

00000288 <timer3_init>:
}

/* Timer3 Initialization for fixed timestep calculations */
void timer3_init(void) 
{
	clear(TCCR3B,CS32); // prescale /1
     288:	e1 e9       	ldi	r30, 0x91	; 145
     28a:	f0 e0       	ldi	r31, 0x00	; 0
     28c:	80 81       	ld	r24, Z
     28e:	8b 7f       	andi	r24, 0xFB	; 251
     290:	80 83       	st	Z, r24
	clear(TCCR3B,CS31);
     292:	80 81       	ld	r24, Z
     294:	8d 7f       	andi	r24, 0xFD	; 253
     296:	80 83       	st	Z, r24
	set(TCCR3B,CS30);
     298:	80 81       	ld	r24, Z
     29a:	81 60       	ori	r24, 0x01	; 1
     29c:	80 83       	st	Z, r24

	clear(TCCR3B,WGM33); // Up to OCR3A (mode 4)
     29e:	80 81       	ld	r24, Z
     2a0:	8f 7e       	andi	r24, 0xEF	; 239
     2a2:	80 83       	st	Z, r24
	set(TCCR3B,WGM32);
     2a4:	80 81       	ld	r24, Z
     2a6:	88 60       	ori	r24, 0x08	; 8
     2a8:	80 83       	st	Z, r24
	clear(TCCR3A,WGM31);
     2aa:	e0 e9       	ldi	r30, 0x90	; 144
     2ac:	f0 e0       	ldi	r31, 0x00	; 0
     2ae:	80 81       	ld	r24, Z
     2b0:	8d 7f       	andi	r24, 0xFD	; 253
     2b2:	80 83       	st	Z, r24
	clear(TCCR3A,WGM30);
     2b4:	80 81       	ld	r24, Z
     2b6:	8e 7f       	andi	r24, 0xFE	; 254
     2b8:	80 83       	st	Z, r24
	
	OCR3A = TIMESTEP*(CLOCK/TIM3_PRESCALE); // initialize OCR3A or duration
     2ba:	80 ed       	ldi	r24, 0xD0	; 208
     2bc:	97 e0       	ldi	r25, 0x07	; 7
     2be:	90 93 99 00 	sts	0x0099, r25
     2c2:	80 93 98 00 	sts	0x0098, r24
     2c6:	08 95       	ret

000002c8 <lowpass>:
}


/* Lowpass Filter using Alpha_low */
int lowpass(float alpha, int previous_output, int reading)
{
     2c8:	8f 92       	push	r8
     2ca:	9f 92       	push	r9
     2cc:	af 92       	push	r10
     2ce:	bf 92       	push	r11
     2d0:	cf 92       	push	r12
     2d2:	df 92       	push	r13
     2d4:	ef 92       	push	r14
     2d6:	ff 92       	push	r15
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	6b 01       	movw	r12, r22
     2de:	7c 01       	movw	r14, r24
     2e0:	ea 01       	movw	r28, r20
	return (int)((float)reading*alpha +(1-alpha)*(float)previous_output);
     2e2:	b9 01       	movw	r22, r18
     2e4:	33 0f       	add	r19, r19
     2e6:	88 0b       	sbc	r24, r24
     2e8:	99 0b       	sbc	r25, r25
     2ea:	0e 94 94 09 	call	0x1328	; 0x1328 <__floatsisf>
     2ee:	a7 01       	movw	r20, r14
     2f0:	96 01       	movw	r18, r12
     2f2:	0e 94 49 0a 	call	0x1492	; 0x1492 <__mulsf3>
     2f6:	4b 01       	movw	r8, r22
     2f8:	5c 01       	movw	r10, r24
     2fa:	a7 01       	movw	r20, r14
     2fc:	96 01       	movw	r18, r12
     2fe:	60 e0       	ldi	r22, 0x00	; 0
     300:	70 e0       	ldi	r23, 0x00	; 0
     302:	80 e8       	ldi	r24, 0x80	; 128
     304:	9f e3       	ldi	r25, 0x3F	; 63
     306:	0e 94 78 08 	call	0x10f0	; 0x10f0 <__subsf3>
     30a:	6b 01       	movw	r12, r22
     30c:	7c 01       	movw	r14, r24
     30e:	be 01       	movw	r22, r28
     310:	dd 0f       	add	r29, r29
     312:	88 0b       	sbc	r24, r24
     314:	99 0b       	sbc	r25, r25
     316:	0e 94 94 09 	call	0x1328	; 0x1328 <__floatsisf>
     31a:	9b 01       	movw	r18, r22
     31c:	ac 01       	movw	r20, r24
     31e:	c7 01       	movw	r24, r14
     320:	b6 01       	movw	r22, r12
     322:	0e 94 49 0a 	call	0x1492	; 0x1492 <__mulsf3>
     326:	9b 01       	movw	r18, r22
     328:	ac 01       	movw	r20, r24
     32a:	c5 01       	movw	r24, r10
     32c:	b4 01       	movw	r22, r8
     32e:	0e 94 79 08 	call	0x10f2	; 0x10f2 <__addsf3>
     332:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__fixsfsi>
}
     336:	cb 01       	movw	r24, r22
     338:	df 91       	pop	r29
     33a:	cf 91       	pop	r28
     33c:	ff 90       	pop	r15
     33e:	ef 90       	pop	r14
     340:	df 90       	pop	r13
     342:	cf 90       	pop	r12
     344:	bf 90       	pop	r11
     346:	af 90       	pop	r10
     348:	9f 90       	pop	r9
     34a:	8f 90       	pop	r8
     34c:	08 95       	ret

0000034e <highpass>:

/* Highpass Filter using Aplha_high */
int highpass(float alpha, int previous_output, int previous_reading, int reading)
{
     34e:	8f 92       	push	r8
     350:	9f 92       	push	r9
     352:	af 92       	push	r10
     354:	bf 92       	push	r11
     356:	cf 92       	push	r12
     358:	df 92       	push	r13
     35a:	ef 92       	push	r14
     35c:	ff 92       	push	r15
     35e:	0f 93       	push	r16
     360:	1f 93       	push	r17
     362:	cf 93       	push	r28
     364:	df 93       	push	r29
     366:	6b 01       	movw	r12, r22
     368:	7c 01       	movw	r14, r24
     36a:	e9 01       	movw	r28, r18
	return (int)((float)previous_output*alpha + alpha*(float)(reading-previous_reading));
     36c:	ba 01       	movw	r22, r20
     36e:	55 0f       	add	r21, r21
     370:	88 0b       	sbc	r24, r24
     372:	99 0b       	sbc	r25, r25
     374:	0e 94 94 09 	call	0x1328	; 0x1328 <__floatsisf>
     378:	a7 01       	movw	r20, r14
     37a:	96 01       	movw	r18, r12
     37c:	0e 94 49 0a 	call	0x1492	; 0x1492 <__mulsf3>
     380:	4b 01       	movw	r8, r22
     382:	5c 01       	movw	r10, r24
     384:	b8 01       	movw	r22, r16
     386:	6c 1b       	sub	r22, r28
     388:	7d 0b       	sbc	r23, r29
     38a:	07 2e       	mov	r0, r23
     38c:	00 0c       	add	r0, r0
     38e:	88 0b       	sbc	r24, r24
     390:	99 0b       	sbc	r25, r25
     392:	0e 94 94 09 	call	0x1328	; 0x1328 <__floatsisf>
     396:	a7 01       	movw	r20, r14
     398:	96 01       	movw	r18, r12
     39a:	0e 94 49 0a 	call	0x1492	; 0x1492 <__mulsf3>
     39e:	9b 01       	movw	r18, r22
     3a0:	ac 01       	movw	r20, r24
     3a2:	c5 01       	movw	r24, r10
     3a4:	b4 01       	movw	r22, r8
     3a6:	0e 94 79 08 	call	0x10f2	; 0x10f2 <__addsf3>
     3aa:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__fixsfsi>
}
     3ae:	cb 01       	movw	r24, r22
     3b0:	df 91       	pop	r29
     3b2:	cf 91       	pop	r28
     3b4:	1f 91       	pop	r17
     3b6:	0f 91       	pop	r16
     3b8:	ff 90       	pop	r15
     3ba:	ef 90       	pop	r14
     3bc:	df 90       	pop	r13
     3be:	cf 90       	pop	r12
     3c0:	bf 90       	pop	r11
     3c2:	af 90       	pop	r10
     3c4:	9f 90       	pop	r9
     3c6:	8f 90       	pop	r8
     3c8:	08 95       	ret

000003ca <print_axazgy>:
}

/* Print Functions for Funzies */
void print_axazgy(void) //Print values to usb
{
	m_usb_tx_string("ax= ");
     3ca:	8a ec       	ldi	r24, 0xCA	; 202
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
	m_usb_tx_int(ax);
     3d2:	80 91 24 01 	lds	r24, 0x0124
     3d6:	90 91 25 01 	lds	r25, 0x0125
     3da:	0e 94 10 08 	call	0x1020	; 0x1020 <m_usb_tx_int>
	m_usb_tx_string("     az=");
     3de:	81 ec       	ldi	r24, 0xC1	; 193
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
	m_usb_tx_int(az);
     3e6:	80 91 22 01 	lds	r24, 0x0122
     3ea:	90 91 23 01 	lds	r25, 0x0123
     3ee:	0e 94 10 08 	call	0x1020	; 0x1020 <m_usb_tx_int>
	m_usb_tx_string("     gy=");
     3f2:	88 eb       	ldi	r24, 0xB8	; 184
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
	m_usb_tx_long(gy);
     3fa:	60 91 20 01 	lds	r22, 0x0120
     3fe:	70 91 21 01 	lds	r23, 0x0121
     402:	07 2e       	mov	r0, r23
     404:	00 0c       	add	r0, r0
     406:	88 0b       	sbc	r24, r24
     408:	99 0b       	sbc	r25, r25
     40a:	0e 94 44 08 	call	0x1088	; 0x1088 <m_usb_tx_long>
	m_usb_tx_string("\n");
     40e:	86 eb       	ldi	r24, 0xB6	; 182
     410:	90 e0       	ldi	r25, 0x00	; 0
     412:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
     416:	08 95       	ret

00000418 <run_control_loop>:
	}
}

/* PID Control */
void run_control_loop(void)
{
     418:	8f 92       	push	r8
     41a:	9f 92       	push	r9
     41c:	af 92       	push	r10
     41e:	bf 92       	push	r11
     420:	cf 92       	push	r12
     422:	df 92       	push	r13
     424:	ef 92       	push	r14
     426:	ff 92       	push	r15
     428:	cf 93       	push	r28
     42a:	df 93       	push	r29
	int error = SETPOINT - angle;
     42c:	c0 91 1a 01 	lds	r28, 0x011A
     430:	d0 91 1b 01 	lds	r29, 0x011B
     434:	d1 95       	neg	r29
     436:	c1 95       	neg	r28
     438:	d1 09       	sbc	r29, r1
	integral += error*TIMESTEP;
     43a:	be 01       	movw	r22, r28
     43c:	0d 2e       	mov	r0, r29
     43e:	00 0c       	add	r0, r0
     440:	88 0b       	sbc	r24, r24
     442:	99 0b       	sbc	r25, r25
     444:	0e 94 94 09 	call	0x1328	; 0x1328 <__floatsisf>
     448:	4b 01       	movw	r8, r22
     44a:	5c 01       	movw	r10, r24
     44c:	2f e6       	ldi	r18, 0x6F	; 111
     44e:	32 e1       	ldi	r19, 0x12	; 18
     450:	43 e8       	ldi	r20, 0x83	; 131
     452:	5a e3       	ldi	r21, 0x3A	; 58
     454:	0e 94 49 0a 	call	0x1492	; 0x1492 <__mulsf3>
     458:	20 91 14 01 	lds	r18, 0x0114
     45c:	30 91 15 01 	lds	r19, 0x0115
     460:	40 91 16 01 	lds	r20, 0x0116
     464:	50 91 17 01 	lds	r21, 0x0117
     468:	0e 94 79 08 	call	0x10f2	; 0x10f2 <__addsf3>
     46c:	6b 01       	movw	r12, r22
     46e:	7c 01       	movw	r14, r24
     470:	60 93 14 01 	sts	0x0114, r22
     474:	70 93 15 01 	sts	0x0115, r23
     478:	80 93 16 01 	sts	0x0116, r24
     47c:	90 93 17 01 	sts	0x0117, r25
	float derivative = (error - previous_error)/TIMESTEP;
	//float derivative = -gy;
	//float output = (Kp_adjust/255.0)*Kp*error + (Ki_adjust/255.0)*Ki*integral + (Kd_adjust/255.0)*Kd*derivative;
	float output = Kp*error + Ki*integral + Kd*derivative;
     480:	20 e0       	ldi	r18, 0x00	; 0
     482:	30 e0       	ldi	r19, 0x00	; 0
     484:	40 e0       	ldi	r20, 0x00	; 0
     486:	5f e3       	ldi	r21, 0x3F	; 63
     488:	c5 01       	movw	r24, r10
     48a:	b4 01       	movw	r22, r8
     48c:	0e 94 49 0a 	call	0x1492	; 0x1492 <__mulsf3>
     490:	4b 01       	movw	r8, r22
     492:	5c 01       	movw	r10, r24
     494:	20 e0       	ldi	r18, 0x00	; 0
     496:	30 e0       	ldi	r19, 0x00	; 0
     498:	a9 01       	movw	r20, r18
     49a:	c7 01       	movw	r24, r14
     49c:	b6 01       	movw	r22, r12
     49e:	0e 94 49 0a 	call	0x1492	; 0x1492 <__mulsf3>
     4a2:	9b 01       	movw	r18, r22
     4a4:	ac 01       	movw	r20, r24
     4a6:	c5 01       	movw	r24, r10
     4a8:	b4 01       	movw	r22, r8
     4aa:	0e 94 79 08 	call	0x10f2	; 0x10f2 <__addsf3>
     4ae:	6b 01       	movw	r12, r22
     4b0:	7c 01       	movw	r14, r24
/* PID Control */
void run_control_loop(void)
{
	int error = SETPOINT - angle;
	integral += error*TIMESTEP;
	float derivative = (error - previous_error)/TIMESTEP;
     4b2:	80 91 18 01 	lds	r24, 0x0118
     4b6:	90 91 19 01 	lds	r25, 0x0119
     4ba:	9e 01       	movw	r18, r28
     4bc:	28 1b       	sub	r18, r24
     4be:	39 0b       	sbc	r19, r25
     4c0:	b9 01       	movw	r22, r18
     4c2:	33 0f       	add	r19, r19
     4c4:	88 0b       	sbc	r24, r24
     4c6:	99 0b       	sbc	r25, r25
     4c8:	0e 94 94 09 	call	0x1328	; 0x1328 <__floatsisf>
     4cc:	2f e6       	ldi	r18, 0x6F	; 111
     4ce:	32 e1       	ldi	r19, 0x12	; 18
     4d0:	43 e8       	ldi	r20, 0x83	; 131
     4d2:	5a e3       	ldi	r21, 0x3A	; 58
     4d4:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <__divsf3>
	//float derivative = -gy;
	//float output = (Kp_adjust/255.0)*Kp*error + (Ki_adjust/255.0)*Ki*integral + (Kd_adjust/255.0)*Kd*derivative;
	float output = Kp*error + Ki*integral + Kd*derivative;
     4d8:	2a e0       	ldi	r18, 0x0A	; 10
     4da:	37 ed       	ldi	r19, 0xD7	; 215
     4dc:	43 e2       	ldi	r20, 0x23	; 35
     4de:	5c e3       	ldi	r21, 0x3C	; 60
     4e0:	0e 94 49 0a 	call	0x1492	; 0x1492 <__mulsf3>
     4e4:	9b 01       	movw	r18, r22
     4e6:	ac 01       	movw	r20, r24
     4e8:	c7 01       	movw	r24, r14
     4ea:	b6 01       	movw	r22, r12
     4ec:	0e 94 79 08 	call	0x10f2	; 0x10f2 <__addsf3>
     4f0:	6b 01       	movw	r12, r22
     4f2:	7c 01       	movw	r14, r24
	previous_error = error;
     4f4:	d0 93 19 01 	sts	0x0119, r29
     4f8:	c0 93 18 01 	sts	0x0118, r28
	
	duty_cycle = abs(output)/(45.0);
     4fc:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__fixsfsi>
     500:	9b 01       	movw	r18, r22
     502:	77 23       	and	r23, r23
     504:	24 f4       	brge	.+8      	; 0x50e <run_control_loop+0xf6>
     506:	22 27       	eor	r18, r18
     508:	33 27       	eor	r19, r19
     50a:	26 1b       	sub	r18, r22
     50c:	37 0b       	sbc	r19, r23
     50e:	b9 01       	movw	r22, r18
     510:	33 0f       	add	r19, r19
     512:	88 0b       	sbc	r24, r24
     514:	99 0b       	sbc	r25, r25
     516:	0e 94 94 09 	call	0x1328	; 0x1328 <__floatsisf>
     51a:	20 e0       	ldi	r18, 0x00	; 0
     51c:	30 e0       	ldi	r19, 0x00	; 0
     51e:	44 e3       	ldi	r20, 0x34	; 52
     520:	52 e4       	ldi	r21, 0x42	; 66
     522:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <__divsf3>
     526:	4b 01       	movw	r8, r22
     528:	5c 01       	movw	r10, r24
	if (duty_cycle > 1) {
     52a:	20 e0       	ldi	r18, 0x00	; 0
     52c:	30 e0       	ldi	r19, 0x00	; 0
     52e:	40 e8       	ldi	r20, 0x80	; 128
     530:	5f e3       	ldi	r21, 0x3F	; 63
     532:	0e 94 44 0a 	call	0x1488	; 0x1488 <__gesf2>
     536:	18 16       	cp	r1, r24
     538:	4c f0       	brlt	.+18     	; 0x54c <run_control_loop+0x134>
	//float derivative = -gy;
	//float output = (Kp_adjust/255.0)*Kp*error + (Ki_adjust/255.0)*Ki*integral + (Kd_adjust/255.0)*Kd*derivative;
	float output = Kp*error + Ki*integral + Kd*derivative;
	previous_error = error;
	
	duty_cycle = abs(output)/(45.0);
     53a:	80 92 00 01 	sts	0x0100, r8
     53e:	90 92 01 01 	sts	0x0101, r9
     542:	a0 92 02 01 	sts	0x0102, r10
     546:	b0 92 03 01 	sts	0x0103, r11
     54a:	0c c0       	rjmp	.+24     	; 0x564 <run_control_loop+0x14c>
	if (duty_cycle > 1) {
		duty_cycle = 1;
     54c:	80 e0       	ldi	r24, 0x00	; 0
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	a0 e8       	ldi	r26, 0x80	; 128
     552:	bf e3       	ldi	r27, 0x3F	; 63
     554:	80 93 00 01 	sts	0x0100, r24
     558:	90 93 01 01 	sts	0x0101, r25
     55c:	a0 93 02 01 	sts	0x0102, r26
     560:	b0 93 03 01 	sts	0x0103, r27
	}
	
	if (output<0){set(PORTC,6);}
     564:	20 e0       	ldi	r18, 0x00	; 0
     566:	30 e0       	ldi	r19, 0x00	; 0
     568:	a9 01       	movw	r20, r18
     56a:	c7 01       	movw	r24, r14
     56c:	b6 01       	movw	r22, r12
     56e:	0e 94 e5 08 	call	0x11ca	; 0x11ca <__cmpsf2>
     572:	88 23       	and	r24, r24
     574:	14 f4       	brge	.+4      	; 0x57a <run_control_loop+0x162>
     576:	46 9a       	sbi	0x08, 6	; 8
     578:	01 c0       	rjmp	.+2      	; 0x57c <run_control_loop+0x164>
	else{clear(PORTC,6);}
     57a:	46 98       	cbi	0x08, 6	; 8
	//m_usb_tx_string("     Ki= ");
	//m_usb_tx_int(Ki_adjust);
	//m_usb_tx_string("     Kd= ");
	//m_usb_tx_int(Kd_adjust);
	//
	print_axazgy();
     57c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <print_axazgy>
	
}
     580:	df 91       	pop	r29
     582:	cf 91       	pop	r28
     584:	ff 90       	pop	r15
     586:	ef 90       	pop	r14
     588:	df 90       	pop	r13
     58a:	cf 90       	pop	r12
     58c:	bf 90       	pop	r11
     58e:	af 90       	pop	r10
     590:	9f 90       	pop	r9
     592:	8f 90       	pop	r8
     594:	08 95       	ret

00000596 <print_angle>:
	m_usb_tx_int(data[5]);
	m_usb_tx_string("\n");
}

void print_angle(int angle)//Print angle
{
     596:	cf 93       	push	r28
     598:	df 93       	push	r29
     59a:	ec 01       	movw	r28, r24
	m_usb_tx_string("angle= ");
     59c:	8e ea       	ldi	r24, 0xAE	; 174
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
	m_usb_tx_int(angle);
     5a4:	ce 01       	movw	r24, r28
     5a6:	0e 94 10 08 	call	0x1020	; 0x1020 <m_usb_tx_int>
	m_usb_tx_string("\n");
     5aa:	8c ea       	ldi	r24, 0xAC	; 172
     5ac:	90 e0       	ldi	r25, 0x00	; 0
     5ae:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <print_P>
}
     5b2:	df 91       	pop	r29
     5b4:	cf 91       	pop	r28
     5b6:	08 95       	ret

000005b8 <update_angle>:
	return (int)((float)previous_output*alpha + alpha*(float)(reading-previous_reading));
}

/* Get IMU data, filter, update angle, update control */
void update_angle(void)
{
     5b8:	4f 92       	push	r4
     5ba:	5f 92       	push	r5
     5bc:	6f 92       	push	r6
     5be:	7f 92       	push	r7
     5c0:	8f 92       	push	r8
     5c2:	9f 92       	push	r9
     5c4:	af 92       	push	r10
     5c6:	bf 92       	push	r11
     5c8:	cf 92       	push	r12
     5ca:	df 92       	push	r13
     5cc:	ef 92       	push	r14
     5ce:	ff 92       	push	r15
     5d0:	0f 93       	push	r16
     5d2:	1f 93       	push	r17
     5d4:	cf 93       	push	r28
     5d6:	df 93       	push	r29
	if (m_imu_raw(data))
     5d8:	86 e2       	ldi	r24, 0x26	; 38
     5da:	91 e0       	ldi	r25, 0x01	; 1
     5dc:	0e 94 09 05 	call	0xa12	; 0xa12 <m_imu_raw>
     5e0:	88 23       	and	r24, r24
     5e2:	09 f4       	brne	.+2      	; 0x5e6 <update_angle+0x2e>
     5e4:	c2 c0       	rjmp	.+388    	; 0x76a <update_angle+0x1b2>
	{
		m_green(ON);
     5e6:	6a 9a       	sbi	0x0d, 2	; 13
     5e8:	72 98       	cbi	0x0e, 2	; 14
		m_red(OFF);		
     5ea:	6e 9a       	sbi	0x0d, 6	; 13
     5ec:	76 9a       	sbi	0x0e, 6	; 14
		
		ax = lowpass(0.7,ax,data[0])+AX_OFFSET;
     5ee:	c6 e2       	ldi	r28, 0x26	; 38
     5f0:	d1 e0       	ldi	r29, 0x01	; 1
     5f2:	28 81       	ld	r18, Y
     5f4:	39 81       	ldd	r19, Y+1	; 0x01
     5f6:	40 91 24 01 	lds	r20, 0x0124
     5fa:	50 91 25 01 	lds	r21, 0x0125
     5fe:	63 e3       	ldi	r22, 0x33	; 51
     600:	73 e3       	ldi	r23, 0x33	; 51
     602:	83 e3       	ldi	r24, 0x33	; 51
     604:	9f e3       	ldi	r25, 0x3F	; 63
     606:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lowpass>
     60a:	88 58       	subi	r24, 0x88	; 136
     60c:	91 09       	sbc	r25, r1
     60e:	6c 01       	movw	r12, r24
     610:	90 93 25 01 	sts	0x0125, r25
     614:	80 93 24 01 	sts	0x0124, r24
		az = lowpass(0.7,az,data[2])+AZ_OFFSET;
     618:	2c 81       	ldd	r18, Y+4	; 0x04
     61a:	3d 81       	ldd	r19, Y+5	; 0x05
     61c:	40 91 22 01 	lds	r20, 0x0122
     620:	50 91 23 01 	lds	r21, 0x0123
     624:	63 e3       	ldi	r22, 0x33	; 51
     626:	73 e3       	ldi	r23, 0x33	; 51
     628:	83 e3       	ldi	r24, 0x33	; 51
     62a:	9f e3       	ldi	r25, 0x3F	; 63
     62c:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lowpass>
     630:	87 96       	adiw	r24, 0x27	; 39
     632:	7c 01       	movw	r14, r24
     634:	90 93 23 01 	sts	0x0123, r25
     638:	80 93 22 01 	sts	0x0122, r24
		gy = lowpass(ALPHA_LOW,gy,data[4])+GY_OFFSET;
     63c:	08 84       	ldd	r0, Y+8	; 0x08
     63e:	d9 85       	ldd	r29, Y+9	; 0x09
     640:	c0 2d       	mov	r28, r0
     642:	40 91 20 01 	lds	r20, 0x0120
     646:	50 91 21 01 	lds	r21, 0x0121
     64a:	9e 01       	movw	r18, r28
     64c:	63 e3       	ldi	r22, 0x33	; 51
     64e:	73 e3       	ldi	r23, 0x33	; 51
     650:	83 e7       	ldi	r24, 0x73	; 115
     652:	9f e3       	ldi	r25, 0x3F	; 63
     654:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lowpass>
		gy = highpass(ALPHA_HIGH,gy,gy_previous_reading,data[4]);
     658:	20 91 1e 01 	lds	r18, 0x011E
     65c:	30 91 1f 01 	lds	r19, 0x011F
		m_green(ON);
		m_red(OFF);		
		
		ax = lowpass(0.7,ax,data[0])+AX_OFFSET;
		az = lowpass(0.7,az,data[2])+AZ_OFFSET;
		gy = lowpass(ALPHA_LOW,gy,data[4])+GY_OFFSET;
     660:	ac 01       	movw	r20, r24
     662:	49 57       	subi	r20, 0x79	; 121
     664:	51 09       	sbc	r21, r1
		gy = highpass(ALPHA_HIGH,gy,gy_previous_reading,data[4]);
     666:	8e 01       	movw	r16, r28
     668:	6d ec       	ldi	r22, 0xCD	; 205
     66a:	7c ec       	ldi	r23, 0xCC	; 204
     66c:	8c ec       	ldi	r24, 0xCC	; 204
     66e:	9d e3       	ldi	r25, 0x3D	; 61
     670:	0e 94 a7 01 	call	0x34e	; 0x34e <highpass>
     674:	8c 01       	movw	r16, r24
     676:	90 93 21 01 	sts	0x0121, r25
     67a:	80 93 20 01 	sts	0x0120, r24
		gy_previous_reading = data[4];
     67e:	d0 93 1f 01 	sts	0x011F, r29
     682:	c0 93 1e 01 	sts	0x011E, r28
		
		if (check(TIFR3,OCF3A)){	//check if timestep has completed
     686:	c1 9b       	sbis	0x18, 1	; 24
     688:	69 c0       	rjmp	.+210    	; 0x75c <update_angle+0x1a4>
			angleSlow = ((float)ax*RAD2DEG)/sqrt(((float)ax*ax+(float)az*az));
     68a:	b6 01       	movw	r22, r12
     68c:	dd 0c       	add	r13, r13
     68e:	88 0b       	sbc	r24, r24
     690:	99 0b       	sbc	r25, r25
     692:	0e 94 94 09 	call	0x1328	; 0x1328 <__floatsisf>
     696:	4b 01       	movw	r8, r22
     698:	5c 01       	movw	r10, r24
     69a:	b7 01       	movw	r22, r14
     69c:	ff 0c       	add	r15, r15
     69e:	88 0b       	sbc	r24, r24
     6a0:	99 0b       	sbc	r25, r25
     6a2:	0e 94 94 09 	call	0x1328	; 0x1328 <__floatsisf>
     6a6:	6b 01       	movw	r12, r22
     6a8:	7c 01       	movw	r14, r24
     6aa:	a5 01       	movw	r20, r10
     6ac:	94 01       	movw	r18, r8
     6ae:	c5 01       	movw	r24, r10
     6b0:	b4 01       	movw	r22, r8
     6b2:	0e 94 49 0a 	call	0x1492	; 0x1492 <__mulsf3>
     6b6:	2b 01       	movw	r4, r22
     6b8:	3c 01       	movw	r6, r24
     6ba:	a7 01       	movw	r20, r14
     6bc:	96 01       	movw	r18, r12
     6be:	c7 01       	movw	r24, r14
     6c0:	b6 01       	movw	r22, r12
     6c2:	0e 94 49 0a 	call	0x1492	; 0x1492 <__mulsf3>
     6c6:	9b 01       	movw	r18, r22
     6c8:	ac 01       	movw	r20, r24
     6ca:	c3 01       	movw	r24, r6
     6cc:	b2 01       	movw	r22, r4
     6ce:	0e 94 79 08 	call	0x10f2	; 0x10f2 <__addsf3>
     6d2:	0e 94 bc 0a 	call	0x1578	; 0x1578 <sqrt>
     6d6:	6b 01       	movw	r12, r22
     6d8:	7c 01       	movw	r14, r24
     6da:	23 e3       	ldi	r18, 0x33	; 51
     6dc:	33 e3       	ldi	r19, 0x33	; 51
     6de:	45 e6       	ldi	r20, 0x65	; 101
     6e0:	52 e4       	ldi	r21, 0x42	; 66
     6e2:	c5 01       	movw	r24, r10
     6e4:	b4 01       	movw	r22, r8
     6e6:	0e 94 49 0a 	call	0x1492	; 0x1492 <__mulsf3>
     6ea:	a7 01       	movw	r20, r14
     6ec:	96 01       	movw	r18, r12
     6ee:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <__divsf3>
     6f2:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__fixsfsi>
     6f6:	6b 01       	movw	r12, r22
     6f8:	7c 01       	movw	r14, r24
     6fa:	70 93 3d 01 	sts	0x013D, r23
     6fe:	60 93 3c 01 	sts	0x013C, r22
			angleFast += gy*TIMESTEP;	//add thetadot*timestep to angle
     702:	60 91 1c 01 	lds	r22, 0x011C
     706:	70 91 1d 01 	lds	r23, 0x011D
     70a:	07 2e       	mov	r0, r23
     70c:	00 0c       	add	r0, r0
     70e:	88 0b       	sbc	r24, r24
     710:	99 0b       	sbc	r25, r25
     712:	0e 94 94 09 	call	0x1328	; 0x1328 <__floatsisf>
     716:	4b 01       	movw	r8, r22
     718:	5c 01       	movw	r10, r24
     71a:	b8 01       	movw	r22, r16
     71c:	11 0f       	add	r17, r17
     71e:	88 0b       	sbc	r24, r24
     720:	99 0b       	sbc	r25, r25
     722:	0e 94 94 09 	call	0x1328	; 0x1328 <__floatsisf>
     726:	2f e6       	ldi	r18, 0x6F	; 111
     728:	32 e1       	ldi	r19, 0x12	; 18
     72a:	43 e8       	ldi	r20, 0x83	; 131
     72c:	5a e3       	ldi	r21, 0x3A	; 58
     72e:	0e 94 49 0a 	call	0x1492	; 0x1492 <__mulsf3>
     732:	9b 01       	movw	r18, r22
     734:	ac 01       	movw	r20, r24
     736:	c5 01       	movw	r24, r10
     738:	b4 01       	movw	r22, r8
     73a:	0e 94 79 08 	call	0x10f2	; 0x10f2 <__addsf3>
     73e:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__fixsfsi>
     742:	70 93 1d 01 	sts	0x011D, r23
     746:	60 93 1c 01 	sts	0x011C, r22
			angle = -1*(-angleSlow + angleFast);	//flip sign for IMU mounted upside down 
     74a:	c6 1a       	sub	r12, r22
     74c:	d7 0a       	sbc	r13, r23
     74e:	d0 92 1b 01 	sts	0x011B, r13
     752:	c0 92 1a 01 	sts	0x011A, r12
			set(TIFR3,OCF3A);		//reset flag
     756:	c1 9a       	sbi	0x18, 1	; 24
			run_control_loop(); // Update control
     758:	0e 94 0c 02 	call	0x418	; 0x418 <run_control_loop>
		}
		
		print_angle(angle);
     75c:	80 91 1a 01 	lds	r24, 0x011A
     760:	90 91 1b 01 	lds	r25, 0x011B
     764:	0e 94 cb 02 	call	0x596	; 0x596 <print_angle>
     768:	04 c0       	rjmp	.+8      	; 0x772 <update_angle+0x1ba>

	}
	else
	{
		m_green(OFF);
     76a:	6a 9a       	sbi	0x0d, 2	; 13
     76c:	72 9a       	sbi	0x0e, 2	; 14
		m_red(ON);
     76e:	6e 9a       	sbi	0x0d, 6	; 13
     770:	76 98       	cbi	0x0e, 6	; 14
	}
}
     772:	df 91       	pop	r29
     774:	cf 91       	pop	r28
     776:	1f 91       	pop	r17
     778:	0f 91       	pop	r16
     77a:	ff 90       	pop	r15
     77c:	ef 90       	pop	r14
     77e:	df 90       	pop	r13
     780:	cf 90       	pop	r12
     782:	bf 90       	pop	r11
     784:	af 90       	pop	r10
     786:	9f 90       	pop	r9
     788:	8f 90       	pop	r8
     78a:	7f 90       	pop	r7
     78c:	6f 90       	pop	r6
     78e:	5f 90       	pop	r5
     790:	4f 90       	pop	r4
     792:	08 95       	ret

00000794 <main>:
Main Loop
************************************************************/
int main(void)
{
	/* Confirm Power */
	m_red(ON);
     794:	6e 9a       	sbi	0x0d, 6	; 13
     796:	76 98       	cbi	0x0e, 6	; 14

	/* Initializations */
	init();
     798:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <init>
}

/* Setup USB */
void usb_enable(void)
{
	m_usb_init();
     79c:	0e 94 bf 05 	call	0xb7e	; 0xb7e <m_usb_init>

	/* Initializations */
	init();
	usb_enable();
	//wireless_enable();
	timer1_init();
     7a0:	0e 94 08 01 	call	0x210	; 0x210 <timer1_init>
	timer3_init();
     7a4:	0e 94 44 01 	call	0x288	; 0x288 <timer3_init>

	/* Confirm successful initialization(s) */
	m_green(ON);
     7a8:	6a 9a       	sbi	0x0d, 2	; 13
     7aa:	72 98       	cbi	0x0e, 2	; 14

	/* Run */
	while (1){
		update_angle();
     7ac:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <update_angle>
	}
     7b0:	fd cf       	rjmp	.-6      	; 0x7ac <main+0x18>

000007b2 <__vector_3>:

/************************************************************
Interrupts
************************************************************/

ISR(INT2_vect){
     7b2:	1f 92       	push	r1
     7b4:	0f 92       	push	r0
     7b6:	0f b6       	in	r0, 0x3f	; 63
     7b8:	0f 92       	push	r0
     7ba:	11 24       	eor	r1, r1
     7bc:	2f 93       	push	r18
     7be:	3f 93       	push	r19
     7c0:	4f 93       	push	r20
     7c2:	5f 93       	push	r21
     7c4:	6f 93       	push	r22
     7c6:	7f 93       	push	r23
     7c8:	8f 93       	push	r24
     7ca:	9f 93       	push	r25
     7cc:	af 93       	push	r26
     7ce:	bf 93       	push	r27
     7d0:	ef 93       	push	r30
     7d2:	ff 93       	push	r31
	wireless_recieve();
     7d4:	0e 94 f7 00 	call	0x1ee	; 0x1ee <wireless_recieve>
}
     7d8:	ff 91       	pop	r31
     7da:	ef 91       	pop	r30
     7dc:	bf 91       	pop	r27
     7de:	af 91       	pop	r26
     7e0:	9f 91       	pop	r25
     7e2:	8f 91       	pop	r24
     7e4:	7f 91       	pop	r23
     7e6:	6f 91       	pop	r22
     7e8:	5f 91       	pop	r21
     7ea:	4f 91       	pop	r20
     7ec:	3f 91       	pop	r19
     7ee:	2f 91       	pop	r18
     7f0:	0f 90       	pop	r0
     7f2:	0f be       	out	0x3f, r0	; 63
     7f4:	0f 90       	pop	r0
     7f6:	1f 90       	pop	r1
     7f8:	18 95       	reti

000007fa <m_bus_init>:
     7fa:	58 9a       	sbi	0x0b, 0	; 11
     7fc:	59 9a       	sbi	0x0b, 1	; 11
     7fe:	5a 9a       	sbi	0x0b, 2	; 11
     800:	8c e0       	ldi	r24, 0x0C	; 12
     802:	80 93 b8 00 	sts	0x00B8, r24
     806:	e9 e6       	ldi	r30, 0x69	; 105
     808:	f0 e0       	ldi	r31, 0x00	; 0
     80a:	80 81       	ld	r24, Z
     80c:	80 62       	ori	r24, 0x20	; 32
     80e:	80 83       	st	Z, r24
     810:	80 81       	ld	r24, Z
     812:	8f 7e       	andi	r24, 0xEF	; 239
     814:	80 83       	st	Z, r24
     816:	ea 9a       	sbi	0x1d, 2	; 29
     818:	78 94       	sei
     81a:	08 95       	ret

0000081c <twi_read_byte>:
     81c:	84 e8       	ldi	r24, 0x84	; 132
     81e:	80 93 bc 00 	sts	0x00BC, r24
     822:	ec eb       	ldi	r30, 0xBC	; 188
     824:	f0 e0       	ldi	r31, 0x00	; 0
     826:	80 81       	ld	r24, Z
     828:	88 23       	and	r24, r24
     82a:	ec f7       	brge	.-6      	; 0x826 <twi_read_byte+0xa>
     82c:	80 91 bb 00 	lds	r24, 0x00BB
     830:	08 95       	ret

00000832 <twi_wait_for_ack>:
     832:	20 e0       	ldi	r18, 0x00	; 0
     834:	30 e0       	ldi	r19, 0x00	; 0
     836:	ec eb       	ldi	r30, 0xBC	; 188
     838:	f0 e0       	ldi	r31, 0x00	; 0
     83a:	80 81       	ld	r24, Z
     83c:	88 23       	and	r24, r24
     83e:	34 f0       	brlt	.+12     	; 0x84c <twi_wait_for_ack+0x1a>
     840:	2f 5f       	subi	r18, 0xFF	; 255
     842:	3f 4f       	sbci	r19, 0xFF	; 255
     844:	29 3e       	cpi	r18, 0xE9	; 233
     846:	83 e0       	ldi	r24, 0x03	; 3
     848:	38 07       	cpc	r19, r24
     84a:	b9 f7       	brne	.-18     	; 0x83a <twi_wait_for_ack+0x8>
     84c:	81 e0       	ldi	r24, 0x01	; 1
     84e:	28 3e       	cpi	r18, 0xE8	; 232
     850:	33 40       	sbci	r19, 0x03	; 3
     852:	09 f4       	brne	.+2      	; 0x856 <twi_wait_for_ack+0x24>
     854:	80 e0       	ldi	r24, 0x00	; 0
     856:	08 95       	ret

00000858 <twi_send_byte>:
     858:	80 93 bb 00 	sts	0x00BB, r24
     85c:	84 e8       	ldi	r24, 0x84	; 132
     85e:	80 93 bc 00 	sts	0x00BC, r24
     862:	0e 94 19 04 	call	0x832	; 0x832 <twi_wait_for_ack>
     866:	88 23       	and	r24, r24
     868:	19 f0       	breq	.+6      	; 0x870 <twi_send_byte+0x18>
     86a:	80 91 b9 00 	lds	r24, 0x00B9
     86e:	88 7f       	andi	r24, 0xF8	; 248
     870:	08 95       	ret

00000872 <twi_start>:
     872:	cf 93       	push	r28
     874:	df 93       	push	r29
     876:	c8 2f       	mov	r28, r24
     878:	d6 2f       	mov	r29, r22
     87a:	84 ea       	ldi	r24, 0xA4	; 164
     87c:	80 93 bc 00 	sts	0x00BC, r24
     880:	0e 94 19 04 	call	0x832	; 0x832 <twi_wait_for_ack>
     884:	81 11       	cpse	r24, r1
     886:	04 c0       	rjmp	.+8      	; 0x890 <twi_start+0x1e>
     888:	94 e9       	ldi	r25, 0x94	; 148
     88a:	90 93 bc 00 	sts	0x00BC, r25
     88e:	1c c0       	rjmp	.+56     	; 0x8c8 <twi_start+0x56>
     890:	dd 23       	and	r29, r29
     892:	61 f0       	breq	.+24     	; 0x8ac <twi_start+0x3a>
     894:	8c 2f       	mov	r24, r28
     896:	88 0f       	add	r24, r24
     898:	8f 5f       	subi	r24, 0xFF	; 255
     89a:	0e 94 2c 04 	call	0x858	; 0x858 <twi_send_byte>
     89e:	88 34       	cpi	r24, 0x48	; 72
     8a0:	81 f4       	brne	.+32     	; 0x8c2 <twi_start+0x50>
     8a2:	84 e9       	ldi	r24, 0x94	; 148
     8a4:	80 93 bc 00 	sts	0x00BC, r24
     8a8:	80 e0       	ldi	r24, 0x00	; 0
     8aa:	0e c0       	rjmp	.+28     	; 0x8c8 <twi_start+0x56>
     8ac:	8c 2f       	mov	r24, r28
     8ae:	88 0f       	add	r24, r24
     8b0:	0e 94 2c 04 	call	0x858	; 0x858 <twi_send_byte>
     8b4:	80 32       	cpi	r24, 0x20	; 32
     8b6:	39 f4       	brne	.+14     	; 0x8c6 <twi_start+0x54>
     8b8:	84 e9       	ldi	r24, 0x94	; 148
     8ba:	80 93 bc 00 	sts	0x00BC, r24
     8be:	80 e0       	ldi	r24, 0x00	; 0
     8c0:	03 c0       	rjmp	.+6      	; 0x8c8 <twi_start+0x56>
     8c2:	81 e0       	ldi	r24, 0x01	; 1
     8c4:	01 c0       	rjmp	.+2      	; 0x8c8 <twi_start+0x56>
     8c6:	81 e0       	ldi	r24, 0x01	; 1
     8c8:	df 91       	pop	r29
     8ca:	cf 91       	pop	r28
     8cc:	08 95       	ret

000008ce <m_read_register>:
     8ce:	cf 93       	push	r28
     8d0:	df 93       	push	r29
     8d2:	c8 2f       	mov	r28, r24
     8d4:	d6 2f       	mov	r29, r22
     8d6:	60 e0       	ldi	r22, 0x00	; 0
     8d8:	0e 94 39 04 	call	0x872	; 0x872 <twi_start>
     8dc:	88 23       	and	r24, r24
     8de:	79 f0       	breq	.+30     	; 0x8fe <m_read_register+0x30>
     8e0:	8d 2f       	mov	r24, r29
     8e2:	0e 94 2c 04 	call	0x858	; 0x858 <twi_send_byte>
     8e6:	88 23       	and	r24, r24
     8e8:	51 f0       	breq	.+20     	; 0x8fe <m_read_register+0x30>
     8ea:	84 e9       	ldi	r24, 0x94	; 148
     8ec:	80 93 bc 00 	sts	0x00BC, r24
     8f0:	61 e0       	ldi	r22, 0x01	; 1
     8f2:	8c 2f       	mov	r24, r28
     8f4:	0e 94 39 04 	call	0x872	; 0x872 <twi_start>
     8f8:	81 11       	cpse	r24, r1
     8fa:	0e 94 0e 04 	call	0x81c	; 0x81c <twi_read_byte>
     8fe:	df 91       	pop	r29
     900:	cf 91       	pop	r28
     902:	08 95       	ret

00000904 <m_write_register>:
     904:	cf 93       	push	r28
     906:	df 93       	push	r29
     908:	c6 2f       	mov	r28, r22
     90a:	d4 2f       	mov	r29, r20
     90c:	60 e0       	ldi	r22, 0x00	; 0
     90e:	0e 94 39 04 	call	0x872	; 0x872 <twi_start>
     912:	88 23       	and	r24, r24
     914:	71 f0       	breq	.+28     	; 0x932 <m_write_register+0x2e>
     916:	8c 2f       	mov	r24, r28
     918:	0e 94 2c 04 	call	0x858	; 0x858 <twi_send_byte>
     91c:	88 23       	and	r24, r24
     91e:	49 f0       	breq	.+18     	; 0x932 <m_write_register+0x2e>
     920:	8d 2f       	mov	r24, r29
     922:	0e 94 2c 04 	call	0x858	; 0x858 <twi_send_byte>
     926:	88 23       	and	r24, r24
     928:	21 f0       	breq	.+8      	; 0x932 <m_write_register+0x2e>
     92a:	84 e9       	ldi	r24, 0x94	; 148
     92c:	80 93 bc 00 	sts	0x00BC, r24
     930:	81 e0       	ldi	r24, 0x01	; 1
     932:	df 91       	pop	r29
     934:	cf 91       	pop	r28
     936:	08 95       	ret

00000938 <m_imu_init>:
     938:	cf 93       	push	r28
     93a:	df 93       	push	r29
     93c:	84 30       	cpi	r24, 0x04	; 4
     93e:	08 f0       	brcs	.+2      	; 0x942 <m_imu_init+0xa>
     940:	60 c0       	rjmp	.+192    	; 0xa02 <m_imu_init+0xca>
     942:	64 30       	cpi	r22, 0x04	; 4
     944:	08 f0       	brcs	.+2      	; 0x948 <m_imu_init+0x10>
     946:	5f c0       	rjmp	.+190    	; 0xa06 <m_imu_init+0xce>
     948:	d6 2f       	mov	r29, r22
     94a:	c8 2f       	mov	r28, r24
     94c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <m_bus_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     950:	2f e5       	ldi	r18, 0x5F	; 95
     952:	8a ee       	ldi	r24, 0xEA	; 234
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	21 50       	subi	r18, 0x01	; 1
     958:	80 40       	sbci	r24, 0x00	; 0
     95a:	90 40       	sbci	r25, 0x00	; 0
     95c:	e1 f7       	brne	.-8      	; 0x956 <m_imu_init+0x1e>
     95e:	00 c0       	rjmp	.+0      	; 0x960 <m_imu_init+0x28>
     960:	00 00       	nop
     962:	65 e7       	ldi	r22, 0x75	; 117
     964:	89 e6       	ldi	r24, 0x69	; 105
     966:	0e 94 67 04 	call	0x8ce	; 0x8ce <m_read_register>
     96a:	88 36       	cpi	r24, 0x68	; 104
     96c:	09 f0       	breq	.+2      	; 0x970 <m_imu_init+0x38>
     96e:	4d c0       	rjmp	.+154    	; 0xa0a <m_imu_init+0xd2>
     970:	41 e0       	ldi	r20, 0x01	; 1
     972:	6b e6       	ldi	r22, 0x6B	; 107
     974:	89 e6       	ldi	r24, 0x69	; 105
     976:	0e 94 82 04 	call	0x904	; 0x904 <m_write_register>
     97a:	4c 2f       	mov	r20, r28
     97c:	44 0f       	add	r20, r20
     97e:	44 0f       	add	r20, r20
     980:	44 0f       	add	r20, r20
     982:	6c e1       	ldi	r22, 0x1C	; 28
     984:	89 e6       	ldi	r24, 0x69	; 105
     986:	0e 94 82 04 	call	0x904	; 0x904 <m_write_register>
     98a:	4d 2f       	mov	r20, r29
     98c:	44 0f       	add	r20, r20
     98e:	44 0f       	add	r20, r20
     990:	44 0f       	add	r20, r20
     992:	6b e1       	ldi	r22, 0x1B	; 27
     994:	89 e6       	ldi	r24, 0x69	; 105
     996:	0e 94 82 04 	call	0x904	; 0x904 <m_write_register>
     99a:	42 e0       	ldi	r20, 0x02	; 2
     99c:	67 e3       	ldi	r22, 0x37	; 55
     99e:	89 e6       	ldi	r24, 0x69	; 105
     9a0:	0e 94 82 04 	call	0x904	; 0x904 <m_write_register>
     9a4:	40 e0       	ldi	r20, 0x00	; 0
     9a6:	62 e0       	ldi	r22, 0x02	; 2
     9a8:	8e e1       	ldi	r24, 0x1E	; 30
     9aa:	0e 94 82 04 	call	0x904	; 0x904 <m_write_register>
     9ae:	40 e0       	ldi	r20, 0x00	; 0
     9b0:	67 e3       	ldi	r22, 0x37	; 55
     9b2:	89 e6       	ldi	r24, 0x69	; 105
     9b4:	0e 94 82 04 	call	0x904	; 0x904 <m_write_register>
     9b8:	4e e1       	ldi	r20, 0x1E	; 30
     9ba:	64 e3       	ldi	r22, 0x34	; 52
     9bc:	89 e6       	ldi	r24, 0x69	; 105
     9be:	0e 94 82 04 	call	0x904	; 0x904 <m_write_register>
     9c2:	41 e0       	ldi	r20, 0x01	; 1
     9c4:	67 e6       	ldi	r22, 0x67	; 103
     9c6:	89 e6       	ldi	r24, 0x69	; 105
     9c8:	0e 94 82 04 	call	0x904	; 0x904 <m_write_register>
     9cc:	4d e1       	ldi	r20, 0x1D	; 29
     9ce:	64 e2       	ldi	r22, 0x24	; 36
     9d0:	89 e6       	ldi	r24, 0x69	; 105
     9d2:	0e 94 82 04 	call	0x904	; 0x904 <m_write_register>
     9d6:	4e e9       	ldi	r20, 0x9E	; 158
     9d8:	65 e2       	ldi	r22, 0x25	; 37
     9da:	89 e6       	ldi	r24, 0x69	; 105
     9dc:	0e 94 82 04 	call	0x904	; 0x904 <m_write_register>
     9e0:	43 e0       	ldi	r20, 0x03	; 3
     9e2:	66 e2       	ldi	r22, 0x26	; 38
     9e4:	89 e6       	ldi	r24, 0x69	; 105
     9e6:	0e 94 82 04 	call	0x904	; 0x904 <m_write_register>
     9ea:	46 e9       	ldi	r20, 0x96	; 150
     9ec:	67 e2       	ldi	r22, 0x27	; 39
     9ee:	89 e6       	ldi	r24, 0x69	; 105
     9f0:	0e 94 82 04 	call	0x904	; 0x904 <m_write_register>
     9f4:	40 e2       	ldi	r20, 0x20	; 32
     9f6:	6a e6       	ldi	r22, 0x6A	; 106
     9f8:	89 e6       	ldi	r24, 0x69	; 105
     9fa:	0e 94 82 04 	call	0x904	; 0x904 <m_write_register>
     9fe:	81 e0       	ldi	r24, 0x01	; 1
     a00:	05 c0       	rjmp	.+10     	; 0xa0c <m_imu_init+0xd4>
     a02:	80 e0       	ldi	r24, 0x00	; 0
     a04:	03 c0       	rjmp	.+6      	; 0xa0c <m_imu_init+0xd4>
     a06:	80 e0       	ldi	r24, 0x00	; 0
     a08:	01 c0       	rjmp	.+2      	; 0xa0c <m_imu_init+0xd4>
     a0a:	80 e0       	ldi	r24, 0x00	; 0
     a0c:	df 91       	pop	r29
     a0e:	cf 91       	pop	r28
     a10:	08 95       	ret

00000a12 <m_imu_raw>:
     a12:	cf 92       	push	r12
     a14:	df 92       	push	r13
     a16:	ef 92       	push	r14
     a18:	ff 92       	push	r15
     a1a:	1f 93       	push	r17
     a1c:	cf 93       	push	r28
     a1e:	df 93       	push	r29
     a20:	cd b7       	in	r28, 0x3d	; 61
     a22:	de b7       	in	r29, 0x3e	; 62
     a24:	64 97       	sbiw	r28, 0x14	; 20
     a26:	0f b6       	in	r0, 0x3f	; 63
     a28:	f8 94       	cli
     a2a:	de bf       	out	0x3e, r29	; 62
     a2c:	0f be       	out	0x3f, r0	; 63
     a2e:	cd bf       	out	0x3d, r28	; 61
     a30:	6c 01       	movw	r12, r24
     a32:	ce 01       	movw	r24, r28
     a34:	01 96       	adiw	r24, 0x01	; 1
     a36:	7c 01       	movw	r14, r24
     a38:	1e e4       	ldi	r17, 0x4E	; 78
     a3a:	61 2f       	mov	r22, r17
     a3c:	89 e6       	ldi	r24, 0x69	; 105
     a3e:	0e 94 67 04 	call	0x8ce	; 0x8ce <m_read_register>
     a42:	f7 01       	movw	r30, r14
     a44:	81 93       	st	Z+, r24
     a46:	7f 01       	movw	r14, r30
     a48:	11 50       	subi	r17, 0x01	; 1
     a4a:	1a 33       	cpi	r17, 0x3A	; 58
     a4c:	b1 f7       	brne	.-20     	; 0xa3a <m_imu_raw+0x28>
     a4e:	8f 85       	ldd	r24, Y+15	; 0x0f
     a50:	98 89       	ldd	r25, Y+16	; 0x10
     a52:	f6 01       	movw	r30, r12
     a54:	95 83       	std	Z+5, r25	; 0x05
     a56:	84 83       	std	Z+4, r24	; 0x04
     a58:	8f 81       	ldd	r24, Y+7	; 0x07
     a5a:	98 85       	ldd	r25, Y+8	; 0x08
     a5c:	93 87       	std	Z+11, r25	; 0x0b
     a5e:	82 87       	std	Z+10, r24	; 0x0a
     a60:	89 81       	ldd	r24, Y+1	; 0x01
     a62:	9a 81       	ldd	r25, Y+2	; 0x02
     a64:	91 8b       	std	Z+17, r25	; 0x11
     a66:	80 8b       	std	Z+16, r24	; 0x10
     a68:	89 89       	ldd	r24, Y+17	; 0x11
     a6a:	9a 89       	ldd	r25, Y+18	; 0x12
     a6c:	93 83       	std	Z+3, r25	; 0x03
     a6e:	82 83       	std	Z+2, r24	; 0x02
     a70:	89 85       	ldd	r24, Y+9	; 0x09
     a72:	9a 85       	ldd	r25, Y+10	; 0x0a
     a74:	91 87       	std	Z+9, r25	; 0x09
     a76:	80 87       	std	Z+8, r24	; 0x08
     a78:	8b 81       	ldd	r24, Y+3	; 0x03
     a7a:	9c 81       	ldd	r25, Y+4	; 0x04
     a7c:	97 87       	std	Z+15, r25	; 0x0f
     a7e:	86 87       	std	Z+14, r24	; 0x0e
     a80:	8b 89       	ldd	r24, Y+19	; 0x13
     a82:	9c 89       	ldd	r25, Y+20	; 0x14
     a84:	91 83       	std	Z+1, r25	; 0x01
     a86:	80 83       	st	Z, r24
     a88:	8b 85       	ldd	r24, Y+11	; 0x0b
     a8a:	9c 85       	ldd	r25, Y+12	; 0x0c
     a8c:	97 83       	std	Z+7, r25	; 0x07
     a8e:	86 83       	std	Z+6, r24	; 0x06
     a90:	8d 81       	ldd	r24, Y+5	; 0x05
     a92:	9e 81       	ldd	r25, Y+6	; 0x06
     a94:	95 87       	std	Z+13, r25	; 0x0d
     a96:	84 87       	std	Z+12, r24	; 0x0c
     a98:	81 e0       	ldi	r24, 0x01	; 1
     a9a:	64 96       	adiw	r28, 0x14	; 20
     a9c:	0f b6       	in	r0, 0x3f	; 63
     a9e:	f8 94       	cli
     aa0:	de bf       	out	0x3e, r29	; 62
     aa2:	0f be       	out	0x3f, r0	; 63
     aa4:	cd bf       	out	0x3d, r28	; 61
     aa6:	df 91       	pop	r29
     aa8:	cf 91       	pop	r28
     aaa:	1f 91       	pop	r17
     aac:	ff 90       	pop	r15
     aae:	ef 90       	pop	r14
     ab0:	df 90       	pop	r13
     ab2:	cf 90       	pop	r12
     ab4:	08 95       	ret

00000ab6 <m_rf_read>:
     ab6:	cf 93       	push	r28
     ab8:	df 93       	push	r29
     aba:	9c 01       	movw	r18, r24
     abc:	84 ea       	ldi	r24, 0xA4	; 164
     abe:	80 93 bc 00 	sts	0x00BC, r24
     ac2:	ec eb       	ldi	r30, 0xBC	; 188
     ac4:	f0 e0       	ldi	r31, 0x00	; 0
     ac6:	90 81       	ld	r25, Z
     ac8:	99 23       	and	r25, r25
     aca:	ec f7       	brge	.-6      	; 0xac6 <m_rf_read+0x10>
     acc:	81 e5       	ldi	r24, 0x51	; 81
     ace:	80 93 bb 00 	sts	0x00BB, r24
     ad2:	84 e8       	ldi	r24, 0x84	; 132
     ad4:	80 93 bc 00 	sts	0x00BC, r24
     ad8:	ec eb       	ldi	r30, 0xBC	; 188
     ada:	f0 e0       	ldi	r31, 0x00	; 0
     adc:	90 81       	ld	r25, Z
     ade:	99 23       	and	r25, r25
     ae0:	ec f7       	brge	.-6      	; 0xadc <m_rf_read+0x26>
     ae2:	80 91 b9 00 	lds	r24, 0x00B9
     ae6:	88 7f       	andi	r24, 0xF8	; 248
     ae8:	88 34       	cpi	r24, 0x48	; 72
     aea:	29 f4       	brne	.+10     	; 0xaf6 <m_rf_read+0x40>
     aec:	84 e9       	ldi	r24, 0x94	; 148
     aee:	80 93 bc 00 	sts	0x00BC, r24
     af2:	80 e0       	ldi	r24, 0x00	; 0
     af4:	41 c0       	rjmp	.+130    	; 0xb78 <__stack+0x79>
     af6:	84 ec       	ldi	r24, 0xC4	; 196
     af8:	80 93 bc 00 	sts	0x00BC, r24
     afc:	ec eb       	ldi	r30, 0xBC	; 188
     afe:	f0 e0       	ldi	r31, 0x00	; 0
     b00:	90 81       	ld	r25, Z
     b02:	99 23       	and	r25, r25
     b04:	ec f7       	brge	.-6      	; 0xb00 <__stack+0x1>
     b06:	40 91 bb 00 	lds	r20, 0x00BB
     b0a:	46 13       	cpse	r20, r22
     b0c:	09 c0       	rjmp	.+18     	; 0xb20 <__stack+0x21>
     b0e:	84 2f       	mov	r24, r20
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	01 97       	sbiw	r24, 0x01	; 1
     b14:	18 16       	cp	r1, r24
     b16:	19 06       	cpc	r1, r25
     b18:	44 f0       	brlt	.+16     	; 0xb2a <__stack+0x2b>
     b1a:	40 e0       	ldi	r20, 0x00	; 0
     b1c:	50 e0       	ldi	r21, 0x00	; 0
     b1e:	1a c0       	rjmp	.+52     	; 0xb54 <__stack+0x55>
     b20:	84 e9       	ldi	r24, 0x94	; 148
     b22:	80 93 bc 00 	sts	0x00BC, r24
     b26:	80 e0       	ldi	r24, 0x00	; 0
     b28:	27 c0       	rjmp	.+78     	; 0xb78 <__stack+0x79>
     b2a:	d9 01       	movw	r26, r18
     b2c:	50 e0       	ldi	r21, 0x00	; 0
     b2e:	41 50       	subi	r20, 0x01	; 1
     b30:	51 09       	sbc	r21, r1
     b32:	b9 01       	movw	r22, r18
     b34:	64 0f       	add	r22, r20
     b36:	75 1f       	adc	r23, r21
     b38:	ec eb       	ldi	r30, 0xBC	; 188
     b3a:	f0 e0       	ldi	r31, 0x00	; 0
     b3c:	84 ec       	ldi	r24, 0xC4	; 196
     b3e:	cb eb       	ldi	r28, 0xBB	; 187
     b40:	d0 e0       	ldi	r29, 0x00	; 0
     b42:	80 83       	st	Z, r24
     b44:	90 81       	ld	r25, Z
     b46:	99 23       	and	r25, r25
     b48:	ec f7       	brge	.-6      	; 0xb44 <__stack+0x45>
     b4a:	98 81       	ld	r25, Y
     b4c:	9d 93       	st	X+, r25
     b4e:	a6 17       	cp	r26, r22
     b50:	b7 07       	cpc	r27, r23
     b52:	b9 f7       	brne	.-18     	; 0xb42 <__stack+0x43>
     b54:	84 e8       	ldi	r24, 0x84	; 132
     b56:	80 93 bc 00 	sts	0x00BC, r24
     b5a:	ec eb       	ldi	r30, 0xBC	; 188
     b5c:	f0 e0       	ldi	r31, 0x00	; 0
     b5e:	90 81       	ld	r25, Z
     b60:	99 23       	and	r25, r25
     b62:	ec f7       	brge	.-6      	; 0xb5e <__stack+0x5f>
     b64:	80 91 bb 00 	lds	r24, 0x00BB
     b68:	f9 01       	movw	r30, r18
     b6a:	e4 0f       	add	r30, r20
     b6c:	f5 1f       	adc	r31, r21
     b6e:	80 83       	st	Z, r24
     b70:	84 e9       	ldi	r24, 0x94	; 148
     b72:	80 93 bc 00 	sts	0x00BC, r24
     b76:	81 e0       	ldi	r24, 0x01	; 1
     b78:	df 91       	pop	r29
     b7a:	cf 91       	pop	r28
     b7c:	08 95       	ret

00000b7e <m_usb_init>:
     b7e:	81 e0       	ldi	r24, 0x01	; 1
     b80:	80 93 d7 00 	sts	0x00D7, r24
     b84:	80 ea       	ldi	r24, 0xA0	; 160
     b86:	80 93 d8 00 	sts	0x00D8, r24
     b8a:	82 e1       	ldi	r24, 0x12	; 18
     b8c:	89 bd       	out	0x29, r24	; 41
     b8e:	09 b4       	in	r0, 0x29	; 41
     b90:	00 fe       	sbrs	r0, 0
     b92:	fd cf       	rjmp	.-6      	; 0xb8e <m_usb_init+0x10>
     b94:	80 e9       	ldi	r24, 0x90	; 144
     b96:	80 93 d8 00 	sts	0x00D8, r24
     b9a:	10 92 e0 00 	sts	0x00E0, r1
     b9e:	10 92 3b 01 	sts	0x013B, r1
     ba2:	10 92 38 01 	sts	0x0138, r1
     ba6:	8c e0       	ldi	r24, 0x0C	; 12
     ba8:	80 93 e2 00 	sts	0x00E2, r24
     bac:	78 94       	sei
     bae:	08 95       	ret

00000bb0 <m_usb_tx_char>:
     bb0:	cf 93       	push	r28
     bb2:	df 93       	push	r29
     bb4:	90 91 3b 01 	lds	r25, 0x013B
     bb8:	99 23       	and	r25, r25
     bba:	09 f4       	brne	.+2      	; 0xbbe <m_usb_tx_char+0xe>
     bbc:	4c c0       	rjmp	.+152    	; 0xc56 <m_usb_tx_char+0xa6>
     bbe:	9f b7       	in	r25, 0x3f	; 63
     bc0:	f8 94       	cli
     bc2:	24 e0       	ldi	r18, 0x04	; 4
     bc4:	20 93 e9 00 	sts	0x00E9, r18
     bc8:	20 91 39 01 	lds	r18, 0x0139
     bcc:	22 23       	and	r18, r18
     bce:	49 f0       	breq	.+18     	; 0xbe2 <m_usb_tx_char+0x32>
     bd0:	20 91 e8 00 	lds	r18, 0x00E8
     bd4:	25 fd       	sbrc	r18, 5
     bd6:	03 c0       	rjmp	.+6      	; 0xbde <m_usb_tx_char+0x2e>
     bd8:	9f bf       	out	0x3f, r25	; 63
     bda:	8f ef       	ldi	r24, 0xFF	; 255
     bdc:	41 c0       	rjmp	.+130    	; 0xc60 <m_usb_tx_char+0xb0>
     bde:	10 92 39 01 	sts	0x0139, r1
     be2:	30 91 e4 00 	lds	r19, 0x00E4
     be6:	37 5e       	subi	r19, 0xE7	; 231
     be8:	20 91 e8 00 	lds	r18, 0x00E8
     bec:	25 fd       	sbrc	r18, 5
     bee:	24 c0       	rjmp	.+72     	; 0xc38 <m_usb_tx_char+0x88>
     bf0:	9f bf       	out	0x3f, r25	; 63
     bf2:	90 91 e4 00 	lds	r25, 0x00E4
     bf6:	93 17       	cp	r25, r19
     bf8:	81 f0       	breq	.+32     	; 0xc1a <m_usb_tx_char+0x6a>
     bfa:	90 91 3b 01 	lds	r25, 0x013B
     bfe:	99 23       	and	r25, r25
     c00:	61 f1       	breq	.+88     	; 0xc5a <m_usb_tx_char+0xaa>
     c02:	a9 ee       	ldi	r26, 0xE9	; 233
     c04:	b0 e0       	ldi	r27, 0x00	; 0
     c06:	44 e0       	ldi	r20, 0x04	; 4
     c08:	e8 ee       	ldi	r30, 0xE8	; 232
     c0a:	f0 e0       	ldi	r31, 0x00	; 0
     c0c:	c4 ee       	ldi	r28, 0xE4	; 228
     c0e:	d0 e0       	ldi	r29, 0x00	; 0
     c10:	0d c0       	rjmp	.+26     	; 0xc2c <m_usb_tx_char+0x7c>
     c12:	9f bf       	out	0x3f, r25	; 63
     c14:	98 81       	ld	r25, Y
     c16:	93 13       	cpse	r25, r19
     c18:	05 c0       	rjmp	.+10     	; 0xc24 <m_usb_tx_char+0x74>
     c1a:	81 e0       	ldi	r24, 0x01	; 1
     c1c:	80 93 39 01 	sts	0x0139, r24
     c20:	8f ef       	ldi	r24, 0xFF	; 255
     c22:	1e c0       	rjmp	.+60     	; 0xc60 <m_usb_tx_char+0xb0>
     c24:	90 91 3b 01 	lds	r25, 0x013B
     c28:	99 23       	and	r25, r25
     c2a:	c9 f0       	breq	.+50     	; 0xc5e <m_usb_tx_char+0xae>
     c2c:	9f b7       	in	r25, 0x3f	; 63
     c2e:	f8 94       	cli
     c30:	4c 93       	st	X, r20
     c32:	20 81       	ld	r18, Z
     c34:	25 ff       	sbrs	r18, 5
     c36:	ed cf       	rjmp	.-38     	; 0xc12 <m_usb_tx_char+0x62>
     c38:	80 93 f1 00 	sts	0x00F1, r24
     c3c:	80 91 e8 00 	lds	r24, 0x00E8
     c40:	85 fd       	sbrc	r24, 5
     c42:	03 c0       	rjmp	.+6      	; 0xc4a <m_usb_tx_char+0x9a>
     c44:	8a e3       	ldi	r24, 0x3A	; 58
     c46:	80 93 e8 00 	sts	0x00E8, r24
     c4a:	85 e0       	ldi	r24, 0x05	; 5
     c4c:	80 93 3a 01 	sts	0x013A, r24
     c50:	9f bf       	out	0x3f, r25	; 63
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	05 c0       	rjmp	.+10     	; 0xc60 <m_usb_tx_char+0xb0>
     c56:	8f ef       	ldi	r24, 0xFF	; 255
     c58:	03 c0       	rjmp	.+6      	; 0xc60 <m_usb_tx_char+0xb0>
     c5a:	8f ef       	ldi	r24, 0xFF	; 255
     c5c:	01 c0       	rjmp	.+2      	; 0xc60 <m_usb_tx_char+0xb0>
     c5e:	8f ef       	ldi	r24, 0xFF	; 255
     c60:	df 91       	pop	r29
     c62:	cf 91       	pop	r28
     c64:	08 95       	ret

00000c66 <__vector_10>:
     c66:	1f 92       	push	r1
     c68:	0f 92       	push	r0
     c6a:	0f b6       	in	r0, 0x3f	; 63
     c6c:	0f 92       	push	r0
     c6e:	11 24       	eor	r1, r1
     c70:	8f 93       	push	r24
     c72:	9f 93       	push	r25
     c74:	ef 93       	push	r30
     c76:	ff 93       	push	r31
     c78:	e1 ee       	ldi	r30, 0xE1	; 225
     c7a:	f0 e0       	ldi	r31, 0x00	; 0
     c7c:	80 81       	ld	r24, Z
     c7e:	10 82       	st	Z, r1
     c80:	83 ff       	sbrs	r24, 3
     c82:	11 c0       	rjmp	.+34     	; 0xca6 <__vector_10+0x40>
     c84:	10 92 e9 00 	sts	0x00E9, r1
     c88:	91 e0       	ldi	r25, 0x01	; 1
     c8a:	90 93 eb 00 	sts	0x00EB, r25
     c8e:	10 92 ec 00 	sts	0x00EC, r1
     c92:	92 e1       	ldi	r25, 0x12	; 18
     c94:	90 93 ed 00 	sts	0x00ED, r25
     c98:	98 e0       	ldi	r25, 0x08	; 8
     c9a:	90 93 f0 00 	sts	0x00F0, r25
     c9e:	10 92 3b 01 	sts	0x013B, r1
     ca2:	10 92 38 01 	sts	0x0138, r1
     ca6:	82 ff       	sbrs	r24, 2
     ca8:	13 c0       	rjmp	.+38     	; 0xcd0 <__vector_10+0x6a>
     caa:	80 91 3b 01 	lds	r24, 0x013B
     cae:	88 23       	and	r24, r24
     cb0:	79 f0       	breq	.+30     	; 0xcd0 <__vector_10+0x6a>
     cb2:	80 91 3a 01 	lds	r24, 0x013A
     cb6:	88 23       	and	r24, r24
     cb8:	59 f0       	breq	.+22     	; 0xcd0 <__vector_10+0x6a>
     cba:	81 50       	subi	r24, 0x01	; 1
     cbc:	80 93 3a 01 	sts	0x013A, r24
     cc0:	81 11       	cpse	r24, r1
     cc2:	06 c0       	rjmp	.+12     	; 0xcd0 <__vector_10+0x6a>
     cc4:	84 e0       	ldi	r24, 0x04	; 4
     cc6:	80 93 e9 00 	sts	0x00E9, r24
     cca:	8a e3       	ldi	r24, 0x3A	; 58
     ccc:	80 93 e8 00 	sts	0x00E8, r24
     cd0:	ff 91       	pop	r31
     cd2:	ef 91       	pop	r30
     cd4:	9f 91       	pop	r25
     cd6:	8f 91       	pop	r24
     cd8:	0f 90       	pop	r0
     cda:	0f be       	out	0x3f, r0	; 63
     cdc:	0f 90       	pop	r0
     cde:	1f 90       	pop	r1
     ce0:	18 95       	reti

00000ce2 <__vector_11>:
     ce2:	1f 92       	push	r1
     ce4:	0f 92       	push	r0
     ce6:	0f b6       	in	r0, 0x3f	; 63
     ce8:	0f 92       	push	r0
     cea:	11 24       	eor	r1, r1
     cec:	0f 93       	push	r16
     cee:	1f 93       	push	r17
     cf0:	2f 93       	push	r18
     cf2:	3f 93       	push	r19
     cf4:	4f 93       	push	r20
     cf6:	5f 93       	push	r21
     cf8:	6f 93       	push	r22
     cfa:	7f 93       	push	r23
     cfc:	8f 93       	push	r24
     cfe:	9f 93       	push	r25
     d00:	af 93       	push	r26
     d02:	bf 93       	push	r27
     d04:	cf 93       	push	r28
     d06:	df 93       	push	r29
     d08:	ef 93       	push	r30
     d0a:	ff 93       	push	r31
     d0c:	10 92 e9 00 	sts	0x00E9, r1
     d10:	80 91 e8 00 	lds	r24, 0x00E8
     d14:	83 ff       	sbrs	r24, 3
     d16:	4c c1       	rjmp	.+664    	; 0xfb0 <__vector_11+0x2ce>
     d18:	e1 ef       	ldi	r30, 0xF1	; 241
     d1a:	f0 e0       	ldi	r31, 0x00	; 0
     d1c:	60 81       	ld	r22, Z
     d1e:	80 81       	ld	r24, Z
     d20:	20 81       	ld	r18, Z
     d22:	90 81       	ld	r25, Z
     d24:	30 e0       	ldi	r19, 0x00	; 0
     d26:	39 2b       	or	r19, r25
     d28:	40 81       	ld	r20, Z
     d2a:	90 81       	ld	r25, Z
     d2c:	50 e0       	ldi	r21, 0x00	; 0
     d2e:	59 2b       	or	r21, r25
     d30:	70 81       	ld	r23, Z
     d32:	c0 81       	ld	r28, Z
     d34:	92 ef       	ldi	r25, 0xF2	; 242
     d36:	90 93 e8 00 	sts	0x00E8, r25
     d3a:	86 30       	cpi	r24, 0x06	; 6
     d3c:	09 f0       	breq	.+2      	; 0xd40 <__vector_11+0x5e>
     d3e:	58 c0       	rjmp	.+176    	; 0xdf0 <__vector_11+0x10e>
     d40:	04 c0       	rjmp	.+8      	; 0xd4a <__vector_11+0x68>
     d42:	81 e2       	ldi	r24, 0x21	; 33
     d44:	80 93 eb 00 	sts	0x00EB, r24
     d48:	3a c1       	rjmp	.+628    	; 0xfbe <__vector_11+0x2dc>
     d4a:	66 e0       	ldi	r22, 0x06	; 6
     d4c:	8f ec       	ldi	r24, 0xCF	; 207
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	fc 01       	movw	r30, r24
     d52:	a5 91       	lpm	r26, Z+
     d54:	b4 91       	lpm	r27, Z
     d56:	2a 17       	cp	r18, r26
     d58:	3b 07       	cpc	r19, r27
     d5a:	11 f0       	breq	.+4      	; 0xd60 <__vector_11+0x7e>
     d5c:	07 96       	adiw	r24, 0x07	; 7
     d5e:	23 c0       	rjmp	.+70     	; 0xda6 <__vector_11+0xc4>
     d60:	fc 01       	movw	r30, r24
     d62:	32 96       	adiw	r30, 0x02	; 2
     d64:	a5 91       	lpm	r26, Z+
     d66:	b4 91       	lpm	r27, Z
     d68:	4a 17       	cp	r20, r26
     d6a:	5b 07       	cpc	r21, r27
     d6c:	11 f0       	breq	.+4      	; 0xd72 <__vector_11+0x90>
     d6e:	07 96       	adiw	r24, 0x07	; 7
     d70:	1a c0       	rjmp	.+52     	; 0xda6 <__vector_11+0xc4>
     d72:	fc 01       	movw	r30, r24
     d74:	34 96       	adiw	r30, 0x04	; 4
     d76:	45 91       	lpm	r20, Z+
     d78:	54 91       	lpm	r21, Z
     d7a:	fc 01       	movw	r30, r24
     d7c:	36 96       	adiw	r30, 0x06	; 6
     d7e:	24 91       	lpm	r18, Z
     d80:	87 2f       	mov	r24, r23
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	9c 2b       	or	r25, r28
     d86:	8f 3f       	cpi	r24, 0xFF	; 255
     d88:	91 05       	cpc	r25, r1
     d8a:	19 f0       	breq	.+6      	; 0xd92 <__vector_11+0xb0>
     d8c:	10 f0       	brcs	.+4      	; 0xd92 <__vector_11+0xb0>
     d8e:	8f ef       	ldi	r24, 0xFF	; 255
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	82 17       	cp	r24, r18
     d94:	08 f4       	brcc	.+2      	; 0xd98 <__vector_11+0xb6>
     d96:	28 2f       	mov	r18, r24
     d98:	a8 ee       	ldi	r26, 0xE8	; 232
     d9a:	b0 e0       	ldi	r27, 0x00	; 0
     d9c:	70 e1       	ldi	r23, 0x10	; 16
     d9e:	6e ef       	ldi	r22, 0xFE	; 254
     da0:	c1 ef       	ldi	r28, 0xF1	; 241
     da2:	d0 e0       	ldi	r29, 0x00	; 0
     da4:	03 c0       	rjmp	.+6      	; 0xdac <__vector_11+0xca>
     da6:	61 50       	subi	r22, 0x01	; 1
     da8:	99 f6       	brne	.-90     	; 0xd50 <__vector_11+0x6e>
     daa:	cb cf       	rjmp	.-106    	; 0xd42 <__vector_11+0x60>
     dac:	8c 91       	ld	r24, X
     dae:	98 2f       	mov	r25, r24
     db0:	95 70       	andi	r25, 0x05	; 5
     db2:	e1 f3       	breq	.-8      	; 0xdac <__vector_11+0xca>
     db4:	82 fd       	sbrc	r24, 2
     db6:	03 c1       	rjmp	.+518    	; 0xfbe <__vector_11+0x2dc>
     db8:	32 2f       	mov	r19, r18
     dba:	21 31       	cpi	r18, 0x11	; 17
     dbc:	08 f0       	brcs	.+2      	; 0xdc0 <__vector_11+0xde>
     dbe:	37 2f       	mov	r19, r23
     dc0:	33 23       	and	r19, r19
     dc2:	09 f4       	brne	.+2      	; 0xdc6 <__vector_11+0xe4>
     dc4:	f9 c0       	rjmp	.+498    	; 0xfb8 <__vector_11+0x2d6>
     dc6:	fa 01       	movw	r30, r20
     dc8:	83 2f       	mov	r24, r19
     dca:	94 91       	lpm	r25, Z
     dcc:	98 83       	st	Y, r25
     dce:	81 50       	subi	r24, 0x01	; 1
     dd0:	31 96       	adiw	r30, 0x01	; 1
     dd2:	81 11       	cpse	r24, r1
     dd4:	fa cf       	rjmp	.-12     	; 0xdca <__vector_11+0xe8>
     dd6:	8f ef       	ldi	r24, 0xFF	; 255
     dd8:	83 0f       	add	r24, r19
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	01 96       	adiw	r24, 0x01	; 1
     dde:	48 0f       	add	r20, r24
     de0:	59 1f       	adc	r21, r25
     de2:	23 1b       	sub	r18, r19
     de4:	6c 93       	st	X, r22
     de6:	21 11       	cpse	r18, r1
     de8:	e1 cf       	rjmp	.-62     	; 0xdac <__vector_11+0xca>
     dea:	30 31       	cpi	r19, 0x10	; 16
     dec:	f9 f2       	breq	.-66     	; 0xdac <__vector_11+0xca>
     dee:	e7 c0       	rjmp	.+462    	; 0xfbe <__vector_11+0x2dc>
     df0:	85 30       	cpi	r24, 0x05	; 5
     df2:	61 f4       	brne	.+24     	; 0xe0c <__vector_11+0x12a>
     df4:	8e ef       	ldi	r24, 0xFE	; 254
     df6:	80 93 e8 00 	sts	0x00E8, r24
     dfa:	e8 ee       	ldi	r30, 0xE8	; 232
     dfc:	f0 e0       	ldi	r31, 0x00	; 0
     dfe:	80 81       	ld	r24, Z
     e00:	80 ff       	sbrs	r24, 0
     e02:	fd cf       	rjmp	.-6      	; 0xdfe <__vector_11+0x11c>
     e04:	20 68       	ori	r18, 0x80	; 128
     e06:	20 93 e3 00 	sts	0x00E3, r18
     e0a:	d9 c0       	rjmp	.+434    	; 0xfbe <__vector_11+0x2dc>
     e0c:	89 30       	cpi	r24, 0x09	; 9
     e0e:	09 f0       	breq	.+2      	; 0xe12 <__vector_11+0x130>
     e10:	35 c0       	rjmp	.+106    	; 0xe7c <__vector_11+0x19a>
     e12:	61 11       	cpse	r22, r1
     e14:	cd c0       	rjmp	.+410    	; 0xfb0 <__vector_11+0x2ce>
     e16:	20 93 3b 01 	sts	0x013B, r18
     e1a:	10 92 38 01 	sts	0x0138, r1
     e1e:	10 92 3a 01 	sts	0x013A, r1
     e22:	8e ef       	ldi	r24, 0xFE	; 254
     e24:	80 93 e8 00 	sts	0x00E8, r24
     e28:	81 e0       	ldi	r24, 0x01	; 1
     e2a:	28 e7       	ldi	r18, 0x78	; 120
     e2c:	31 e0       	ldi	r19, 0x01	; 1
     e2e:	c9 ee       	ldi	r28, 0xE9	; 233
     e30:	d0 e0       	ldi	r29, 0x00	; 0
     e32:	ab ee       	ldi	r26, 0xEB	; 235
     e34:	b0 e0       	ldi	r27, 0x00	; 0
     e36:	0c ee       	ldi	r16, 0xEC	; 236
     e38:	10 e0       	ldi	r17, 0x00	; 0
     e3a:	6d ee       	ldi	r22, 0xED	; 237
     e3c:	70 e0       	ldi	r23, 0x00	; 0
     e3e:	88 83       	st	Y, r24
     e40:	a9 01       	movw	r20, r18
     e42:	4f 5f       	subi	r20, 0xFF	; 255
     e44:	5f 4f       	sbci	r21, 0xFF	; 255
     e46:	f9 01       	movw	r30, r18
     e48:	94 91       	lpm	r25, Z
     e4a:	9c 93       	st	X, r25
     e4c:	99 23       	and	r25, r25
     e4e:	61 f0       	breq	.+24     	; 0xe68 <__vector_11+0x186>
     e50:	fa 01       	movw	r30, r20
     e52:	44 91       	lpm	r20, Z
     e54:	f8 01       	movw	r30, r16
     e56:	40 83       	st	Z, r20
     e58:	f9 01       	movw	r30, r18
     e5a:	32 96       	adiw	r30, 0x02	; 2
     e5c:	94 91       	lpm	r25, Z
     e5e:	2d 5f       	subi	r18, 0xFD	; 253
     e60:	3f 4f       	sbci	r19, 0xFF	; 255
     e62:	fb 01       	movw	r30, r22
     e64:	90 83       	st	Z, r25
     e66:	01 c0       	rjmp	.+2      	; 0xe6a <__vector_11+0x188>
     e68:	9a 01       	movw	r18, r20
     e6a:	8f 5f       	subi	r24, 0xFF	; 255
     e6c:	85 30       	cpi	r24, 0x05	; 5
     e6e:	39 f7       	brne	.-50     	; 0xe3e <__vector_11+0x15c>
     e70:	ea ee       	ldi	r30, 0xEA	; 234
     e72:	f0 e0       	ldi	r31, 0x00	; 0
     e74:	8e e1       	ldi	r24, 0x1E	; 30
     e76:	80 83       	st	Z, r24
     e78:	10 82       	st	Z, r1
     e7a:	a1 c0       	rjmp	.+322    	; 0xfbe <__vector_11+0x2dc>
     e7c:	88 30       	cpi	r24, 0x08	; 8
     e7e:	81 f4       	brne	.+32     	; 0xea0 <__vector_11+0x1be>
     e80:	60 38       	cpi	r22, 0x80	; 128
     e82:	09 f0       	breq	.+2      	; 0xe86 <__vector_11+0x1a4>
     e84:	95 c0       	rjmp	.+298    	; 0xfb0 <__vector_11+0x2ce>
     e86:	e8 ee       	ldi	r30, 0xE8	; 232
     e88:	f0 e0       	ldi	r31, 0x00	; 0
     e8a:	80 81       	ld	r24, Z
     e8c:	80 ff       	sbrs	r24, 0
     e8e:	fd cf       	rjmp	.-6      	; 0xe8a <__vector_11+0x1a8>
     e90:	80 91 3b 01 	lds	r24, 0x013B
     e94:	80 93 f1 00 	sts	0x00F1, r24
     e98:	8e ef       	ldi	r24, 0xFE	; 254
     e9a:	80 93 e8 00 	sts	0x00E8, r24
     e9e:	8f c0       	rjmp	.+286    	; 0xfbe <__vector_11+0x2dc>
     ea0:	81 32       	cpi	r24, 0x21	; 33
     ea2:	b9 f4       	brne	.+46     	; 0xed2 <__vector_11+0x1f0>
     ea4:	61 3a       	cpi	r22, 0xA1	; 161
     ea6:	09 f0       	breq	.+2      	; 0xeaa <__vector_11+0x1c8>
     ea8:	83 c0       	rjmp	.+262    	; 0xfb0 <__vector_11+0x2ce>
     eaa:	e8 ee       	ldi	r30, 0xE8	; 232
     eac:	f0 e0       	ldi	r31, 0x00	; 0
     eae:	80 81       	ld	r24, Z
     eb0:	80 ff       	sbrs	r24, 0
     eb2:	fd cf       	rjmp	.-6      	; 0xeae <__vector_11+0x1cc>
     eb4:	e6 e0       	ldi	r30, 0x06	; 6
     eb6:	f1 e0       	ldi	r31, 0x01	; 1
     eb8:	2d e0       	ldi	r18, 0x0D	; 13
     eba:	31 e0       	ldi	r19, 0x01	; 1
     ebc:	a1 ef       	ldi	r26, 0xF1	; 241
     ebe:	b0 e0       	ldi	r27, 0x00	; 0
     ec0:	81 91       	ld	r24, Z+
     ec2:	8c 93       	st	X, r24
     ec4:	e2 17       	cp	r30, r18
     ec6:	f3 07       	cpc	r31, r19
     ec8:	d9 f7       	brne	.-10     	; 0xec0 <__vector_11+0x1de>
     eca:	8e ef       	ldi	r24, 0xFE	; 254
     ecc:	80 93 e8 00 	sts	0x00E8, r24
     ed0:	76 c0       	rjmp	.+236    	; 0xfbe <__vector_11+0x2dc>
     ed2:	80 32       	cpi	r24, 0x20	; 32
     ed4:	d1 f4       	brne	.+52     	; 0xf0a <__vector_11+0x228>
     ed6:	61 32       	cpi	r22, 0x21	; 33
     ed8:	09 f0       	breq	.+2      	; 0xedc <__vector_11+0x1fa>
     eda:	6a c0       	rjmp	.+212    	; 0xfb0 <__vector_11+0x2ce>
     edc:	e8 ee       	ldi	r30, 0xE8	; 232
     ede:	f0 e0       	ldi	r31, 0x00	; 0
     ee0:	80 81       	ld	r24, Z
     ee2:	82 ff       	sbrs	r24, 2
     ee4:	fd cf       	rjmp	.-6      	; 0xee0 <__vector_11+0x1fe>
     ee6:	e6 e0       	ldi	r30, 0x06	; 6
     ee8:	f1 e0       	ldi	r31, 0x01	; 1
     eea:	2d e0       	ldi	r18, 0x0D	; 13
     eec:	31 e0       	ldi	r19, 0x01	; 1
     eee:	a1 ef       	ldi	r26, 0xF1	; 241
     ef0:	b0 e0       	ldi	r27, 0x00	; 0
     ef2:	8c 91       	ld	r24, X
     ef4:	81 93       	st	Z+, r24
     ef6:	e2 17       	cp	r30, r18
     ef8:	f3 07       	cpc	r31, r19
     efa:	d9 f7       	brne	.-10     	; 0xef2 <__vector_11+0x210>
     efc:	e8 ee       	ldi	r30, 0xE8	; 232
     efe:	f0 e0       	ldi	r31, 0x00	; 0
     f00:	8b ef       	ldi	r24, 0xFB	; 251
     f02:	80 83       	st	Z, r24
     f04:	8e ef       	ldi	r24, 0xFE	; 254
     f06:	80 83       	st	Z, r24
     f08:	5a c0       	rjmp	.+180    	; 0xfbe <__vector_11+0x2dc>
     f0a:	82 32       	cpi	r24, 0x22	; 34
     f0c:	71 f4       	brne	.+28     	; 0xf2a <__vector_11+0x248>
     f0e:	61 32       	cpi	r22, 0x21	; 33
     f10:	09 f0       	breq	.+2      	; 0xf14 <__vector_11+0x232>
     f12:	4e c0       	rjmp	.+156    	; 0xfb0 <__vector_11+0x2ce>
     f14:	20 93 38 01 	sts	0x0138, r18
     f18:	e8 ee       	ldi	r30, 0xE8	; 232
     f1a:	f0 e0       	ldi	r31, 0x00	; 0
     f1c:	80 81       	ld	r24, Z
     f1e:	80 ff       	sbrs	r24, 0
     f20:	fd cf       	rjmp	.-6      	; 0xf1c <__vector_11+0x23a>
     f22:	8e ef       	ldi	r24, 0xFE	; 254
     f24:	80 93 e8 00 	sts	0x00E8, r24
     f28:	4a c0       	rjmp	.+148    	; 0xfbe <__vector_11+0x2dc>
     f2a:	81 11       	cpse	r24, r1
     f2c:	1a c0       	rjmp	.+52     	; 0xf62 <__vector_11+0x280>
     f2e:	e8 ee       	ldi	r30, 0xE8	; 232
     f30:	f0 e0       	ldi	r31, 0x00	; 0
     f32:	80 81       	ld	r24, Z
     f34:	80 ff       	sbrs	r24, 0
     f36:	fd cf       	rjmp	.-6      	; 0xf32 <__vector_11+0x250>
     f38:	62 38       	cpi	r22, 0x82	; 130
     f3a:	51 f4       	brne	.+20     	; 0xf50 <__vector_11+0x26e>
     f3c:	e9 ee       	ldi	r30, 0xE9	; 233
     f3e:	f0 e0       	ldi	r31, 0x00	; 0
     f40:	40 83       	st	Z, r20
     f42:	80 91 eb 00 	lds	r24, 0x00EB
     f46:	85 fb       	bst	r24, 5
     f48:	88 27       	eor	r24, r24
     f4a:	80 f9       	bld	r24, 0
     f4c:	10 82       	st	Z, r1
     f4e:	01 c0       	rjmp	.+2      	; 0xf52 <__vector_11+0x270>
     f50:	80 e0       	ldi	r24, 0x00	; 0
     f52:	e1 ef       	ldi	r30, 0xF1	; 241
     f54:	f0 e0       	ldi	r31, 0x00	; 0
     f56:	80 83       	st	Z, r24
     f58:	10 82       	st	Z, r1
     f5a:	8e ef       	ldi	r24, 0xFE	; 254
     f5c:	80 93 e8 00 	sts	0x00E8, r24
     f60:	2e c0       	rjmp	.+92     	; 0xfbe <__vector_11+0x2dc>
     f62:	98 2f       	mov	r25, r24
     f64:	9d 7f       	andi	r25, 0xFD	; 253
     f66:	91 30       	cpi	r25, 0x01	; 1
     f68:	19 f5       	brne	.+70     	; 0xfb0 <__vector_11+0x2ce>
     f6a:	62 30       	cpi	r22, 0x02	; 2
     f6c:	09 f5       	brne	.+66     	; 0xfb0 <__vector_11+0x2ce>
     f6e:	23 2b       	or	r18, r19
     f70:	f9 f4       	brne	.+62     	; 0xfb0 <__vector_11+0x2ce>
     f72:	4f 77       	andi	r20, 0x7F	; 127
     f74:	9f ef       	ldi	r25, 0xFF	; 255
     f76:	94 0f       	add	r25, r20
     f78:	94 30       	cpi	r25, 0x04	; 4
     f7a:	d0 f4       	brcc	.+52     	; 0xfb0 <__vector_11+0x2ce>
     f7c:	9e ef       	ldi	r25, 0xFE	; 254
     f7e:	90 93 e8 00 	sts	0x00E8, r25
     f82:	40 93 e9 00 	sts	0x00E9, r20
     f86:	83 30       	cpi	r24, 0x03	; 3
     f88:	21 f4       	brne	.+8      	; 0xf92 <__vector_11+0x2b0>
     f8a:	81 e2       	ldi	r24, 0x21	; 33
     f8c:	80 93 eb 00 	sts	0x00EB, r24
     f90:	16 c0       	rjmp	.+44     	; 0xfbe <__vector_11+0x2dc>
     f92:	89 e1       	ldi	r24, 0x19	; 25
     f94:	80 93 eb 00 	sts	0x00EB, r24
     f98:	81 e0       	ldi	r24, 0x01	; 1
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	02 c0       	rjmp	.+4      	; 0xfa2 <__vector_11+0x2c0>
     f9e:	88 0f       	add	r24, r24
     fa0:	99 1f       	adc	r25, r25
     fa2:	4a 95       	dec	r20
     fa4:	e2 f7       	brpl	.-8      	; 0xf9e <__vector_11+0x2bc>
     fa6:	ea ee       	ldi	r30, 0xEA	; 234
     fa8:	f0 e0       	ldi	r31, 0x00	; 0
     faa:	80 83       	st	Z, r24
     fac:	10 82       	st	Z, r1
     fae:	07 c0       	rjmp	.+14     	; 0xfbe <__vector_11+0x2dc>
     fb0:	81 e2       	ldi	r24, 0x21	; 33
     fb2:	80 93 eb 00 	sts	0x00EB, r24
     fb6:	03 c0       	rjmp	.+6      	; 0xfbe <__vector_11+0x2dc>
     fb8:	6c 93       	st	X, r22
     fba:	21 11       	cpse	r18, r1
     fbc:	f7 ce       	rjmp	.-530    	; 0xdac <__vector_11+0xca>
     fbe:	ff 91       	pop	r31
     fc0:	ef 91       	pop	r30
     fc2:	df 91       	pop	r29
     fc4:	cf 91       	pop	r28
     fc6:	bf 91       	pop	r27
     fc8:	af 91       	pop	r26
     fca:	9f 91       	pop	r25
     fcc:	8f 91       	pop	r24
     fce:	7f 91       	pop	r23
     fd0:	6f 91       	pop	r22
     fd2:	5f 91       	pop	r21
     fd4:	4f 91       	pop	r20
     fd6:	3f 91       	pop	r19
     fd8:	2f 91       	pop	r18
     fda:	1f 91       	pop	r17
     fdc:	0f 91       	pop	r16
     fde:	0f 90       	pop	r0
     fe0:	0f be       	out	0x3f, r0	; 63
     fe2:	0f 90       	pop	r0
     fe4:	1f 90       	pop	r1
     fe6:	18 95       	reti

00000fe8 <print_P>:
     fe8:	0f 93       	push	r16
     fea:	1f 93       	push	r17
     fec:	cf 93       	push	r28
     fee:	8c 01       	movw	r16, r24
     ff0:	0f 5f       	subi	r16, 0xFF	; 255
     ff2:	1f 4f       	sbci	r17, 0xFF	; 255
     ff4:	fc 01       	movw	r30, r24
     ff6:	c4 91       	lpm	r28, Z
     ff8:	cc 23       	and	r28, r28
     ffa:	71 f0       	breq	.+28     	; 0x1018 <print_P+0x30>
     ffc:	ca 30       	cpi	r28, 0x0A	; 10
     ffe:	19 f4       	brne	.+6      	; 0x1006 <print_P+0x1e>
    1000:	8d e0       	ldi	r24, 0x0D	; 13
    1002:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <m_usb_tx_char>
    1006:	8c 2f       	mov	r24, r28
    1008:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <m_usb_tx_char>
    100c:	f8 01       	movw	r30, r16
    100e:	c4 91       	lpm	r28, Z
    1010:	0f 5f       	subi	r16, 0xFF	; 255
    1012:	1f 4f       	sbci	r17, 0xFF	; 255
    1014:	c1 11       	cpse	r28, r1
    1016:	f2 cf       	rjmp	.-28     	; 0xffc <print_P+0x14>
    1018:	cf 91       	pop	r28
    101a:	1f 91       	pop	r17
    101c:	0f 91       	pop	r16
    101e:	08 95       	ret

00001020 <m_usb_tx_int>:
    1020:	ef 92       	push	r14
    1022:	ff 92       	push	r15
    1024:	0f 93       	push	r16
    1026:	1f 93       	push	r17
    1028:	cf 93       	push	r28
    102a:	df 93       	push	r29
    102c:	cd b7       	in	r28, 0x3d	; 61
    102e:	de b7       	in	r29, 0x3e	; 62
    1030:	27 97       	sbiw	r28, 0x07	; 7
    1032:	0f b6       	in	r0, 0x3f	; 63
    1034:	f8 94       	cli
    1036:	de bf       	out	0x3e, r29	; 62
    1038:	0f be       	out	0x3f, r0	; 63
    103a:	cd bf       	out	0x3d, r28	; 61
    103c:	8e 01       	movw	r16, r28
    103e:	0f 5f       	subi	r16, 0xFF	; 255
    1040:	1f 4f       	sbci	r17, 0xFF	; 255
    1042:	27 e0       	ldi	r18, 0x07	; 7
    1044:	f8 01       	movw	r30, r16
    1046:	11 92       	st	Z+, r1
    1048:	2a 95       	dec	r18
    104a:	e9 f7       	brne	.-6      	; 0x1046 <m_usb_tx_int+0x26>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    104c:	4a e0       	ldi	r20, 0x0A	; 10
    104e:	b8 01       	movw	r22, r16
    1050:	0e 94 11 0b 	call	0x1622	; 0x1622 <__itoa_ncheck>
    1054:	7e 01       	movw	r14, r28
    1056:	f8 e0       	ldi	r31, 0x08	; 8
    1058:	ef 0e       	add	r14, r31
    105a:	f1 1c       	adc	r15, r1
    105c:	f8 01       	movw	r30, r16
    105e:	81 91       	ld	r24, Z+
    1060:	8f 01       	movw	r16, r30
    1062:	81 11       	cpse	r24, r1
    1064:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <m_usb_tx_char>
    1068:	0e 15       	cp	r16, r14
    106a:	1f 05       	cpc	r17, r15
    106c:	b9 f7       	brne	.-18     	; 0x105c <m_usb_tx_int+0x3c>
    106e:	27 96       	adiw	r28, 0x07	; 7
    1070:	0f b6       	in	r0, 0x3f	; 63
    1072:	f8 94       	cli
    1074:	de bf       	out	0x3e, r29	; 62
    1076:	0f be       	out	0x3f, r0	; 63
    1078:	cd bf       	out	0x3d, r28	; 61
    107a:	df 91       	pop	r29
    107c:	cf 91       	pop	r28
    107e:	1f 91       	pop	r17
    1080:	0f 91       	pop	r16
    1082:	ff 90       	pop	r15
    1084:	ef 90       	pop	r14
    1086:	08 95       	ret

00001088 <m_usb_tx_long>:
    1088:	ef 92       	push	r14
    108a:	ff 92       	push	r15
    108c:	0f 93       	push	r16
    108e:	1f 93       	push	r17
    1090:	cf 93       	push	r28
    1092:	df 93       	push	r29
    1094:	cd b7       	in	r28, 0x3d	; 61
    1096:	de b7       	in	r29, 0x3e	; 62
    1098:	2b 97       	sbiw	r28, 0x0b	; 11
    109a:	0f b6       	in	r0, 0x3f	; 63
    109c:	f8 94       	cli
    109e:	de bf       	out	0x3e, r29	; 62
    10a0:	0f be       	out	0x3f, r0	; 63
    10a2:	cd bf       	out	0x3d, r28	; 61
    10a4:	8e 01       	movw	r16, r28
    10a6:	0f 5f       	subi	r16, 0xFF	; 255
    10a8:	1f 4f       	sbci	r17, 0xFF	; 255
    10aa:	2b e0       	ldi	r18, 0x0B	; 11
    10ac:	f8 01       	movw	r30, r16
    10ae:	11 92       	st	Z+, r1
    10b0:	2a 95       	dec	r18
    10b2:	e9 f7       	brne	.-6      	; 0x10ae <m_usb_tx_long+0x26>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__ltoa_ncheck (long, char *, unsigned char);
	return __ltoa_ncheck (__val, __s, __radix);
    10b4:	2a e0       	ldi	r18, 0x0A	; 10
    10b6:	a8 01       	movw	r20, r16
    10b8:	0e 94 1c 0b 	call	0x1638	; 0x1638 <__ltoa_ncheck>
    10bc:	7e 01       	movw	r14, r28
    10be:	fc e0       	ldi	r31, 0x0C	; 12
    10c0:	ef 0e       	add	r14, r31
    10c2:	f1 1c       	adc	r15, r1
    10c4:	f8 01       	movw	r30, r16
    10c6:	81 91       	ld	r24, Z+
    10c8:	8f 01       	movw	r16, r30
    10ca:	81 11       	cpse	r24, r1
    10cc:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <m_usb_tx_char>
    10d0:	0e 15       	cp	r16, r14
    10d2:	1f 05       	cpc	r17, r15
    10d4:	b9 f7       	brne	.-18     	; 0x10c4 <m_usb_tx_long+0x3c>
    10d6:	2b 96       	adiw	r28, 0x0b	; 11
    10d8:	0f b6       	in	r0, 0x3f	; 63
    10da:	f8 94       	cli
    10dc:	de bf       	out	0x3e, r29	; 62
    10de:	0f be       	out	0x3f, r0	; 63
    10e0:	cd bf       	out	0x3d, r28	; 61
    10e2:	df 91       	pop	r29
    10e4:	cf 91       	pop	r28
    10e6:	1f 91       	pop	r17
    10e8:	0f 91       	pop	r16
    10ea:	ff 90       	pop	r15
    10ec:	ef 90       	pop	r14
    10ee:	08 95       	ret

000010f0 <__subsf3>:
    10f0:	50 58       	subi	r21, 0x80	; 128

000010f2 <__addsf3>:
    10f2:	bb 27       	eor	r27, r27
    10f4:	aa 27       	eor	r26, r26
    10f6:	0e 94 90 08 	call	0x1120	; 0x1120 <__addsf3x>
    10fa:	0c 94 0a 0a 	jmp	0x1414	; 0x1414 <__fp_round>
    10fe:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__fp_pscA>
    1102:	38 f0       	brcs	.+14     	; 0x1112 <__addsf3+0x20>
    1104:	0e 94 03 0a 	call	0x1406	; 0x1406 <__fp_pscB>
    1108:	20 f0       	brcs	.+8      	; 0x1112 <__addsf3+0x20>
    110a:	39 f4       	brne	.+14     	; 0x111a <__addsf3+0x28>
    110c:	9f 3f       	cpi	r25, 0xFF	; 255
    110e:	19 f4       	brne	.+6      	; 0x1116 <__addsf3+0x24>
    1110:	26 f4       	brtc	.+8      	; 0x111a <__addsf3+0x28>
    1112:	0c 94 f9 09 	jmp	0x13f2	; 0x13f2 <__fp_nan>
    1116:	0e f4       	brtc	.+2      	; 0x111a <__addsf3+0x28>
    1118:	e0 95       	com	r30
    111a:	e7 fb       	bst	r30, 7
    111c:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__fp_inf>

00001120 <__addsf3x>:
    1120:	e9 2f       	mov	r30, r25
    1122:	0e 94 1b 0a 	call	0x1436	; 0x1436 <__fp_split3>
    1126:	58 f3       	brcs	.-42     	; 0x10fe <__addsf3+0xc>
    1128:	ba 17       	cp	r27, r26
    112a:	62 07       	cpc	r22, r18
    112c:	73 07       	cpc	r23, r19
    112e:	84 07       	cpc	r24, r20
    1130:	95 07       	cpc	r25, r21
    1132:	20 f0       	brcs	.+8      	; 0x113c <__addsf3x+0x1c>
    1134:	79 f4       	brne	.+30     	; 0x1154 <__addsf3x+0x34>
    1136:	a6 f5       	brtc	.+104    	; 0x11a0 <__addsf3x+0x80>
    1138:	0c 94 3d 0a 	jmp	0x147a	; 0x147a <__fp_zero>
    113c:	0e f4       	brtc	.+2      	; 0x1140 <__addsf3x+0x20>
    113e:	e0 95       	com	r30
    1140:	0b 2e       	mov	r0, r27
    1142:	ba 2f       	mov	r27, r26
    1144:	a0 2d       	mov	r26, r0
    1146:	0b 01       	movw	r0, r22
    1148:	b9 01       	movw	r22, r18
    114a:	90 01       	movw	r18, r0
    114c:	0c 01       	movw	r0, r24
    114e:	ca 01       	movw	r24, r20
    1150:	a0 01       	movw	r20, r0
    1152:	11 24       	eor	r1, r1
    1154:	ff 27       	eor	r31, r31
    1156:	59 1b       	sub	r21, r25
    1158:	99 f0       	breq	.+38     	; 0x1180 <__addsf3x+0x60>
    115a:	59 3f       	cpi	r21, 0xF9	; 249
    115c:	50 f4       	brcc	.+20     	; 0x1172 <__addsf3x+0x52>
    115e:	50 3e       	cpi	r21, 0xE0	; 224
    1160:	68 f1       	brcs	.+90     	; 0x11bc <__addsf3x+0x9c>
    1162:	1a 16       	cp	r1, r26
    1164:	f0 40       	sbci	r31, 0x00	; 0
    1166:	a2 2f       	mov	r26, r18
    1168:	23 2f       	mov	r18, r19
    116a:	34 2f       	mov	r19, r20
    116c:	44 27       	eor	r20, r20
    116e:	58 5f       	subi	r21, 0xF8	; 248
    1170:	f3 cf       	rjmp	.-26     	; 0x1158 <__addsf3x+0x38>
    1172:	46 95       	lsr	r20
    1174:	37 95       	ror	r19
    1176:	27 95       	ror	r18
    1178:	a7 95       	ror	r26
    117a:	f0 40       	sbci	r31, 0x00	; 0
    117c:	53 95       	inc	r21
    117e:	c9 f7       	brne	.-14     	; 0x1172 <__addsf3x+0x52>
    1180:	7e f4       	brtc	.+30     	; 0x11a0 <__addsf3x+0x80>
    1182:	1f 16       	cp	r1, r31
    1184:	ba 0b       	sbc	r27, r26
    1186:	62 0b       	sbc	r22, r18
    1188:	73 0b       	sbc	r23, r19
    118a:	84 0b       	sbc	r24, r20
    118c:	ba f0       	brmi	.+46     	; 0x11bc <__addsf3x+0x9c>
    118e:	91 50       	subi	r25, 0x01	; 1
    1190:	a1 f0       	breq	.+40     	; 0x11ba <__addsf3x+0x9a>
    1192:	ff 0f       	add	r31, r31
    1194:	bb 1f       	adc	r27, r27
    1196:	66 1f       	adc	r22, r22
    1198:	77 1f       	adc	r23, r23
    119a:	88 1f       	adc	r24, r24
    119c:	c2 f7       	brpl	.-16     	; 0x118e <__addsf3x+0x6e>
    119e:	0e c0       	rjmp	.+28     	; 0x11bc <__addsf3x+0x9c>
    11a0:	ba 0f       	add	r27, r26
    11a2:	62 1f       	adc	r22, r18
    11a4:	73 1f       	adc	r23, r19
    11a6:	84 1f       	adc	r24, r20
    11a8:	48 f4       	brcc	.+18     	; 0x11bc <__addsf3x+0x9c>
    11aa:	87 95       	ror	r24
    11ac:	77 95       	ror	r23
    11ae:	67 95       	ror	r22
    11b0:	b7 95       	ror	r27
    11b2:	f7 95       	ror	r31
    11b4:	9e 3f       	cpi	r25, 0xFE	; 254
    11b6:	08 f0       	brcs	.+2      	; 0x11ba <__addsf3x+0x9a>
    11b8:	b0 cf       	rjmp	.-160    	; 0x111a <__addsf3+0x28>
    11ba:	93 95       	inc	r25
    11bc:	88 0f       	add	r24, r24
    11be:	08 f0       	brcs	.+2      	; 0x11c2 <__addsf3x+0xa2>
    11c0:	99 27       	eor	r25, r25
    11c2:	ee 0f       	add	r30, r30
    11c4:	97 95       	ror	r25
    11c6:	87 95       	ror	r24
    11c8:	08 95       	ret

000011ca <__cmpsf2>:
    11ca:	0e 94 cf 09 	call	0x139e	; 0x139e <__fp_cmp>
    11ce:	08 f4       	brcc	.+2      	; 0x11d2 <__cmpsf2+0x8>
    11d0:	81 e0       	ldi	r24, 0x01	; 1
    11d2:	08 95       	ret

000011d4 <__divsf3>:
    11d4:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__divsf3x>
    11d8:	0c 94 0a 0a 	jmp	0x1414	; 0x1414 <__fp_round>
    11dc:	0e 94 03 0a 	call	0x1406	; 0x1406 <__fp_pscB>
    11e0:	58 f0       	brcs	.+22     	; 0x11f8 <__divsf3+0x24>
    11e2:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__fp_pscA>
    11e6:	40 f0       	brcs	.+16     	; 0x11f8 <__divsf3+0x24>
    11e8:	29 f4       	brne	.+10     	; 0x11f4 <__divsf3+0x20>
    11ea:	5f 3f       	cpi	r21, 0xFF	; 255
    11ec:	29 f0       	breq	.+10     	; 0x11f8 <__divsf3+0x24>
    11ee:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__fp_inf>
    11f2:	51 11       	cpse	r21, r1
    11f4:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__fp_szero>
    11f8:	0c 94 f9 09 	jmp	0x13f2	; 0x13f2 <__fp_nan>

000011fc <__divsf3x>:
    11fc:	0e 94 1b 0a 	call	0x1436	; 0x1436 <__fp_split3>
    1200:	68 f3       	brcs	.-38     	; 0x11dc <__divsf3+0x8>

00001202 <__divsf3_pse>:
    1202:	99 23       	and	r25, r25
    1204:	b1 f3       	breq	.-20     	; 0x11f2 <__divsf3+0x1e>
    1206:	55 23       	and	r21, r21
    1208:	91 f3       	breq	.-28     	; 0x11ee <__divsf3+0x1a>
    120a:	95 1b       	sub	r25, r21
    120c:	55 0b       	sbc	r21, r21
    120e:	bb 27       	eor	r27, r27
    1210:	aa 27       	eor	r26, r26
    1212:	62 17       	cp	r22, r18
    1214:	73 07       	cpc	r23, r19
    1216:	84 07       	cpc	r24, r20
    1218:	38 f0       	brcs	.+14     	; 0x1228 <__divsf3_pse+0x26>
    121a:	9f 5f       	subi	r25, 0xFF	; 255
    121c:	5f 4f       	sbci	r21, 0xFF	; 255
    121e:	22 0f       	add	r18, r18
    1220:	33 1f       	adc	r19, r19
    1222:	44 1f       	adc	r20, r20
    1224:	aa 1f       	adc	r26, r26
    1226:	a9 f3       	breq	.-22     	; 0x1212 <__divsf3_pse+0x10>
    1228:	35 d0       	rcall	.+106    	; 0x1294 <__divsf3_pse+0x92>
    122a:	0e 2e       	mov	r0, r30
    122c:	3a f0       	brmi	.+14     	; 0x123c <__divsf3_pse+0x3a>
    122e:	e0 e8       	ldi	r30, 0x80	; 128
    1230:	32 d0       	rcall	.+100    	; 0x1296 <__divsf3_pse+0x94>
    1232:	91 50       	subi	r25, 0x01	; 1
    1234:	50 40       	sbci	r21, 0x00	; 0
    1236:	e6 95       	lsr	r30
    1238:	00 1c       	adc	r0, r0
    123a:	ca f7       	brpl	.-14     	; 0x122e <__divsf3_pse+0x2c>
    123c:	2b d0       	rcall	.+86     	; 0x1294 <__divsf3_pse+0x92>
    123e:	fe 2f       	mov	r31, r30
    1240:	29 d0       	rcall	.+82     	; 0x1294 <__divsf3_pse+0x92>
    1242:	66 0f       	add	r22, r22
    1244:	77 1f       	adc	r23, r23
    1246:	88 1f       	adc	r24, r24
    1248:	bb 1f       	adc	r27, r27
    124a:	26 17       	cp	r18, r22
    124c:	37 07       	cpc	r19, r23
    124e:	48 07       	cpc	r20, r24
    1250:	ab 07       	cpc	r26, r27
    1252:	b0 e8       	ldi	r27, 0x80	; 128
    1254:	09 f0       	breq	.+2      	; 0x1258 <__divsf3_pse+0x56>
    1256:	bb 0b       	sbc	r27, r27
    1258:	80 2d       	mov	r24, r0
    125a:	bf 01       	movw	r22, r30
    125c:	ff 27       	eor	r31, r31
    125e:	93 58       	subi	r25, 0x83	; 131
    1260:	5f 4f       	sbci	r21, 0xFF	; 255
    1262:	3a f0       	brmi	.+14     	; 0x1272 <__divsf3_pse+0x70>
    1264:	9e 3f       	cpi	r25, 0xFE	; 254
    1266:	51 05       	cpc	r21, r1
    1268:	78 f0       	brcs	.+30     	; 0x1288 <__divsf3_pse+0x86>
    126a:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__fp_inf>
    126e:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__fp_szero>
    1272:	5f 3f       	cpi	r21, 0xFF	; 255
    1274:	e4 f3       	brlt	.-8      	; 0x126e <__divsf3_pse+0x6c>
    1276:	98 3e       	cpi	r25, 0xE8	; 232
    1278:	d4 f3       	brlt	.-12     	; 0x126e <__divsf3_pse+0x6c>
    127a:	86 95       	lsr	r24
    127c:	77 95       	ror	r23
    127e:	67 95       	ror	r22
    1280:	b7 95       	ror	r27
    1282:	f7 95       	ror	r31
    1284:	9f 5f       	subi	r25, 0xFF	; 255
    1286:	c9 f7       	brne	.-14     	; 0x127a <__divsf3_pse+0x78>
    1288:	88 0f       	add	r24, r24
    128a:	91 1d       	adc	r25, r1
    128c:	96 95       	lsr	r25
    128e:	87 95       	ror	r24
    1290:	97 f9       	bld	r25, 7
    1292:	08 95       	ret
    1294:	e1 e0       	ldi	r30, 0x01	; 1
    1296:	66 0f       	add	r22, r22
    1298:	77 1f       	adc	r23, r23
    129a:	88 1f       	adc	r24, r24
    129c:	bb 1f       	adc	r27, r27
    129e:	62 17       	cp	r22, r18
    12a0:	73 07       	cpc	r23, r19
    12a2:	84 07       	cpc	r24, r20
    12a4:	ba 07       	cpc	r27, r26
    12a6:	20 f0       	brcs	.+8      	; 0x12b0 <__divsf3_pse+0xae>
    12a8:	62 1b       	sub	r22, r18
    12aa:	73 0b       	sbc	r23, r19
    12ac:	84 0b       	sbc	r24, r20
    12ae:	ba 0b       	sbc	r27, r26
    12b0:	ee 1f       	adc	r30, r30
    12b2:	88 f7       	brcc	.-30     	; 0x1296 <__divsf3_pse+0x94>
    12b4:	e0 95       	com	r30
    12b6:	08 95       	ret

000012b8 <__fixsfsi>:
    12b8:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__fixunssfsi>
    12bc:	68 94       	set
    12be:	b1 11       	cpse	r27, r1
    12c0:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__fp_szero>
    12c4:	08 95       	ret

000012c6 <__fixunssfsi>:
    12c6:	0e 94 23 0a 	call	0x1446	; 0x1446 <__fp_splitA>
    12ca:	88 f0       	brcs	.+34     	; 0x12ee <__fixunssfsi+0x28>
    12cc:	9f 57       	subi	r25, 0x7F	; 127
    12ce:	98 f0       	brcs	.+38     	; 0x12f6 <__fixunssfsi+0x30>
    12d0:	b9 2f       	mov	r27, r25
    12d2:	99 27       	eor	r25, r25
    12d4:	b7 51       	subi	r27, 0x17	; 23
    12d6:	b0 f0       	brcs	.+44     	; 0x1304 <__fixunssfsi+0x3e>
    12d8:	e1 f0       	breq	.+56     	; 0x1312 <__fixunssfsi+0x4c>
    12da:	66 0f       	add	r22, r22
    12dc:	77 1f       	adc	r23, r23
    12de:	88 1f       	adc	r24, r24
    12e0:	99 1f       	adc	r25, r25
    12e2:	1a f0       	brmi	.+6      	; 0x12ea <__fixunssfsi+0x24>
    12e4:	ba 95       	dec	r27
    12e6:	c9 f7       	brne	.-14     	; 0x12da <__fixunssfsi+0x14>
    12e8:	14 c0       	rjmp	.+40     	; 0x1312 <__fixunssfsi+0x4c>
    12ea:	b1 30       	cpi	r27, 0x01	; 1
    12ec:	91 f0       	breq	.+36     	; 0x1312 <__fixunssfsi+0x4c>
    12ee:	0e 94 3d 0a 	call	0x147a	; 0x147a <__fp_zero>
    12f2:	b1 e0       	ldi	r27, 0x01	; 1
    12f4:	08 95       	ret
    12f6:	0c 94 3d 0a 	jmp	0x147a	; 0x147a <__fp_zero>
    12fa:	67 2f       	mov	r22, r23
    12fc:	78 2f       	mov	r23, r24
    12fe:	88 27       	eor	r24, r24
    1300:	b8 5f       	subi	r27, 0xF8	; 248
    1302:	39 f0       	breq	.+14     	; 0x1312 <__fixunssfsi+0x4c>
    1304:	b9 3f       	cpi	r27, 0xF9	; 249
    1306:	cc f3       	brlt	.-14     	; 0x12fa <__fixunssfsi+0x34>
    1308:	86 95       	lsr	r24
    130a:	77 95       	ror	r23
    130c:	67 95       	ror	r22
    130e:	b3 95       	inc	r27
    1310:	d9 f7       	brne	.-10     	; 0x1308 <__fixunssfsi+0x42>
    1312:	3e f4       	brtc	.+14     	; 0x1322 <__fixunssfsi+0x5c>
    1314:	90 95       	com	r25
    1316:	80 95       	com	r24
    1318:	70 95       	com	r23
    131a:	61 95       	neg	r22
    131c:	7f 4f       	sbci	r23, 0xFF	; 255
    131e:	8f 4f       	sbci	r24, 0xFF	; 255
    1320:	9f 4f       	sbci	r25, 0xFF	; 255
    1322:	08 95       	ret

00001324 <__floatunsisf>:
    1324:	e8 94       	clt
    1326:	09 c0       	rjmp	.+18     	; 0x133a <__floatsisf+0x12>

00001328 <__floatsisf>:
    1328:	97 fb       	bst	r25, 7
    132a:	3e f4       	brtc	.+14     	; 0x133a <__floatsisf+0x12>
    132c:	90 95       	com	r25
    132e:	80 95       	com	r24
    1330:	70 95       	com	r23
    1332:	61 95       	neg	r22
    1334:	7f 4f       	sbci	r23, 0xFF	; 255
    1336:	8f 4f       	sbci	r24, 0xFF	; 255
    1338:	9f 4f       	sbci	r25, 0xFF	; 255
    133a:	99 23       	and	r25, r25
    133c:	a9 f0       	breq	.+42     	; 0x1368 <__floatsisf+0x40>
    133e:	f9 2f       	mov	r31, r25
    1340:	96 e9       	ldi	r25, 0x96	; 150
    1342:	bb 27       	eor	r27, r27
    1344:	93 95       	inc	r25
    1346:	f6 95       	lsr	r31
    1348:	87 95       	ror	r24
    134a:	77 95       	ror	r23
    134c:	67 95       	ror	r22
    134e:	b7 95       	ror	r27
    1350:	f1 11       	cpse	r31, r1
    1352:	f8 cf       	rjmp	.-16     	; 0x1344 <__floatsisf+0x1c>
    1354:	fa f4       	brpl	.+62     	; 0x1394 <__floatsisf+0x6c>
    1356:	bb 0f       	add	r27, r27
    1358:	11 f4       	brne	.+4      	; 0x135e <__floatsisf+0x36>
    135a:	60 ff       	sbrs	r22, 0
    135c:	1b c0       	rjmp	.+54     	; 0x1394 <__floatsisf+0x6c>
    135e:	6f 5f       	subi	r22, 0xFF	; 255
    1360:	7f 4f       	sbci	r23, 0xFF	; 255
    1362:	8f 4f       	sbci	r24, 0xFF	; 255
    1364:	9f 4f       	sbci	r25, 0xFF	; 255
    1366:	16 c0       	rjmp	.+44     	; 0x1394 <__floatsisf+0x6c>
    1368:	88 23       	and	r24, r24
    136a:	11 f0       	breq	.+4      	; 0x1370 <__floatsisf+0x48>
    136c:	96 e9       	ldi	r25, 0x96	; 150
    136e:	11 c0       	rjmp	.+34     	; 0x1392 <__floatsisf+0x6a>
    1370:	77 23       	and	r23, r23
    1372:	21 f0       	breq	.+8      	; 0x137c <__floatsisf+0x54>
    1374:	9e e8       	ldi	r25, 0x8E	; 142
    1376:	87 2f       	mov	r24, r23
    1378:	76 2f       	mov	r23, r22
    137a:	05 c0       	rjmp	.+10     	; 0x1386 <__floatsisf+0x5e>
    137c:	66 23       	and	r22, r22
    137e:	71 f0       	breq	.+28     	; 0x139c <__floatsisf+0x74>
    1380:	96 e8       	ldi	r25, 0x86	; 134
    1382:	86 2f       	mov	r24, r22
    1384:	70 e0       	ldi	r23, 0x00	; 0
    1386:	60 e0       	ldi	r22, 0x00	; 0
    1388:	2a f0       	brmi	.+10     	; 0x1394 <__floatsisf+0x6c>
    138a:	9a 95       	dec	r25
    138c:	66 0f       	add	r22, r22
    138e:	77 1f       	adc	r23, r23
    1390:	88 1f       	adc	r24, r24
    1392:	da f7       	brpl	.-10     	; 0x138a <__floatsisf+0x62>
    1394:	88 0f       	add	r24, r24
    1396:	96 95       	lsr	r25
    1398:	87 95       	ror	r24
    139a:	97 f9       	bld	r25, 7
    139c:	08 95       	ret

0000139e <__fp_cmp>:
    139e:	99 0f       	add	r25, r25
    13a0:	00 08       	sbc	r0, r0
    13a2:	55 0f       	add	r21, r21
    13a4:	aa 0b       	sbc	r26, r26
    13a6:	e0 e8       	ldi	r30, 0x80	; 128
    13a8:	fe ef       	ldi	r31, 0xFE	; 254
    13aa:	16 16       	cp	r1, r22
    13ac:	17 06       	cpc	r1, r23
    13ae:	e8 07       	cpc	r30, r24
    13b0:	f9 07       	cpc	r31, r25
    13b2:	c0 f0       	brcs	.+48     	; 0x13e4 <__fp_cmp+0x46>
    13b4:	12 16       	cp	r1, r18
    13b6:	13 06       	cpc	r1, r19
    13b8:	e4 07       	cpc	r30, r20
    13ba:	f5 07       	cpc	r31, r21
    13bc:	98 f0       	brcs	.+38     	; 0x13e4 <__fp_cmp+0x46>
    13be:	62 1b       	sub	r22, r18
    13c0:	73 0b       	sbc	r23, r19
    13c2:	84 0b       	sbc	r24, r20
    13c4:	95 0b       	sbc	r25, r21
    13c6:	39 f4       	brne	.+14     	; 0x13d6 <__fp_cmp+0x38>
    13c8:	0a 26       	eor	r0, r26
    13ca:	61 f0       	breq	.+24     	; 0x13e4 <__fp_cmp+0x46>
    13cc:	23 2b       	or	r18, r19
    13ce:	24 2b       	or	r18, r20
    13d0:	25 2b       	or	r18, r21
    13d2:	21 f4       	brne	.+8      	; 0x13dc <__fp_cmp+0x3e>
    13d4:	08 95       	ret
    13d6:	0a 26       	eor	r0, r26
    13d8:	09 f4       	brne	.+2      	; 0x13dc <__fp_cmp+0x3e>
    13da:	a1 40       	sbci	r26, 0x01	; 1
    13dc:	a6 95       	lsr	r26
    13de:	8f ef       	ldi	r24, 0xFF	; 255
    13e0:	81 1d       	adc	r24, r1
    13e2:	81 1d       	adc	r24, r1
    13e4:	08 95       	ret

000013e6 <__fp_inf>:
    13e6:	97 f9       	bld	r25, 7
    13e8:	9f 67       	ori	r25, 0x7F	; 127
    13ea:	80 e8       	ldi	r24, 0x80	; 128
    13ec:	70 e0       	ldi	r23, 0x00	; 0
    13ee:	60 e0       	ldi	r22, 0x00	; 0
    13f0:	08 95       	ret

000013f2 <__fp_nan>:
    13f2:	9f ef       	ldi	r25, 0xFF	; 255
    13f4:	80 ec       	ldi	r24, 0xC0	; 192
    13f6:	08 95       	ret

000013f8 <__fp_pscA>:
    13f8:	00 24       	eor	r0, r0
    13fa:	0a 94       	dec	r0
    13fc:	16 16       	cp	r1, r22
    13fe:	17 06       	cpc	r1, r23
    1400:	18 06       	cpc	r1, r24
    1402:	09 06       	cpc	r0, r25
    1404:	08 95       	ret

00001406 <__fp_pscB>:
    1406:	00 24       	eor	r0, r0
    1408:	0a 94       	dec	r0
    140a:	12 16       	cp	r1, r18
    140c:	13 06       	cpc	r1, r19
    140e:	14 06       	cpc	r1, r20
    1410:	05 06       	cpc	r0, r21
    1412:	08 95       	ret

00001414 <__fp_round>:
    1414:	09 2e       	mov	r0, r25
    1416:	03 94       	inc	r0
    1418:	00 0c       	add	r0, r0
    141a:	11 f4       	brne	.+4      	; 0x1420 <__fp_round+0xc>
    141c:	88 23       	and	r24, r24
    141e:	52 f0       	brmi	.+20     	; 0x1434 <__fp_round+0x20>
    1420:	bb 0f       	add	r27, r27
    1422:	40 f4       	brcc	.+16     	; 0x1434 <__fp_round+0x20>
    1424:	bf 2b       	or	r27, r31
    1426:	11 f4       	brne	.+4      	; 0x142c <__fp_round+0x18>
    1428:	60 ff       	sbrs	r22, 0
    142a:	04 c0       	rjmp	.+8      	; 0x1434 <__fp_round+0x20>
    142c:	6f 5f       	subi	r22, 0xFF	; 255
    142e:	7f 4f       	sbci	r23, 0xFF	; 255
    1430:	8f 4f       	sbci	r24, 0xFF	; 255
    1432:	9f 4f       	sbci	r25, 0xFF	; 255
    1434:	08 95       	ret

00001436 <__fp_split3>:
    1436:	57 fd       	sbrc	r21, 7
    1438:	90 58       	subi	r25, 0x80	; 128
    143a:	44 0f       	add	r20, r20
    143c:	55 1f       	adc	r21, r21
    143e:	59 f0       	breq	.+22     	; 0x1456 <__fp_splitA+0x10>
    1440:	5f 3f       	cpi	r21, 0xFF	; 255
    1442:	71 f0       	breq	.+28     	; 0x1460 <__fp_splitA+0x1a>
    1444:	47 95       	ror	r20

00001446 <__fp_splitA>:
    1446:	88 0f       	add	r24, r24
    1448:	97 fb       	bst	r25, 7
    144a:	99 1f       	adc	r25, r25
    144c:	61 f0       	breq	.+24     	; 0x1466 <__fp_splitA+0x20>
    144e:	9f 3f       	cpi	r25, 0xFF	; 255
    1450:	79 f0       	breq	.+30     	; 0x1470 <__fp_splitA+0x2a>
    1452:	87 95       	ror	r24
    1454:	08 95       	ret
    1456:	12 16       	cp	r1, r18
    1458:	13 06       	cpc	r1, r19
    145a:	14 06       	cpc	r1, r20
    145c:	55 1f       	adc	r21, r21
    145e:	f2 cf       	rjmp	.-28     	; 0x1444 <__fp_split3+0xe>
    1460:	46 95       	lsr	r20
    1462:	f1 df       	rcall	.-30     	; 0x1446 <__fp_splitA>
    1464:	08 c0       	rjmp	.+16     	; 0x1476 <__fp_splitA+0x30>
    1466:	16 16       	cp	r1, r22
    1468:	17 06       	cpc	r1, r23
    146a:	18 06       	cpc	r1, r24
    146c:	99 1f       	adc	r25, r25
    146e:	f1 cf       	rjmp	.-30     	; 0x1452 <__fp_splitA+0xc>
    1470:	86 95       	lsr	r24
    1472:	71 05       	cpc	r23, r1
    1474:	61 05       	cpc	r22, r1
    1476:	08 94       	sec
    1478:	08 95       	ret

0000147a <__fp_zero>:
    147a:	e8 94       	clt

0000147c <__fp_szero>:
    147c:	bb 27       	eor	r27, r27
    147e:	66 27       	eor	r22, r22
    1480:	77 27       	eor	r23, r23
    1482:	cb 01       	movw	r24, r22
    1484:	97 f9       	bld	r25, 7
    1486:	08 95       	ret

00001488 <__gesf2>:
    1488:	0e 94 cf 09 	call	0x139e	; 0x139e <__fp_cmp>
    148c:	08 f4       	brcc	.+2      	; 0x1490 <__gesf2+0x8>
    148e:	8f ef       	ldi	r24, 0xFF	; 255
    1490:	08 95       	ret

00001492 <__mulsf3>:
    1492:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__mulsf3x>
    1496:	0c 94 0a 0a 	jmp	0x1414	; 0x1414 <__fp_round>
    149a:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__fp_pscA>
    149e:	38 f0       	brcs	.+14     	; 0x14ae <__mulsf3+0x1c>
    14a0:	0e 94 03 0a 	call	0x1406	; 0x1406 <__fp_pscB>
    14a4:	20 f0       	brcs	.+8      	; 0x14ae <__mulsf3+0x1c>
    14a6:	95 23       	and	r25, r21
    14a8:	11 f0       	breq	.+4      	; 0x14ae <__mulsf3+0x1c>
    14aa:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__fp_inf>
    14ae:	0c 94 f9 09 	jmp	0x13f2	; 0x13f2 <__fp_nan>
    14b2:	11 24       	eor	r1, r1
    14b4:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__fp_szero>

000014b8 <__mulsf3x>:
    14b8:	0e 94 1b 0a 	call	0x1436	; 0x1436 <__fp_split3>
    14bc:	70 f3       	brcs	.-36     	; 0x149a <__mulsf3+0x8>

000014be <__mulsf3_pse>:
    14be:	95 9f       	mul	r25, r21
    14c0:	c1 f3       	breq	.-16     	; 0x14b2 <__mulsf3+0x20>
    14c2:	95 0f       	add	r25, r21
    14c4:	50 e0       	ldi	r21, 0x00	; 0
    14c6:	55 1f       	adc	r21, r21
    14c8:	62 9f       	mul	r22, r18
    14ca:	f0 01       	movw	r30, r0
    14cc:	72 9f       	mul	r23, r18
    14ce:	bb 27       	eor	r27, r27
    14d0:	f0 0d       	add	r31, r0
    14d2:	b1 1d       	adc	r27, r1
    14d4:	63 9f       	mul	r22, r19
    14d6:	aa 27       	eor	r26, r26
    14d8:	f0 0d       	add	r31, r0
    14da:	b1 1d       	adc	r27, r1
    14dc:	aa 1f       	adc	r26, r26
    14de:	64 9f       	mul	r22, r20
    14e0:	66 27       	eor	r22, r22
    14e2:	b0 0d       	add	r27, r0
    14e4:	a1 1d       	adc	r26, r1
    14e6:	66 1f       	adc	r22, r22
    14e8:	82 9f       	mul	r24, r18
    14ea:	22 27       	eor	r18, r18
    14ec:	b0 0d       	add	r27, r0
    14ee:	a1 1d       	adc	r26, r1
    14f0:	62 1f       	adc	r22, r18
    14f2:	73 9f       	mul	r23, r19
    14f4:	b0 0d       	add	r27, r0
    14f6:	a1 1d       	adc	r26, r1
    14f8:	62 1f       	adc	r22, r18
    14fa:	83 9f       	mul	r24, r19
    14fc:	a0 0d       	add	r26, r0
    14fe:	61 1d       	adc	r22, r1
    1500:	22 1f       	adc	r18, r18
    1502:	74 9f       	mul	r23, r20
    1504:	33 27       	eor	r19, r19
    1506:	a0 0d       	add	r26, r0
    1508:	61 1d       	adc	r22, r1
    150a:	23 1f       	adc	r18, r19
    150c:	84 9f       	mul	r24, r20
    150e:	60 0d       	add	r22, r0
    1510:	21 1d       	adc	r18, r1
    1512:	82 2f       	mov	r24, r18
    1514:	76 2f       	mov	r23, r22
    1516:	6a 2f       	mov	r22, r26
    1518:	11 24       	eor	r1, r1
    151a:	9f 57       	subi	r25, 0x7F	; 127
    151c:	50 40       	sbci	r21, 0x00	; 0
    151e:	9a f0       	brmi	.+38     	; 0x1546 <__mulsf3_pse+0x88>
    1520:	f1 f0       	breq	.+60     	; 0x155e <__mulsf3_pse+0xa0>
    1522:	88 23       	and	r24, r24
    1524:	4a f0       	brmi	.+18     	; 0x1538 <__mulsf3_pse+0x7a>
    1526:	ee 0f       	add	r30, r30
    1528:	ff 1f       	adc	r31, r31
    152a:	bb 1f       	adc	r27, r27
    152c:	66 1f       	adc	r22, r22
    152e:	77 1f       	adc	r23, r23
    1530:	88 1f       	adc	r24, r24
    1532:	91 50       	subi	r25, 0x01	; 1
    1534:	50 40       	sbci	r21, 0x00	; 0
    1536:	a9 f7       	brne	.-22     	; 0x1522 <__mulsf3_pse+0x64>
    1538:	9e 3f       	cpi	r25, 0xFE	; 254
    153a:	51 05       	cpc	r21, r1
    153c:	80 f0       	brcs	.+32     	; 0x155e <__mulsf3_pse+0xa0>
    153e:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__fp_inf>
    1542:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__fp_szero>
    1546:	5f 3f       	cpi	r21, 0xFF	; 255
    1548:	e4 f3       	brlt	.-8      	; 0x1542 <__mulsf3_pse+0x84>
    154a:	98 3e       	cpi	r25, 0xE8	; 232
    154c:	d4 f3       	brlt	.-12     	; 0x1542 <__mulsf3_pse+0x84>
    154e:	86 95       	lsr	r24
    1550:	77 95       	ror	r23
    1552:	67 95       	ror	r22
    1554:	b7 95       	ror	r27
    1556:	f7 95       	ror	r31
    1558:	e7 95       	ror	r30
    155a:	9f 5f       	subi	r25, 0xFF	; 255
    155c:	c1 f7       	brne	.-16     	; 0x154e <__mulsf3_pse+0x90>
    155e:	fe 2b       	or	r31, r30
    1560:	88 0f       	add	r24, r24
    1562:	91 1d       	adc	r25, r1
    1564:	96 95       	lsr	r25
    1566:	87 95       	ror	r24
    1568:	97 f9       	bld	r25, 7
    156a:	08 95       	ret
    156c:	19 f4       	brne	.+6      	; 0x1574 <__mulsf3_pse+0xb6>
    156e:	16 f4       	brtc	.+4      	; 0x1574 <__mulsf3_pse+0xb6>
    1570:	0c 94 f9 09 	jmp	0x13f2	; 0x13f2 <__fp_nan>
    1574:	0c 94 fc 0a 	jmp	0x15f8	; 0x15f8 <__fp_mpack>

00001578 <sqrt>:
    1578:	0e 94 23 0a 	call	0x1446	; 0x1446 <__fp_splitA>
    157c:	b8 f3       	brcs	.-18     	; 0x156c <__mulsf3_pse+0xae>
    157e:	99 23       	and	r25, r25
    1580:	c9 f3       	breq	.-14     	; 0x1574 <__mulsf3_pse+0xb6>
    1582:	b6 f3       	brts	.-20     	; 0x1570 <__mulsf3_pse+0xb2>
    1584:	9f 57       	subi	r25, 0x7F	; 127
    1586:	55 0b       	sbc	r21, r21
    1588:	87 ff       	sbrs	r24, 7
    158a:	0e 94 0a 0b 	call	0x1614	; 0x1614 <__fp_norm2>
    158e:	00 24       	eor	r0, r0
    1590:	a0 e6       	ldi	r26, 0x60	; 96
    1592:	40 ea       	ldi	r20, 0xA0	; 160
    1594:	90 01       	movw	r18, r0
    1596:	80 58       	subi	r24, 0x80	; 128
    1598:	56 95       	lsr	r21
    159a:	97 95       	ror	r25
    159c:	28 f4       	brcc	.+10     	; 0x15a8 <sqrt+0x30>
    159e:	80 5c       	subi	r24, 0xC0	; 192
    15a0:	66 0f       	add	r22, r22
    15a2:	77 1f       	adc	r23, r23
    15a4:	88 1f       	adc	r24, r24
    15a6:	20 f0       	brcs	.+8      	; 0x15b0 <sqrt+0x38>
    15a8:	26 17       	cp	r18, r22
    15aa:	37 07       	cpc	r19, r23
    15ac:	48 07       	cpc	r20, r24
    15ae:	30 f4       	brcc	.+12     	; 0x15bc <sqrt+0x44>
    15b0:	62 1b       	sub	r22, r18
    15b2:	73 0b       	sbc	r23, r19
    15b4:	84 0b       	sbc	r24, r20
    15b6:	20 29       	or	r18, r0
    15b8:	31 29       	or	r19, r1
    15ba:	4a 2b       	or	r20, r26
    15bc:	a6 95       	lsr	r26
    15be:	17 94       	ror	r1
    15c0:	07 94       	ror	r0
    15c2:	20 25       	eor	r18, r0
    15c4:	31 25       	eor	r19, r1
    15c6:	4a 27       	eor	r20, r26
    15c8:	58 f7       	brcc	.-42     	; 0x15a0 <sqrt+0x28>
    15ca:	66 0f       	add	r22, r22
    15cc:	77 1f       	adc	r23, r23
    15ce:	88 1f       	adc	r24, r24
    15d0:	20 f0       	brcs	.+8      	; 0x15da <sqrt+0x62>
    15d2:	26 17       	cp	r18, r22
    15d4:	37 07       	cpc	r19, r23
    15d6:	48 07       	cpc	r20, r24
    15d8:	30 f4       	brcc	.+12     	; 0x15e6 <sqrt+0x6e>
    15da:	62 0b       	sbc	r22, r18
    15dc:	73 0b       	sbc	r23, r19
    15de:	84 0b       	sbc	r24, r20
    15e0:	20 0d       	add	r18, r0
    15e2:	31 1d       	adc	r19, r1
    15e4:	41 1d       	adc	r20, r1
    15e6:	a0 95       	com	r26
    15e8:	81 f7       	brne	.-32     	; 0x15ca <sqrt+0x52>
    15ea:	b9 01       	movw	r22, r18
    15ec:	84 2f       	mov	r24, r20
    15ee:	91 58       	subi	r25, 0x81	; 129
    15f0:	88 0f       	add	r24, r24
    15f2:	96 95       	lsr	r25
    15f4:	87 95       	ror	r24
    15f6:	08 95       	ret

000015f8 <__fp_mpack>:
    15f8:	9f 3f       	cpi	r25, 0xFF	; 255
    15fa:	31 f0       	breq	.+12     	; 0x1608 <__fp_mpack_finite+0xc>

000015fc <__fp_mpack_finite>:
    15fc:	91 50       	subi	r25, 0x01	; 1
    15fe:	20 f4       	brcc	.+8      	; 0x1608 <__fp_mpack_finite+0xc>
    1600:	87 95       	ror	r24
    1602:	77 95       	ror	r23
    1604:	67 95       	ror	r22
    1606:	b7 95       	ror	r27
    1608:	88 0f       	add	r24, r24
    160a:	91 1d       	adc	r25, r1
    160c:	96 95       	lsr	r25
    160e:	87 95       	ror	r24
    1610:	97 f9       	bld	r25, 7
    1612:	08 95       	ret

00001614 <__fp_norm2>:
    1614:	91 50       	subi	r25, 0x01	; 1
    1616:	50 40       	sbci	r21, 0x00	; 0
    1618:	66 0f       	add	r22, r22
    161a:	77 1f       	adc	r23, r23
    161c:	88 1f       	adc	r24, r24
    161e:	d2 f7       	brpl	.-12     	; 0x1614 <__fp_norm2>
    1620:	08 95       	ret

00001622 <__itoa_ncheck>:
    1622:	bb 27       	eor	r27, r27
    1624:	4a 30       	cpi	r20, 0x0A	; 10
    1626:	31 f4       	brne	.+12     	; 0x1634 <__itoa_ncheck+0x12>
    1628:	99 23       	and	r25, r25
    162a:	22 f4       	brpl	.+8      	; 0x1634 <__itoa_ncheck+0x12>
    162c:	bd e2       	ldi	r27, 0x2D	; 45
    162e:	90 95       	com	r25
    1630:	81 95       	neg	r24
    1632:	9f 4f       	sbci	r25, 0xFF	; 255
    1634:	0c 94 4e 0b 	jmp	0x169c	; 0x169c <__utoa_common>

00001638 <__ltoa_ncheck>:
    1638:	bb 27       	eor	r27, r27
    163a:	2a 30       	cpi	r18, 0x0A	; 10
    163c:	51 f4       	brne	.+20     	; 0x1652 <__ltoa_ncheck+0x1a>
    163e:	99 23       	and	r25, r25
    1640:	42 f4       	brpl	.+16     	; 0x1652 <__ltoa_ncheck+0x1a>
    1642:	bd e2       	ldi	r27, 0x2D	; 45
    1644:	90 95       	com	r25
    1646:	80 95       	com	r24
    1648:	70 95       	com	r23
    164a:	61 95       	neg	r22
    164c:	7f 4f       	sbci	r23, 0xFF	; 255
    164e:	8f 4f       	sbci	r24, 0xFF	; 255
    1650:	9f 4f       	sbci	r25, 0xFF	; 255
    1652:	0c 94 2c 0b 	jmp	0x1658	; 0x1658 <__ultoa_common>

00001656 <__ultoa_ncheck>:
    1656:	bb 27       	eor	r27, r27

00001658 <__ultoa_common>:
    1658:	fa 01       	movw	r30, r20
    165a:	a6 2f       	mov	r26, r22
    165c:	62 17       	cp	r22, r18
    165e:	71 05       	cpc	r23, r1
    1660:	81 05       	cpc	r24, r1
    1662:	91 05       	cpc	r25, r1
    1664:	33 0b       	sbc	r19, r19
    1666:	30 fb       	bst	r19, 0
    1668:	66 f0       	brts	.+24     	; 0x1682 <__ultoa_common+0x2a>
    166a:	aa 27       	eor	r26, r26
    166c:	66 0f       	add	r22, r22
    166e:	77 1f       	adc	r23, r23
    1670:	88 1f       	adc	r24, r24
    1672:	99 1f       	adc	r25, r25
    1674:	aa 1f       	adc	r26, r26
    1676:	a2 17       	cp	r26, r18
    1678:	10 f0       	brcs	.+4      	; 0x167e <__ultoa_common+0x26>
    167a:	a2 1b       	sub	r26, r18
    167c:	63 95       	inc	r22
    167e:	38 50       	subi	r19, 0x08	; 8
    1680:	a9 f7       	brne	.-22     	; 0x166c <__ultoa_common+0x14>
    1682:	a0 5d       	subi	r26, 0xD0	; 208
    1684:	aa 33       	cpi	r26, 0x3A	; 58
    1686:	08 f0       	brcs	.+2      	; 0x168a <__ultoa_common+0x32>
    1688:	a9 5d       	subi	r26, 0xD9	; 217
    168a:	a1 93       	st	Z+, r26
    168c:	36 f7       	brtc	.-52     	; 0x165a <__ultoa_common+0x2>
    168e:	b1 11       	cpse	r27, r1
    1690:	b1 93       	st	Z+, r27
    1692:	10 82       	st	Z, r1
    1694:	ca 01       	movw	r24, r20
    1696:	0c 94 67 0b 	jmp	0x16ce	; 0x16ce <strrev>

0000169a <__utoa_ncheck>:
    169a:	bb 27       	eor	r27, r27

0000169c <__utoa_common>:
    169c:	fb 01       	movw	r30, r22
    169e:	55 27       	eor	r21, r21
    16a0:	aa 27       	eor	r26, r26
    16a2:	88 0f       	add	r24, r24
    16a4:	99 1f       	adc	r25, r25
    16a6:	aa 1f       	adc	r26, r26
    16a8:	a4 17       	cp	r26, r20
    16aa:	10 f0       	brcs	.+4      	; 0x16b0 <__utoa_common+0x14>
    16ac:	a4 1b       	sub	r26, r20
    16ae:	83 95       	inc	r24
    16b0:	50 51       	subi	r21, 0x10	; 16
    16b2:	b9 f7       	brne	.-18     	; 0x16a2 <__utoa_common+0x6>
    16b4:	a0 5d       	subi	r26, 0xD0	; 208
    16b6:	aa 33       	cpi	r26, 0x3A	; 58
    16b8:	08 f0       	brcs	.+2      	; 0x16bc <__utoa_common+0x20>
    16ba:	a9 5d       	subi	r26, 0xD9	; 217
    16bc:	a1 93       	st	Z+, r26
    16be:	00 97       	sbiw	r24, 0x00	; 0
    16c0:	79 f7       	brne	.-34     	; 0x16a0 <__utoa_common+0x4>
    16c2:	b1 11       	cpse	r27, r1
    16c4:	b1 93       	st	Z+, r27
    16c6:	11 92       	st	Z+, r1
    16c8:	cb 01       	movw	r24, r22
    16ca:	0c 94 67 0b 	jmp	0x16ce	; 0x16ce <strrev>

000016ce <strrev>:
    16ce:	dc 01       	movw	r26, r24
    16d0:	fc 01       	movw	r30, r24
    16d2:	67 2f       	mov	r22, r23
    16d4:	71 91       	ld	r23, Z+
    16d6:	77 23       	and	r23, r23
    16d8:	e1 f7       	brne	.-8      	; 0x16d2 <strrev+0x4>
    16da:	32 97       	sbiw	r30, 0x02	; 2
    16dc:	04 c0       	rjmp	.+8      	; 0x16e6 <strrev+0x18>
    16de:	7c 91       	ld	r23, X
    16e0:	6d 93       	st	X+, r22
    16e2:	70 83       	st	Z, r23
    16e4:	62 91       	ld	r22, -Z
    16e6:	ae 17       	cp	r26, r30
    16e8:	bf 07       	cpc	r27, r31
    16ea:	c8 f3       	brcs	.-14     	; 0x16de <strrev+0x10>
    16ec:	08 95       	ret

000016ee <_exit>:
    16ee:	f8 94       	cli

000016f0 <__stop_program>:
    16f0:	ff cf       	rjmp	.-2      	; 0x16f0 <__stop_program>
