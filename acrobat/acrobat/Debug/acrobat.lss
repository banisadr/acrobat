
acrobat.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00001658  000016ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001658  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000030  0080010e  0080010e  000016fa  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  000016fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000175c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000238  00000000  00000000  0000179c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000216f  00000000  00000000  000019d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000867  00000000  00000000  00003b43  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ca4  00000000  00000000  000043aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007b8  00000000  00000000  00005050  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000086c  00000000  00000000  00005808  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002961  00000000  00000000  00006074  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000238  00000000  00000000  000089d5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bb 00 	jmp	0x176	; 0x176 <__ctors_end>
       4:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
       8:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
       c:	0c 94 a0 03 	jmp	0x740	; 0x740 <__vector_3>
      10:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      14:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      18:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      1c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      20:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      24:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      28:	0c 94 50 06 	jmp	0xca0	; 0xca0 <__vector_10>
      2c:	0c 94 8e 06 	jmp	0xd1c	; 0xd1c <__vector_11>
      30:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      34:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      38:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      3c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      40:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      44:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      48:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      4c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      50:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      54:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      58:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      5c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      60:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      64:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      68:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      6c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      70:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      74:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      78:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      7c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      80:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      84:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      88:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      8c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      90:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      94:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      98:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      9c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      a0:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      a4:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      a8:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>

000000ac <__trampolines_end>:
      ac:	0a 00       	.word	0x000a	; ????

000000ae <__c.2131>:
      ae:	61 6e 67 6c 65 3d 20 00                             angle= .

000000b6 <__c.2098>:
      b6:	0a 20 63 6f 6e 74 72 6f 6c 3a 20 00                 . control: .

000000c2 <descriptor_list>:
      c2:	00 01 00 00 59 01 12 00 02 00 00 16 01 43 00 03     ....Y........C..
      d2:	00 00 12 01 04 01 03 09 04 fe 00 12 02 03 09 04     ................
      e2:	f6 00 06 03 03 09 04 ec 00 08                       ..........

000000ec <string3>:
      ec:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

000000f6 <string2>:
      f6:	06 03 4d 00 32 00 00 00                             ..M.2...

000000fe <string1>:
      fe:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     10e:	65 00 00 00                                         e...

00000112 <string0>:
     112:	04 03 09 04                                         ....

00000116 <config1_descriptor>:
     116:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     126:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     136:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     146:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     156:	40 00 00                                            @..

00000159 <device_descriptor>:
     159:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     169:	03 01                                               ..

0000016b <endpoint_config_table>:
     16b:	00 01 c1 12 01 80 36 01 81 36 00                    ......6..6.

00000176 <__ctors_end>:
     176:	11 24       	eor	r1, r1
     178:	1f be       	out	0x3f, r1	; 63
     17a:	cf ef       	ldi	r28, 0xFF	; 255
     17c:	da e0       	ldi	r29, 0x0A	; 10
     17e:	de bf       	out	0x3e, r29	; 62
     180:	cd bf       	out	0x3d, r28	; 61

00000182 <__do_copy_data>:
     182:	11 e0       	ldi	r17, 0x01	; 1
     184:	a0 e0       	ldi	r26, 0x00	; 0
     186:	b1 e0       	ldi	r27, 0x01	; 1
     188:	e8 e5       	ldi	r30, 0x58	; 88
     18a:	f6 e1       	ldi	r31, 0x16	; 22
     18c:	02 c0       	rjmp	.+4      	; 0x192 <__do_copy_data+0x10>
     18e:	05 90       	lpm	r0, Z+
     190:	0d 92       	st	X+, r0
     192:	ae 30       	cpi	r26, 0x0E	; 14
     194:	b1 07       	cpc	r27, r17
     196:	d9 f7       	brne	.-10     	; 0x18e <__do_copy_data+0xc>

00000198 <__do_clear_bss>:
     198:	21 e0       	ldi	r18, 0x01	; 1
     19a:	ae e0       	ldi	r26, 0x0E	; 14
     19c:	b1 e0       	ldi	r27, 0x01	; 1
     19e:	01 c0       	rjmp	.+2      	; 0x1a2 <.do_clear_bss_start>

000001a0 <.do_clear_bss_loop>:
     1a0:	1d 92       	st	X+, r1

000001a2 <.do_clear_bss_start>:
     1a2:	ae 33       	cpi	r26, 0x3E	; 62
     1a4:	b2 07       	cpc	r27, r18
     1a6:	e1 f7       	brne	.-8      	; 0x1a0 <.do_clear_bss_loop>
     1a8:	0e 94 8f 03 	call	0x71e	; 0x71e <main>
     1ac:	0c 94 2a 0b 	jmp	0x1654	; 0x1654 <_exit>

000001b0 <__bad_interrupt>:
     1b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b4 <init>:
************************************************************/

/* Initialization of Pins and System Clock */
void init(void){
	
	m_clockdivide(CLOCK_DIVIDE); // Set to 2 MHz
     1b4:	e1 e6       	ldi	r30, 0x61	; 97
     1b6:	f0 e0       	ldi	r31, 0x00	; 0
     1b8:	80 e8       	ldi	r24, 0x80	; 128
     1ba:	80 83       	st	Z, r24
     1bc:	83 e0       	ldi	r24, 0x03	; 3
     1be:	80 83       	st	Z, r24
	
	//Set to Input
	clear(DDRD,0); // D0
     1c0:	50 98       	cbi	0x0a, 0	; 10
	clear(DDRD,1); // D1
     1c2:	51 98       	cbi	0x0a, 1	; 10
	clear(DDRD,2); // D2
     1c4:	52 98       	cbi	0x0a, 2	; 10
	
	//Set to Output
	set(DDRB,6); // B6
     1c6:	26 9a       	sbi	0x04, 6	; 4
	set(DDRC,6);	//enable digital output on pin C6 (invert state)
     1c8:	3e 9a       	sbi	0x07, 6	; 7
	
	//Set pin low
	clear(PORTC,6);	//start with both pins low 
     1ca:	46 98       	cbi	0x08, 6	; 8
	
	while(!m_imu_init(accel_scale,gyro_scale)); //Initialize IMU
     1cc:	60 91 04 01 	lds	r22, 0x0104
     1d0:	80 91 05 01 	lds	r24, 0x0105
     1d4:	0e 94 63 04 	call	0x8c6	; 0x8c6 <m_imu_init>
     1d8:	88 23       	and	r24, r24
     1da:	c1 f3       	breq	.-16     	; 0x1cc <init+0x18>
	
	sei(); // Enable global interrupts
     1dc:	78 94       	sei
     1de:	08 95       	ret

000001e0 <wireless_enable>:
}

/* Initialize the Wireless System */
void wireless_enable(void)
{
	sei();
     1e0:	78 94       	sei
	m_bus_init(); // Enable mBUS
     1e2:	0e 94 c4 03 	call	0x788	; 0x788 <m_bus_init>
	m_rf_open(CHANNEL,RXADDRESS,PACKET_LENGTH); // Configure mRF
     1e6:	43 e0       	ldi	r20, 0x03	; 3
     1e8:	6c e7       	ldi	r22, 0x7C	; 124
     1ea:	87 e0       	ldi	r24, 0x07	; 7
     1ec:	0e 94 22 05 	call	0xa44	; 0xa44 <m_rf_open>
     1f0:	08 95       	ret

000001f2 <wireless_recieve>:
}

/* Receive Wireless Data */
void wireless_recieve(void)
{
	m_rf_read(buffer,PACKET_LENGTH); // Read RF Signal
     1f2:	63 e0       	ldi	r22, 0x03	; 3
     1f4:	81 e1       	ldi	r24, 0x11	; 17
     1f6:	91 e0       	ldi	r25, 0x01	; 1
     1f8:	0e 94 78 05 	call	0xaf0	; 0xaf0 <m_rf_read>
	Kp_adjust = buffer[0];
     1fc:	e1 e1       	ldi	r30, 0x11	; 17
     1fe:	f1 e0       	ldi	r31, 0x01	; 1
     200:	80 81       	ld	r24, Z
     202:	80 93 10 01 	sts	0x0110, r24
	Ki_adjust = buffer[1];
     206:	81 81       	ldd	r24, Z+1	; 0x01
     208:	80 93 0f 01 	sts	0x010F, r24
	Kd_adjust = buffer[2];
     20c:	82 81       	ldd	r24, Z+2	; 0x02
     20e:	80 93 0e 01 	sts	0x010E, r24
     212:	08 95       	ret

00000214 <timer1_init>:

/* Timer1 Initialization for PWM Motor Control */
void timer1_init(void)
{
	//Timer initialization
	clear(TCCR1B,CS12);	//Set timer1 prescaler to /1
     214:	e1 e8       	ldi	r30, 0x81	; 129
     216:	f0 e0       	ldi	r31, 0x00	; 0
     218:	80 81       	ld	r24, Z
     21a:	8b 7f       	andi	r24, 0xFB	; 251
     21c:	80 83       	st	Z, r24
	clear(TCCR1B,CS11);
     21e:	80 81       	ld	r24, Z
     220:	8d 7f       	andi	r24, 0xFD	; 253
     222:	80 83       	st	Z, r24
	set(TCCR1B,CS10);
     224:	80 81       	ld	r24, Z
     226:	81 60       	ori	r24, 0x01	; 1
     228:	80 83       	st	Z, r24
	
	set(TCCR1B,WGM13);	//Use timer mode 15 (up to OCR1A, PWM mode)
     22a:	80 81       	ld	r24, Z
     22c:	80 61       	ori	r24, 0x10	; 16
     22e:	80 83       	st	Z, r24
	set(TCCR1B,WGM12);
     230:	80 81       	ld	r24, Z
     232:	88 60       	ori	r24, 0x08	; 8
     234:	80 83       	st	Z, r24
	set(TCCR1A,WGM11);
     236:	e0 e8       	ldi	r30, 0x80	; 128
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	80 81       	ld	r24, Z
     23c:	82 60       	ori	r24, 0x02	; 2
     23e:	80 83       	st	Z, r24
	set(TCCR1A,WGM10);
     240:	80 81       	ld	r24, Z
     242:	81 60       	ori	r24, 0x01	; 1
     244:	80 83       	st	Z, r24

	set(TCCR1A,COM1B1);		//clear at OCR1B, set at OCR1A
     246:	80 81       	ld	r24, Z
     248:	80 62       	ori	r24, 0x20	; 32
     24a:	80 83       	st	Z, r24
	clear(TCCR1A,COM1B0);
     24c:	80 81       	ld	r24, Z
     24e:	8f 7e       	andi	r24, 0xEF	; 239
     250:	80 83       	st	Z, r24

	OCR1A = CLOCK/PWM_FREQ;
     252:	e8 e8       	ldi	r30, 0x88	; 136
     254:	f0 e0       	ldi	r31, 0x00	; 0
     256:	88 e8       	ldi	r24, 0x88	; 136
     258:	93 e1       	ldi	r25, 0x13	; 19
     25a:	91 83       	std	Z+1, r25	; 0x01
     25c:	80 83       	st	Z, r24
	OCR1B = (float)OCR1A*duty_cycle;
     25e:	60 81       	ld	r22, Z
     260:	71 81       	ldd	r23, Z+1	; 0x01
     262:	80 e0       	ldi	r24, 0x00	; 0
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <__floatunsisf>
     26a:	20 91 00 01 	lds	r18, 0x0100
     26e:	30 91 01 01 	lds	r19, 0x0101
     272:	40 91 02 01 	lds	r20, 0x0102
     276:	50 91 03 01 	lds	r21, 0x0103
     27a:	0e 94 2d 0a 	call	0x145a	; 0x145a <__mulsf3>
     27e:	0e 94 4c 09 	call	0x1298	; 0x1298 <__fixunssfsi>
     282:	70 93 8b 00 	sts	0x008B, r23
     286:	60 93 8a 00 	sts	0x008A, r22
     28a:	08 95       	ret

0000028c <timer3_init>:
}

/* Timer3 Initialization for fixed timestep calculations */
void timer3_init(void) 
{
	clear(TCCR3B,CS32); // prescale /1
     28c:	e1 e9       	ldi	r30, 0x91	; 145
     28e:	f0 e0       	ldi	r31, 0x00	; 0
     290:	80 81       	ld	r24, Z
     292:	8b 7f       	andi	r24, 0xFB	; 251
     294:	80 83       	st	Z, r24
	clear(TCCR3B,CS31);
     296:	80 81       	ld	r24, Z
     298:	8d 7f       	andi	r24, 0xFD	; 253
     29a:	80 83       	st	Z, r24
	set(TCCR3B,CS30);
     29c:	80 81       	ld	r24, Z
     29e:	81 60       	ori	r24, 0x01	; 1
     2a0:	80 83       	st	Z, r24

	clear(TCCR3B,WGM33); // Up to OCR3A (mode 4)
     2a2:	80 81       	ld	r24, Z
     2a4:	8f 7e       	andi	r24, 0xEF	; 239
     2a6:	80 83       	st	Z, r24
	set(TCCR3B,WGM32);
     2a8:	80 81       	ld	r24, Z
     2aa:	88 60       	ori	r24, 0x08	; 8
     2ac:	80 83       	st	Z, r24
	clear(TCCR3A,WGM31);
     2ae:	e0 e9       	ldi	r30, 0x90	; 144
     2b0:	f0 e0       	ldi	r31, 0x00	; 0
     2b2:	80 81       	ld	r24, Z
     2b4:	8d 7f       	andi	r24, 0xFD	; 253
     2b6:	80 83       	st	Z, r24
	clear(TCCR3A,WGM30);
     2b8:	80 81       	ld	r24, Z
     2ba:	8e 7f       	andi	r24, 0xFE	; 254
     2bc:	80 83       	st	Z, r24
	
	OCR3A = TIMESTEP*(CLOCK/TIM3_PRESCALE); // initialize OCR3A or duration
     2be:	80 ed       	ldi	r24, 0xD0	; 208
     2c0:	97 e0       	ldi	r25, 0x07	; 7
     2c2:	90 93 99 00 	sts	0x0099, r25
     2c6:	80 93 98 00 	sts	0x0098, r24
     2ca:	08 95       	ret

000002cc <lowpass>:
}


/* Lowpass Filter using Alpha_low */
int lowpass(float alpha, int previous_output, int reading)
{
     2cc:	8f 92       	push	r8
     2ce:	9f 92       	push	r9
     2d0:	af 92       	push	r10
     2d2:	bf 92       	push	r11
     2d4:	cf 92       	push	r12
     2d6:	df 92       	push	r13
     2d8:	ef 92       	push	r14
     2da:	ff 92       	push	r15
     2dc:	cf 93       	push	r28
     2de:	df 93       	push	r29
     2e0:	6b 01       	movw	r12, r22
     2e2:	7c 01       	movw	r14, r24
     2e4:	ea 01       	movw	r28, r20
	return (int)((float)reading*alpha +(1-alpha)*(float)previous_output);
     2e6:	b9 01       	movw	r22, r18
     2e8:	33 0f       	add	r19, r19
     2ea:	88 0b       	sbc	r24, r24
     2ec:	99 0b       	sbc	r25, r25
     2ee:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__floatsisf>
     2f2:	a7 01       	movw	r20, r14
     2f4:	96 01       	movw	r18, r12
     2f6:	0e 94 2d 0a 	call	0x145a	; 0x145a <__mulsf3>
     2fa:	4b 01       	movw	r8, r22
     2fc:	5c 01       	movw	r10, r24
     2fe:	a7 01       	movw	r20, r14
     300:	96 01       	movw	r18, r12
     302:	60 e0       	ldi	r22, 0x00	; 0
     304:	70 e0       	ldi	r23, 0x00	; 0
     306:	80 e8       	ldi	r24, 0x80	; 128
     308:	9f e3       	ldi	r25, 0x3F	; 63
     30a:	0e 94 61 08 	call	0x10c2	; 0x10c2 <__subsf3>
     30e:	6b 01       	movw	r12, r22
     310:	7c 01       	movw	r14, r24
     312:	be 01       	movw	r22, r28
     314:	dd 0f       	add	r29, r29
     316:	88 0b       	sbc	r24, r24
     318:	99 0b       	sbc	r25, r25
     31a:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__floatsisf>
     31e:	9b 01       	movw	r18, r22
     320:	ac 01       	movw	r20, r24
     322:	c7 01       	movw	r24, r14
     324:	b6 01       	movw	r22, r12
     326:	0e 94 2d 0a 	call	0x145a	; 0x145a <__mulsf3>
     32a:	9b 01       	movw	r18, r22
     32c:	ac 01       	movw	r20, r24
     32e:	c5 01       	movw	r24, r10
     330:	b4 01       	movw	r22, r8
     332:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__addsf3>
     336:	0e 94 45 09 	call	0x128a	; 0x128a <__fixsfsi>
}
     33a:	cb 01       	movw	r24, r22
     33c:	df 91       	pop	r29
     33e:	cf 91       	pop	r28
     340:	ff 90       	pop	r15
     342:	ef 90       	pop	r14
     344:	df 90       	pop	r13
     346:	cf 90       	pop	r12
     348:	bf 90       	pop	r11
     34a:	af 90       	pop	r10
     34c:	9f 90       	pop	r9
     34e:	8f 90       	pop	r8
     350:	08 95       	ret

00000352 <highpass>:

/* Highpass Filter using Aplha_high */
int highpass(float alpha, int previous_output, int previous_reading, int reading)
{
     352:	8f 92       	push	r8
     354:	9f 92       	push	r9
     356:	af 92       	push	r10
     358:	bf 92       	push	r11
     35a:	cf 92       	push	r12
     35c:	df 92       	push	r13
     35e:	ef 92       	push	r14
     360:	ff 92       	push	r15
     362:	0f 93       	push	r16
     364:	1f 93       	push	r17
     366:	cf 93       	push	r28
     368:	df 93       	push	r29
     36a:	6b 01       	movw	r12, r22
     36c:	7c 01       	movw	r14, r24
     36e:	e9 01       	movw	r28, r18
	return (int)((float)previous_output*alpha + alpha*(float)(reading-previous_reading));
     370:	ba 01       	movw	r22, r20
     372:	55 0f       	add	r21, r21
     374:	88 0b       	sbc	r24, r24
     376:	99 0b       	sbc	r25, r25
     378:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__floatsisf>
     37c:	a7 01       	movw	r20, r14
     37e:	96 01       	movw	r18, r12
     380:	0e 94 2d 0a 	call	0x145a	; 0x145a <__mulsf3>
     384:	4b 01       	movw	r8, r22
     386:	5c 01       	movw	r10, r24
     388:	b8 01       	movw	r22, r16
     38a:	6c 1b       	sub	r22, r28
     38c:	7d 0b       	sbc	r23, r29
     38e:	07 2e       	mov	r0, r23
     390:	00 0c       	add	r0, r0
     392:	88 0b       	sbc	r24, r24
     394:	99 0b       	sbc	r25, r25
     396:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__floatsisf>
     39a:	a7 01       	movw	r20, r14
     39c:	96 01       	movw	r18, r12
     39e:	0e 94 2d 0a 	call	0x145a	; 0x145a <__mulsf3>
     3a2:	9b 01       	movw	r18, r22
     3a4:	ac 01       	movw	r20, r24
     3a6:	c5 01       	movw	r24, r10
     3a8:	b4 01       	movw	r22, r8
     3aa:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__addsf3>
     3ae:	0e 94 45 09 	call	0x128a	; 0x128a <__fixsfsi>
}
     3b2:	cb 01       	movw	r24, r22
     3b4:	df 91       	pop	r29
     3b6:	cf 91       	pop	r28
     3b8:	1f 91       	pop	r17
     3ba:	0f 91       	pop	r16
     3bc:	ff 90       	pop	r15
     3be:	ef 90       	pop	r14
     3c0:	df 90       	pop	r13
     3c2:	cf 90       	pop	r12
     3c4:	bf 90       	pop	r11
     3c6:	af 90       	pop	r10
     3c8:	9f 90       	pop	r9
     3ca:	8f 90       	pop	r8
     3cc:	08 95       	ret

000003ce <run_control_loop>:
	}
}

/* PID Control */
void run_control_loop(void)
{
     3ce:	8f 92       	push	r8
     3d0:	9f 92       	push	r9
     3d2:	af 92       	push	r10
     3d4:	bf 92       	push	r11
     3d6:	cf 92       	push	r12
     3d8:	df 92       	push	r13
     3da:	ef 92       	push	r14
     3dc:	ff 92       	push	r15
	int error = SETPOINT - angle;
     3de:	60 91 1a 01 	lds	r22, 0x011A
     3e2:	70 91 1b 01 	lds	r23, 0x011B
     3e6:	07 2e       	mov	r0, r23
     3e8:	00 0c       	add	r0, r0
     3ea:	88 0b       	sbc	r24, r24
     3ec:	99 0b       	sbc	r25, r25
     3ee:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__floatsisf>
     3f2:	9b 01       	movw	r18, r22
     3f4:	ac 01       	movw	r20, r24
     3f6:	60 e0       	ldi	r22, 0x00	; 0
     3f8:	70 e0       	ldi	r23, 0x00	; 0
     3fa:	cb 01       	movw	r24, r22
     3fc:	0e 94 61 08 	call	0x10c2	; 0x10c2 <__subsf3>
     400:	0e 94 45 09 	call	0x128a	; 0x128a <__fixsfsi>
     404:	6b 01       	movw	r12, r22
     406:	7c 01       	movw	r14, r24
	integral += error*TIMESTEP;
     408:	07 2e       	mov	r0, r23
     40a:	00 0c       	add	r0, r0
     40c:	88 0b       	sbc	r24, r24
     40e:	99 0b       	sbc	r25, r25
     410:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__floatsisf>
     414:	4b 01       	movw	r8, r22
     416:	5c 01       	movw	r10, r24
     418:	2f e6       	ldi	r18, 0x6F	; 111
     41a:	32 e1       	ldi	r19, 0x12	; 18
     41c:	43 e8       	ldi	r20, 0x83	; 131
     41e:	5a e3       	ldi	r21, 0x3A	; 58
     420:	0e 94 2d 0a 	call	0x145a	; 0x145a <__mulsf3>
     424:	20 91 14 01 	lds	r18, 0x0114
     428:	30 91 15 01 	lds	r19, 0x0115
     42c:	40 91 16 01 	lds	r20, 0x0116
     430:	50 91 17 01 	lds	r21, 0x0117
     434:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__addsf3>
     438:	60 93 14 01 	sts	0x0114, r22
     43c:	70 93 15 01 	sts	0x0115, r23
     440:	80 93 16 01 	sts	0x0116, r24
     444:	90 93 17 01 	sts	0x0117, r25
	float derivative = (error - previous_error)/TIMESTEP;
	//float output = (Kp_adjust/255.0)*Kp*error + (Ki_adjust/255.0)*Ki*integral + (Kd_adjust/255.0)*Kd*derivative;
	float output = Kp*error + Ki*integral + Kd*derivative;
     448:	20 e0       	ldi	r18, 0x00	; 0
     44a:	30 e0       	ldi	r19, 0x00	; 0
     44c:	a9 01       	movw	r20, r18
     44e:	0e 94 2d 0a 	call	0x145a	; 0x145a <__mulsf3>
     452:	9b 01       	movw	r18, r22
     454:	ac 01       	movw	r20, r24
     456:	c5 01       	movw	r24, r10
     458:	b4 01       	movw	r22, r8
     45a:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__addsf3>
     45e:	4b 01       	movw	r8, r22
     460:	5c 01       	movw	r10, r24
/* PID Control */
void run_control_loop(void)
{
	int error = SETPOINT - angle;
	integral += error*TIMESTEP;
	float derivative = (error - previous_error)/TIMESTEP;
     462:	80 91 18 01 	lds	r24, 0x0118
     466:	90 91 19 01 	lds	r25, 0x0119
     46a:	96 01       	movw	r18, r12
     46c:	28 1b       	sub	r18, r24
     46e:	39 0b       	sbc	r19, r25
     470:	b9 01       	movw	r22, r18
     472:	33 0f       	add	r19, r19
     474:	88 0b       	sbc	r24, r24
     476:	99 0b       	sbc	r25, r25
     478:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__floatsisf>
     47c:	2f e6       	ldi	r18, 0x6F	; 111
     47e:	32 e1       	ldi	r19, 0x12	; 18
     480:	43 e8       	ldi	r20, 0x83	; 131
     482:	5a e3       	ldi	r21, 0x3A	; 58
     484:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <__divsf3>
	//float output = (Kp_adjust/255.0)*Kp*error + (Ki_adjust/255.0)*Ki*integral + (Kd_adjust/255.0)*Kd*derivative;
	float output = Kp*error + Ki*integral + Kd*derivative;
     488:	20 e0       	ldi	r18, 0x00	; 0
     48a:	30 e0       	ldi	r19, 0x00	; 0
     48c:	a9 01       	movw	r20, r18
     48e:	0e 94 2d 0a 	call	0x145a	; 0x145a <__mulsf3>
     492:	9b 01       	movw	r18, r22
     494:	ac 01       	movw	r20, r24
     496:	c5 01       	movw	r24, r10
     498:	b4 01       	movw	r22, r8
     49a:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__addsf3>
     49e:	4b 01       	movw	r8, r22
     4a0:	5c 01       	movw	r10, r24
	previous_error = error;
     4a2:	d0 92 19 01 	sts	0x0119, r13
     4a6:	c0 92 18 01 	sts	0x0118, r12
	
	duty_cycle = abs(output)/(45.0*Kp);
     4aa:	0e 94 45 09 	call	0x128a	; 0x128a <__fixsfsi>
     4ae:	6b 01       	movw	r12, r22
     4b0:	7c 01       	movw	r14, r24
     4b2:	cb 01       	movw	r24, r22
     4b4:	dd 20       	and	r13, r13
     4b6:	24 f4       	brge	.+8      	; 0x4c0 <run_control_loop+0xf2>
     4b8:	88 27       	eor	r24, r24
     4ba:	99 27       	eor	r25, r25
     4bc:	8c 19       	sub	r24, r12
     4be:	9d 09       	sbc	r25, r13
     4c0:	bc 01       	movw	r22, r24
     4c2:	99 0f       	add	r25, r25
     4c4:	88 0b       	sbc	r24, r24
     4c6:	99 0b       	sbc	r25, r25
     4c8:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__floatsisf>
     4cc:	20 e0       	ldi	r18, 0x00	; 0
     4ce:	30 e0       	ldi	r19, 0x00	; 0
     4d0:	44 e3       	ldi	r20, 0x34	; 52
     4d2:	52 e4       	ldi	r21, 0x42	; 66
     4d4:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <__divsf3>
     4d8:	60 93 00 01 	sts	0x0100, r22
     4dc:	70 93 01 01 	sts	0x0101, r23
     4e0:	80 93 02 01 	sts	0x0102, r24
     4e4:	90 93 03 01 	sts	0x0103, r25
	
	if (output<0){set(PORTC,6);}
     4e8:	20 e0       	ldi	r18, 0x00	; 0
     4ea:	30 e0       	ldi	r19, 0x00	; 0
     4ec:	a9 01       	movw	r20, r18
     4ee:	c5 01       	movw	r24, r10
     4f0:	b4 01       	movw	r22, r8
     4f2:	0e 94 ce 08 	call	0x119c	; 0x119c <__cmpsf2>
     4f6:	88 23       	and	r24, r24
     4f8:	14 f4       	brge	.+4      	; 0x4fe <run_control_loop+0x130>
     4fa:	46 9a       	sbi	0x08, 6	; 8
     4fc:	01 c0       	rjmp	.+2      	; 0x500 <run_control_loop+0x132>
	else{clear(PORTC,6);}
     4fe:	46 98       	cbi	0x08, 6	; 8
		
	m_usb_tx_string("\n control: ");
     500:	86 eb       	ldi	r24, 0xB6	; 182
     502:	90 e0       	ldi	r25, 0x00	; 0
     504:	0e 94 11 08 	call	0x1022	; 0x1022 <print_P>
	m_usb_tx_int((int) output);
     508:	c6 01       	movw	r24, r12
     50a:	0e 94 2d 08 	call	0x105a	; 0x105a <m_usb_tx_int>
	
}
     50e:	ff 90       	pop	r15
     510:	ef 90       	pop	r14
     512:	df 90       	pop	r13
     514:	cf 90       	pop	r12
     516:	bf 90       	pop	r11
     518:	af 90       	pop	r10
     51a:	9f 90       	pop	r9
     51c:	8f 90       	pop	r8
     51e:	08 95       	ret

00000520 <print_angle>:
	m_usb_tx_int(data[5]);
	m_usb_tx_string("\n");
}

void print_angle(int angle)//Print angle
{
     520:	cf 93       	push	r28
     522:	df 93       	push	r29
     524:	ec 01       	movw	r28, r24
	m_usb_tx_string("angle= ");
     526:	8e ea       	ldi	r24, 0xAE	; 174
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	0e 94 11 08 	call	0x1022	; 0x1022 <print_P>
	m_usb_tx_int(angle);
     52e:	ce 01       	movw	r24, r28
     530:	0e 94 2d 08 	call	0x105a	; 0x105a <m_usb_tx_int>
	m_usb_tx_string("\n");
     534:	8c ea       	ldi	r24, 0xAC	; 172
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	0e 94 11 08 	call	0x1022	; 0x1022 <print_P>
}
     53c:	df 91       	pop	r29
     53e:	cf 91       	pop	r28
     540:	08 95       	ret

00000542 <update_angle>:
	return (int)((float)previous_output*alpha + alpha*(float)(reading-previous_reading));
}

/* Get IMU data, filter, update angle, update control */
void update_angle(void)
{
     542:	4f 92       	push	r4
     544:	5f 92       	push	r5
     546:	6f 92       	push	r6
     548:	7f 92       	push	r7
     54a:	8f 92       	push	r8
     54c:	9f 92       	push	r9
     54e:	af 92       	push	r10
     550:	bf 92       	push	r11
     552:	cf 92       	push	r12
     554:	df 92       	push	r13
     556:	ef 92       	push	r14
     558:	ff 92       	push	r15
     55a:	0f 93       	push	r16
     55c:	1f 93       	push	r17
     55e:	cf 93       	push	r28
     560:	df 93       	push	r29
	if (m_imu_raw(data))
     562:	86 e2       	ldi	r24, 0x26	; 38
     564:	91 e0       	ldi	r25, 0x01	; 1
     566:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <m_imu_raw>
     56a:	88 23       	and	r24, r24
     56c:	09 f4       	brne	.+2      	; 0x570 <update_angle+0x2e>
     56e:	c2 c0       	rjmp	.+388    	; 0x6f4 <update_angle+0x1b2>
	{
		m_green(ON);
     570:	6a 9a       	sbi	0x0d, 2	; 13
     572:	72 98       	cbi	0x0e, 2	; 14
		m_red(OFF);		
     574:	6e 9a       	sbi	0x0d, 6	; 13
     576:	76 9a       	sbi	0x0e, 6	; 14
		
		ax = lowpass(0.7,ax,data[0])+AX_OFFSET;
     578:	c6 e2       	ldi	r28, 0x26	; 38
     57a:	d1 e0       	ldi	r29, 0x01	; 1
     57c:	28 81       	ld	r18, Y
     57e:	39 81       	ldd	r19, Y+1	; 0x01
     580:	40 91 24 01 	lds	r20, 0x0124
     584:	50 91 25 01 	lds	r21, 0x0125
     588:	63 e3       	ldi	r22, 0x33	; 51
     58a:	73 e3       	ldi	r23, 0x33	; 51
     58c:	83 e3       	ldi	r24, 0x33	; 51
     58e:	9f e3       	ldi	r25, 0x3F	; 63
     590:	0e 94 66 01 	call	0x2cc	; 0x2cc <lowpass>
     594:	88 58       	subi	r24, 0x88	; 136
     596:	91 09       	sbc	r25, r1
     598:	6c 01       	movw	r12, r24
     59a:	90 93 25 01 	sts	0x0125, r25
     59e:	80 93 24 01 	sts	0x0124, r24
		az = lowpass(0.7,az,data[2])+AZ_OFFSET;
     5a2:	2c 81       	ldd	r18, Y+4	; 0x04
     5a4:	3d 81       	ldd	r19, Y+5	; 0x05
     5a6:	40 91 22 01 	lds	r20, 0x0122
     5aa:	50 91 23 01 	lds	r21, 0x0123
     5ae:	63 e3       	ldi	r22, 0x33	; 51
     5b0:	73 e3       	ldi	r23, 0x33	; 51
     5b2:	83 e3       	ldi	r24, 0x33	; 51
     5b4:	9f e3       	ldi	r25, 0x3F	; 63
     5b6:	0e 94 66 01 	call	0x2cc	; 0x2cc <lowpass>
     5ba:	87 96       	adiw	r24, 0x27	; 39
     5bc:	7c 01       	movw	r14, r24
     5be:	90 93 23 01 	sts	0x0123, r25
     5c2:	80 93 22 01 	sts	0x0122, r24
		gy = lowpass(ALPHA_LOW,gy,data[4])+GY_OFFSET;
     5c6:	08 84       	ldd	r0, Y+8	; 0x08
     5c8:	d9 85       	ldd	r29, Y+9	; 0x09
     5ca:	c0 2d       	mov	r28, r0
     5cc:	40 91 20 01 	lds	r20, 0x0120
     5d0:	50 91 21 01 	lds	r21, 0x0121
     5d4:	9e 01       	movw	r18, r28
     5d6:	63 e3       	ldi	r22, 0x33	; 51
     5d8:	73 e3       	ldi	r23, 0x33	; 51
     5da:	83 e7       	ldi	r24, 0x73	; 115
     5dc:	9f e3       	ldi	r25, 0x3F	; 63
     5de:	0e 94 66 01 	call	0x2cc	; 0x2cc <lowpass>
		gy = highpass(ALPHA_HIGH,gy,gy_previous_reading,data[4]);
     5e2:	20 91 1e 01 	lds	r18, 0x011E
     5e6:	30 91 1f 01 	lds	r19, 0x011F
		m_green(ON);
		m_red(OFF);		
		
		ax = lowpass(0.7,ax,data[0])+AX_OFFSET;
		az = lowpass(0.7,az,data[2])+AZ_OFFSET;
		gy = lowpass(ALPHA_LOW,gy,data[4])+GY_OFFSET;
     5ea:	ac 01       	movw	r20, r24
     5ec:	49 57       	subi	r20, 0x79	; 121
     5ee:	51 09       	sbc	r21, r1
		gy = highpass(ALPHA_HIGH,gy,gy_previous_reading,data[4]);
     5f0:	8e 01       	movw	r16, r28
     5f2:	6d ec       	ldi	r22, 0xCD	; 205
     5f4:	7c ec       	ldi	r23, 0xCC	; 204
     5f6:	8c ec       	ldi	r24, 0xCC	; 204
     5f8:	9d e3       	ldi	r25, 0x3D	; 61
     5fa:	0e 94 a9 01 	call	0x352	; 0x352 <highpass>
     5fe:	8c 01       	movw	r16, r24
     600:	90 93 21 01 	sts	0x0121, r25
     604:	80 93 20 01 	sts	0x0120, r24
		gy_previous_reading = data[4];
     608:	d0 93 1f 01 	sts	0x011F, r29
     60c:	c0 93 1e 01 	sts	0x011E, r28
		
		if (check(TIFR3,OCF3A)){	//check if timestep has completed
     610:	c1 9b       	sbis	0x18, 1	; 24
     612:	69 c0       	rjmp	.+210    	; 0x6e6 <update_angle+0x1a4>
			angleSlow = ((float)ax*RAD2DEG)/sqrt(((float)ax*ax+(float)az*az));
     614:	b6 01       	movw	r22, r12
     616:	dd 0c       	add	r13, r13
     618:	88 0b       	sbc	r24, r24
     61a:	99 0b       	sbc	r25, r25
     61c:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__floatsisf>
     620:	4b 01       	movw	r8, r22
     622:	5c 01       	movw	r10, r24
     624:	b7 01       	movw	r22, r14
     626:	ff 0c       	add	r15, r15
     628:	88 0b       	sbc	r24, r24
     62a:	99 0b       	sbc	r25, r25
     62c:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__floatsisf>
     630:	6b 01       	movw	r12, r22
     632:	7c 01       	movw	r14, r24
     634:	a5 01       	movw	r20, r10
     636:	94 01       	movw	r18, r8
     638:	c5 01       	movw	r24, r10
     63a:	b4 01       	movw	r22, r8
     63c:	0e 94 2d 0a 	call	0x145a	; 0x145a <__mulsf3>
     640:	2b 01       	movw	r4, r22
     642:	3c 01       	movw	r6, r24
     644:	a7 01       	movw	r20, r14
     646:	96 01       	movw	r18, r12
     648:	c7 01       	movw	r24, r14
     64a:	b6 01       	movw	r22, r12
     64c:	0e 94 2d 0a 	call	0x145a	; 0x145a <__mulsf3>
     650:	9b 01       	movw	r18, r22
     652:	ac 01       	movw	r20, r24
     654:	c3 01       	movw	r24, r6
     656:	b2 01       	movw	r22, r4
     658:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__addsf3>
     65c:	0e 94 a0 0a 	call	0x1540	; 0x1540 <sqrt>
     660:	6b 01       	movw	r12, r22
     662:	7c 01       	movw	r14, r24
     664:	23 e3       	ldi	r18, 0x33	; 51
     666:	33 e3       	ldi	r19, 0x33	; 51
     668:	45 e6       	ldi	r20, 0x65	; 101
     66a:	52 e4       	ldi	r21, 0x42	; 66
     66c:	c5 01       	movw	r24, r10
     66e:	b4 01       	movw	r22, r8
     670:	0e 94 2d 0a 	call	0x145a	; 0x145a <__mulsf3>
     674:	a7 01       	movw	r20, r14
     676:	96 01       	movw	r18, r12
     678:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <__divsf3>
     67c:	0e 94 45 09 	call	0x128a	; 0x128a <__fixsfsi>
     680:	6b 01       	movw	r12, r22
     682:	7c 01       	movw	r14, r24
     684:	70 93 3d 01 	sts	0x013D, r23
     688:	60 93 3c 01 	sts	0x013C, r22
			angleFast += gy*TIMESTEP;	//add thetadot*timestep to angle
     68c:	60 91 1c 01 	lds	r22, 0x011C
     690:	70 91 1d 01 	lds	r23, 0x011D
     694:	07 2e       	mov	r0, r23
     696:	00 0c       	add	r0, r0
     698:	88 0b       	sbc	r24, r24
     69a:	99 0b       	sbc	r25, r25
     69c:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__floatsisf>
     6a0:	4b 01       	movw	r8, r22
     6a2:	5c 01       	movw	r10, r24
     6a4:	b8 01       	movw	r22, r16
     6a6:	11 0f       	add	r17, r17
     6a8:	88 0b       	sbc	r24, r24
     6aa:	99 0b       	sbc	r25, r25
     6ac:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__floatsisf>
     6b0:	2f e6       	ldi	r18, 0x6F	; 111
     6b2:	32 e1       	ldi	r19, 0x12	; 18
     6b4:	43 e8       	ldi	r20, 0x83	; 131
     6b6:	5a e3       	ldi	r21, 0x3A	; 58
     6b8:	0e 94 2d 0a 	call	0x145a	; 0x145a <__mulsf3>
     6bc:	9b 01       	movw	r18, r22
     6be:	ac 01       	movw	r20, r24
     6c0:	c5 01       	movw	r24, r10
     6c2:	b4 01       	movw	r22, r8
     6c4:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__addsf3>
     6c8:	0e 94 45 09 	call	0x128a	; 0x128a <__fixsfsi>
     6cc:	70 93 1d 01 	sts	0x011D, r23
     6d0:	60 93 1c 01 	sts	0x011C, r22
			angle = -1*(-angleSlow + angleFast);	//flip sign for IMU mounted upside down 
     6d4:	c6 1a       	sub	r12, r22
     6d6:	d7 0a       	sbc	r13, r23
     6d8:	d0 92 1b 01 	sts	0x011B, r13
     6dc:	c0 92 1a 01 	sts	0x011A, r12
			set(TIFR3,OCF3A);		//reset flag
     6e0:	c1 9a       	sbi	0x18, 1	; 24
			run_control_loop(); // Update control
     6e2:	0e 94 e7 01 	call	0x3ce	; 0x3ce <run_control_loop>
		}
		
		print_angle(angle);
     6e6:	80 91 1a 01 	lds	r24, 0x011A
     6ea:	90 91 1b 01 	lds	r25, 0x011B
     6ee:	0e 94 90 02 	call	0x520	; 0x520 <print_angle>
     6f2:	04 c0       	rjmp	.+8      	; 0x6fc <update_angle+0x1ba>

	}
	else
	{
		m_green(OFF);
     6f4:	6a 9a       	sbi	0x0d, 2	; 13
     6f6:	72 9a       	sbi	0x0e, 2	; 14
		m_red(ON);
     6f8:	6e 9a       	sbi	0x0d, 6	; 13
     6fa:	76 98       	cbi	0x0e, 6	; 14
	}
}
     6fc:	df 91       	pop	r29
     6fe:	cf 91       	pop	r28
     700:	1f 91       	pop	r17
     702:	0f 91       	pop	r16
     704:	ff 90       	pop	r15
     706:	ef 90       	pop	r14
     708:	df 90       	pop	r13
     70a:	cf 90       	pop	r12
     70c:	bf 90       	pop	r11
     70e:	af 90       	pop	r10
     710:	9f 90       	pop	r9
     712:	8f 90       	pop	r8
     714:	7f 90       	pop	r7
     716:	6f 90       	pop	r6
     718:	5f 90       	pop	r5
     71a:	4f 90       	pop	r4
     71c:	08 95       	ret

0000071e <main>:
Main Loop
************************************************************/
int main(void)
{
	/* Confirm Power */
	m_red(ON);
     71e:	6e 9a       	sbi	0x0d, 6	; 13
     720:	76 98       	cbi	0x0e, 6	; 14

	/* Initializations */
	init();
     722:	0e 94 da 00 	call	0x1b4	; 0x1b4 <init>
}

/* Setup USB */
void usb_enable(void)
{
	m_usb_init();
     726:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <m_usb_init>
	m_red(ON);

	/* Initializations */
	init();
	usb_enable();
	wireless_enable();
     72a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <wireless_enable>
	timer1_init();
     72e:	0e 94 0a 01 	call	0x214	; 0x214 <timer1_init>
	timer3_init();
     732:	0e 94 46 01 	call	0x28c	; 0x28c <timer3_init>

	/* Confirm successful initialization(s) */
	m_green(ON);
     736:	6a 9a       	sbi	0x0d, 2	; 13
     738:	72 98       	cbi	0x0e, 2	; 14

	/* Run */
	while (1){
		update_angle();
     73a:	0e 94 a1 02 	call	0x542	; 0x542 <update_angle>
	}
     73e:	fd cf       	rjmp	.-6      	; 0x73a <main+0x1c>

00000740 <__vector_3>:

/************************************************************
Interrupts
************************************************************/

ISR(INT2_vect){
     740:	1f 92       	push	r1
     742:	0f 92       	push	r0
     744:	0f b6       	in	r0, 0x3f	; 63
     746:	0f 92       	push	r0
     748:	11 24       	eor	r1, r1
     74a:	2f 93       	push	r18
     74c:	3f 93       	push	r19
     74e:	4f 93       	push	r20
     750:	5f 93       	push	r21
     752:	6f 93       	push	r22
     754:	7f 93       	push	r23
     756:	8f 93       	push	r24
     758:	9f 93       	push	r25
     75a:	af 93       	push	r26
     75c:	bf 93       	push	r27
     75e:	ef 93       	push	r30
     760:	ff 93       	push	r31
	wireless_recieve();
     762:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <wireless_recieve>
}
     766:	ff 91       	pop	r31
     768:	ef 91       	pop	r30
     76a:	bf 91       	pop	r27
     76c:	af 91       	pop	r26
     76e:	9f 91       	pop	r25
     770:	8f 91       	pop	r24
     772:	7f 91       	pop	r23
     774:	6f 91       	pop	r22
     776:	5f 91       	pop	r21
     778:	4f 91       	pop	r20
     77a:	3f 91       	pop	r19
     77c:	2f 91       	pop	r18
     77e:	0f 90       	pop	r0
     780:	0f be       	out	0x3f, r0	; 63
     782:	0f 90       	pop	r0
     784:	1f 90       	pop	r1
     786:	18 95       	reti

00000788 <m_bus_init>:
     788:	58 9a       	sbi	0x0b, 0	; 11
     78a:	59 9a       	sbi	0x0b, 1	; 11
     78c:	5a 9a       	sbi	0x0b, 2	; 11
     78e:	8c e0       	ldi	r24, 0x0C	; 12
     790:	80 93 b8 00 	sts	0x00B8, r24
     794:	e9 e6       	ldi	r30, 0x69	; 105
     796:	f0 e0       	ldi	r31, 0x00	; 0
     798:	80 81       	ld	r24, Z
     79a:	80 62       	ori	r24, 0x20	; 32
     79c:	80 83       	st	Z, r24
     79e:	80 81       	ld	r24, Z
     7a0:	8f 7e       	andi	r24, 0xEF	; 239
     7a2:	80 83       	st	Z, r24
     7a4:	ea 9a       	sbi	0x1d, 2	; 29
     7a6:	78 94       	sei
     7a8:	08 95       	ret

000007aa <twi_read_byte>:
     7aa:	84 e8       	ldi	r24, 0x84	; 132
     7ac:	80 93 bc 00 	sts	0x00BC, r24
     7b0:	ec eb       	ldi	r30, 0xBC	; 188
     7b2:	f0 e0       	ldi	r31, 0x00	; 0
     7b4:	80 81       	ld	r24, Z
     7b6:	88 23       	and	r24, r24
     7b8:	ec f7       	brge	.-6      	; 0x7b4 <twi_read_byte+0xa>
     7ba:	80 91 bb 00 	lds	r24, 0x00BB
     7be:	08 95       	ret

000007c0 <twi_wait_for_ack>:
     7c0:	20 e0       	ldi	r18, 0x00	; 0
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	ec eb       	ldi	r30, 0xBC	; 188
     7c6:	f0 e0       	ldi	r31, 0x00	; 0
     7c8:	80 81       	ld	r24, Z
     7ca:	88 23       	and	r24, r24
     7cc:	34 f0       	brlt	.+12     	; 0x7da <twi_wait_for_ack+0x1a>
     7ce:	2f 5f       	subi	r18, 0xFF	; 255
     7d0:	3f 4f       	sbci	r19, 0xFF	; 255
     7d2:	29 3e       	cpi	r18, 0xE9	; 233
     7d4:	83 e0       	ldi	r24, 0x03	; 3
     7d6:	38 07       	cpc	r19, r24
     7d8:	b9 f7       	brne	.-18     	; 0x7c8 <twi_wait_for_ack+0x8>
     7da:	81 e0       	ldi	r24, 0x01	; 1
     7dc:	28 3e       	cpi	r18, 0xE8	; 232
     7de:	33 40       	sbci	r19, 0x03	; 3
     7e0:	09 f4       	brne	.+2      	; 0x7e4 <twi_wait_for_ack+0x24>
     7e2:	80 e0       	ldi	r24, 0x00	; 0
     7e4:	08 95       	ret

000007e6 <twi_send_byte>:
     7e6:	80 93 bb 00 	sts	0x00BB, r24
     7ea:	84 e8       	ldi	r24, 0x84	; 132
     7ec:	80 93 bc 00 	sts	0x00BC, r24
     7f0:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <twi_wait_for_ack>
     7f4:	88 23       	and	r24, r24
     7f6:	19 f0       	breq	.+6      	; 0x7fe <twi_send_byte+0x18>
     7f8:	80 91 b9 00 	lds	r24, 0x00B9
     7fc:	88 7f       	andi	r24, 0xF8	; 248
     7fe:	08 95       	ret

00000800 <twi_start>:
     800:	cf 93       	push	r28
     802:	df 93       	push	r29
     804:	c8 2f       	mov	r28, r24
     806:	d6 2f       	mov	r29, r22
     808:	84 ea       	ldi	r24, 0xA4	; 164
     80a:	80 93 bc 00 	sts	0x00BC, r24
     80e:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <twi_wait_for_ack>
     812:	81 11       	cpse	r24, r1
     814:	04 c0       	rjmp	.+8      	; 0x81e <twi_start+0x1e>
     816:	94 e9       	ldi	r25, 0x94	; 148
     818:	90 93 bc 00 	sts	0x00BC, r25
     81c:	1c c0       	rjmp	.+56     	; 0x856 <twi_start+0x56>
     81e:	dd 23       	and	r29, r29
     820:	61 f0       	breq	.+24     	; 0x83a <twi_start+0x3a>
     822:	8c 2f       	mov	r24, r28
     824:	88 0f       	add	r24, r24
     826:	8f 5f       	subi	r24, 0xFF	; 255
     828:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <twi_send_byte>
     82c:	88 34       	cpi	r24, 0x48	; 72
     82e:	81 f4       	brne	.+32     	; 0x850 <twi_start+0x50>
     830:	84 e9       	ldi	r24, 0x94	; 148
     832:	80 93 bc 00 	sts	0x00BC, r24
     836:	80 e0       	ldi	r24, 0x00	; 0
     838:	0e c0       	rjmp	.+28     	; 0x856 <twi_start+0x56>
     83a:	8c 2f       	mov	r24, r28
     83c:	88 0f       	add	r24, r24
     83e:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <twi_send_byte>
     842:	80 32       	cpi	r24, 0x20	; 32
     844:	39 f4       	brne	.+14     	; 0x854 <twi_start+0x54>
     846:	84 e9       	ldi	r24, 0x94	; 148
     848:	80 93 bc 00 	sts	0x00BC, r24
     84c:	80 e0       	ldi	r24, 0x00	; 0
     84e:	03 c0       	rjmp	.+6      	; 0x856 <twi_start+0x56>
     850:	81 e0       	ldi	r24, 0x01	; 1
     852:	01 c0       	rjmp	.+2      	; 0x856 <twi_start+0x56>
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	df 91       	pop	r29
     858:	cf 91       	pop	r28
     85a:	08 95       	ret

0000085c <m_read_register>:
     85c:	cf 93       	push	r28
     85e:	df 93       	push	r29
     860:	c8 2f       	mov	r28, r24
     862:	d6 2f       	mov	r29, r22
     864:	60 e0       	ldi	r22, 0x00	; 0
     866:	0e 94 00 04 	call	0x800	; 0x800 <twi_start>
     86a:	88 23       	and	r24, r24
     86c:	79 f0       	breq	.+30     	; 0x88c <m_read_register+0x30>
     86e:	8d 2f       	mov	r24, r29
     870:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <twi_send_byte>
     874:	88 23       	and	r24, r24
     876:	51 f0       	breq	.+20     	; 0x88c <m_read_register+0x30>
     878:	84 e9       	ldi	r24, 0x94	; 148
     87a:	80 93 bc 00 	sts	0x00BC, r24
     87e:	61 e0       	ldi	r22, 0x01	; 1
     880:	8c 2f       	mov	r24, r28
     882:	0e 94 00 04 	call	0x800	; 0x800 <twi_start>
     886:	81 11       	cpse	r24, r1
     888:	0e 94 d5 03 	call	0x7aa	; 0x7aa <twi_read_byte>
     88c:	df 91       	pop	r29
     88e:	cf 91       	pop	r28
     890:	08 95       	ret

00000892 <m_write_register>:
     892:	cf 93       	push	r28
     894:	df 93       	push	r29
     896:	c6 2f       	mov	r28, r22
     898:	d4 2f       	mov	r29, r20
     89a:	60 e0       	ldi	r22, 0x00	; 0
     89c:	0e 94 00 04 	call	0x800	; 0x800 <twi_start>
     8a0:	88 23       	and	r24, r24
     8a2:	71 f0       	breq	.+28     	; 0x8c0 <m_write_register+0x2e>
     8a4:	8c 2f       	mov	r24, r28
     8a6:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <twi_send_byte>
     8aa:	88 23       	and	r24, r24
     8ac:	49 f0       	breq	.+18     	; 0x8c0 <m_write_register+0x2e>
     8ae:	8d 2f       	mov	r24, r29
     8b0:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <twi_send_byte>
     8b4:	88 23       	and	r24, r24
     8b6:	21 f0       	breq	.+8      	; 0x8c0 <m_write_register+0x2e>
     8b8:	84 e9       	ldi	r24, 0x94	; 148
     8ba:	80 93 bc 00 	sts	0x00BC, r24
     8be:	81 e0       	ldi	r24, 0x01	; 1
     8c0:	df 91       	pop	r29
     8c2:	cf 91       	pop	r28
     8c4:	08 95       	ret

000008c6 <m_imu_init>:
     8c6:	cf 93       	push	r28
     8c8:	df 93       	push	r29
     8ca:	84 30       	cpi	r24, 0x04	; 4
     8cc:	08 f0       	brcs	.+2      	; 0x8d0 <m_imu_init+0xa>
     8ce:	60 c0       	rjmp	.+192    	; 0x990 <m_imu_init+0xca>
     8d0:	64 30       	cpi	r22, 0x04	; 4
     8d2:	08 f0       	brcs	.+2      	; 0x8d6 <m_imu_init+0x10>
     8d4:	5f c0       	rjmp	.+190    	; 0x994 <m_imu_init+0xce>
     8d6:	d6 2f       	mov	r29, r22
     8d8:	c8 2f       	mov	r28, r24
     8da:	0e 94 c4 03 	call	0x788	; 0x788 <m_bus_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8de:	2f e5       	ldi	r18, 0x5F	; 95
     8e0:	8a ee       	ldi	r24, 0xEA	; 234
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	21 50       	subi	r18, 0x01	; 1
     8e6:	80 40       	sbci	r24, 0x00	; 0
     8e8:	90 40       	sbci	r25, 0x00	; 0
     8ea:	e1 f7       	brne	.-8      	; 0x8e4 <m_imu_init+0x1e>
     8ec:	00 c0       	rjmp	.+0      	; 0x8ee <m_imu_init+0x28>
     8ee:	00 00       	nop
     8f0:	65 e7       	ldi	r22, 0x75	; 117
     8f2:	89 e6       	ldi	r24, 0x69	; 105
     8f4:	0e 94 2e 04 	call	0x85c	; 0x85c <m_read_register>
     8f8:	88 36       	cpi	r24, 0x68	; 104
     8fa:	09 f0       	breq	.+2      	; 0x8fe <m_imu_init+0x38>
     8fc:	4d c0       	rjmp	.+154    	; 0x998 <m_imu_init+0xd2>
     8fe:	41 e0       	ldi	r20, 0x01	; 1
     900:	6b e6       	ldi	r22, 0x6B	; 107
     902:	89 e6       	ldi	r24, 0x69	; 105
     904:	0e 94 49 04 	call	0x892	; 0x892 <m_write_register>
     908:	4c 2f       	mov	r20, r28
     90a:	44 0f       	add	r20, r20
     90c:	44 0f       	add	r20, r20
     90e:	44 0f       	add	r20, r20
     910:	6c e1       	ldi	r22, 0x1C	; 28
     912:	89 e6       	ldi	r24, 0x69	; 105
     914:	0e 94 49 04 	call	0x892	; 0x892 <m_write_register>
     918:	4d 2f       	mov	r20, r29
     91a:	44 0f       	add	r20, r20
     91c:	44 0f       	add	r20, r20
     91e:	44 0f       	add	r20, r20
     920:	6b e1       	ldi	r22, 0x1B	; 27
     922:	89 e6       	ldi	r24, 0x69	; 105
     924:	0e 94 49 04 	call	0x892	; 0x892 <m_write_register>
     928:	42 e0       	ldi	r20, 0x02	; 2
     92a:	67 e3       	ldi	r22, 0x37	; 55
     92c:	89 e6       	ldi	r24, 0x69	; 105
     92e:	0e 94 49 04 	call	0x892	; 0x892 <m_write_register>
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	62 e0       	ldi	r22, 0x02	; 2
     936:	8e e1       	ldi	r24, 0x1E	; 30
     938:	0e 94 49 04 	call	0x892	; 0x892 <m_write_register>
     93c:	40 e0       	ldi	r20, 0x00	; 0
     93e:	67 e3       	ldi	r22, 0x37	; 55
     940:	89 e6       	ldi	r24, 0x69	; 105
     942:	0e 94 49 04 	call	0x892	; 0x892 <m_write_register>
     946:	4e e1       	ldi	r20, 0x1E	; 30
     948:	64 e3       	ldi	r22, 0x34	; 52
     94a:	89 e6       	ldi	r24, 0x69	; 105
     94c:	0e 94 49 04 	call	0x892	; 0x892 <m_write_register>
     950:	41 e0       	ldi	r20, 0x01	; 1
     952:	67 e6       	ldi	r22, 0x67	; 103
     954:	89 e6       	ldi	r24, 0x69	; 105
     956:	0e 94 49 04 	call	0x892	; 0x892 <m_write_register>
     95a:	4d e1       	ldi	r20, 0x1D	; 29
     95c:	64 e2       	ldi	r22, 0x24	; 36
     95e:	89 e6       	ldi	r24, 0x69	; 105
     960:	0e 94 49 04 	call	0x892	; 0x892 <m_write_register>
     964:	4e e9       	ldi	r20, 0x9E	; 158
     966:	65 e2       	ldi	r22, 0x25	; 37
     968:	89 e6       	ldi	r24, 0x69	; 105
     96a:	0e 94 49 04 	call	0x892	; 0x892 <m_write_register>
     96e:	43 e0       	ldi	r20, 0x03	; 3
     970:	66 e2       	ldi	r22, 0x26	; 38
     972:	89 e6       	ldi	r24, 0x69	; 105
     974:	0e 94 49 04 	call	0x892	; 0x892 <m_write_register>
     978:	46 e9       	ldi	r20, 0x96	; 150
     97a:	67 e2       	ldi	r22, 0x27	; 39
     97c:	89 e6       	ldi	r24, 0x69	; 105
     97e:	0e 94 49 04 	call	0x892	; 0x892 <m_write_register>
     982:	40 e2       	ldi	r20, 0x20	; 32
     984:	6a e6       	ldi	r22, 0x6A	; 106
     986:	89 e6       	ldi	r24, 0x69	; 105
     988:	0e 94 49 04 	call	0x892	; 0x892 <m_write_register>
     98c:	81 e0       	ldi	r24, 0x01	; 1
     98e:	05 c0       	rjmp	.+10     	; 0x99a <m_imu_init+0xd4>
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	03 c0       	rjmp	.+6      	; 0x99a <m_imu_init+0xd4>
     994:	80 e0       	ldi	r24, 0x00	; 0
     996:	01 c0       	rjmp	.+2      	; 0x99a <m_imu_init+0xd4>
     998:	80 e0       	ldi	r24, 0x00	; 0
     99a:	df 91       	pop	r29
     99c:	cf 91       	pop	r28
     99e:	08 95       	ret

000009a0 <m_imu_raw>:
     9a0:	cf 92       	push	r12
     9a2:	df 92       	push	r13
     9a4:	ef 92       	push	r14
     9a6:	ff 92       	push	r15
     9a8:	1f 93       	push	r17
     9aa:	cf 93       	push	r28
     9ac:	df 93       	push	r29
     9ae:	cd b7       	in	r28, 0x3d	; 61
     9b0:	de b7       	in	r29, 0x3e	; 62
     9b2:	64 97       	sbiw	r28, 0x14	; 20
     9b4:	0f b6       	in	r0, 0x3f	; 63
     9b6:	f8 94       	cli
     9b8:	de bf       	out	0x3e, r29	; 62
     9ba:	0f be       	out	0x3f, r0	; 63
     9bc:	cd bf       	out	0x3d, r28	; 61
     9be:	6c 01       	movw	r12, r24
     9c0:	ce 01       	movw	r24, r28
     9c2:	01 96       	adiw	r24, 0x01	; 1
     9c4:	7c 01       	movw	r14, r24
     9c6:	1e e4       	ldi	r17, 0x4E	; 78
     9c8:	61 2f       	mov	r22, r17
     9ca:	89 e6       	ldi	r24, 0x69	; 105
     9cc:	0e 94 2e 04 	call	0x85c	; 0x85c <m_read_register>
     9d0:	f7 01       	movw	r30, r14
     9d2:	81 93       	st	Z+, r24
     9d4:	7f 01       	movw	r14, r30
     9d6:	11 50       	subi	r17, 0x01	; 1
     9d8:	1a 33       	cpi	r17, 0x3A	; 58
     9da:	b1 f7       	brne	.-20     	; 0x9c8 <m_imu_raw+0x28>
     9dc:	8f 85       	ldd	r24, Y+15	; 0x0f
     9de:	98 89       	ldd	r25, Y+16	; 0x10
     9e0:	f6 01       	movw	r30, r12
     9e2:	95 83       	std	Z+5, r25	; 0x05
     9e4:	84 83       	std	Z+4, r24	; 0x04
     9e6:	8f 81       	ldd	r24, Y+7	; 0x07
     9e8:	98 85       	ldd	r25, Y+8	; 0x08
     9ea:	93 87       	std	Z+11, r25	; 0x0b
     9ec:	82 87       	std	Z+10, r24	; 0x0a
     9ee:	89 81       	ldd	r24, Y+1	; 0x01
     9f0:	9a 81       	ldd	r25, Y+2	; 0x02
     9f2:	91 8b       	std	Z+17, r25	; 0x11
     9f4:	80 8b       	std	Z+16, r24	; 0x10
     9f6:	89 89       	ldd	r24, Y+17	; 0x11
     9f8:	9a 89       	ldd	r25, Y+18	; 0x12
     9fa:	93 83       	std	Z+3, r25	; 0x03
     9fc:	82 83       	std	Z+2, r24	; 0x02
     9fe:	89 85       	ldd	r24, Y+9	; 0x09
     a00:	9a 85       	ldd	r25, Y+10	; 0x0a
     a02:	91 87       	std	Z+9, r25	; 0x09
     a04:	80 87       	std	Z+8, r24	; 0x08
     a06:	8b 81       	ldd	r24, Y+3	; 0x03
     a08:	9c 81       	ldd	r25, Y+4	; 0x04
     a0a:	97 87       	std	Z+15, r25	; 0x0f
     a0c:	86 87       	std	Z+14, r24	; 0x0e
     a0e:	8b 89       	ldd	r24, Y+19	; 0x13
     a10:	9c 89       	ldd	r25, Y+20	; 0x14
     a12:	91 83       	std	Z+1, r25	; 0x01
     a14:	80 83       	st	Z, r24
     a16:	8b 85       	ldd	r24, Y+11	; 0x0b
     a18:	9c 85       	ldd	r25, Y+12	; 0x0c
     a1a:	97 83       	std	Z+7, r25	; 0x07
     a1c:	86 83       	std	Z+6, r24	; 0x06
     a1e:	8d 81       	ldd	r24, Y+5	; 0x05
     a20:	9e 81       	ldd	r25, Y+6	; 0x06
     a22:	95 87       	std	Z+13, r25	; 0x0d
     a24:	84 87       	std	Z+12, r24	; 0x0c
     a26:	81 e0       	ldi	r24, 0x01	; 1
     a28:	64 96       	adiw	r28, 0x14	; 20
     a2a:	0f b6       	in	r0, 0x3f	; 63
     a2c:	f8 94       	cli
     a2e:	de bf       	out	0x3e, r29	; 62
     a30:	0f be       	out	0x3f, r0	; 63
     a32:	cd bf       	out	0x3d, r28	; 61
     a34:	df 91       	pop	r29
     a36:	cf 91       	pop	r28
     a38:	1f 91       	pop	r17
     a3a:	ff 90       	pop	r15
     a3c:	ef 90       	pop	r14
     a3e:	df 90       	pop	r13
     a40:	cf 90       	pop	r12
     a42:	08 95       	ret

00000a44 <m_rf_open>:
     a44:	1f 93       	push	r17
     a46:	cf 93       	push	r28
     a48:	df 93       	push	r29
     a4a:	18 2f       	mov	r17, r24
     a4c:	d6 2f       	mov	r29, r22
     a4e:	c4 2f       	mov	r28, r20
     a50:	0e 94 c4 03 	call	0x788	; 0x788 <m_bus_init>
     a54:	94 ea       	ldi	r25, 0xA4	; 164
     a56:	90 93 bc 00 	sts	0x00BC, r25
     a5a:	ec eb       	ldi	r30, 0xBC	; 188
     a5c:	f0 e0       	ldi	r31, 0x00	; 0
     a5e:	90 81       	ld	r25, Z
     a60:	99 23       	and	r25, r25
     a62:	ec f7       	brge	.-6      	; 0xa5e <m_rf_open+0x1a>
     a64:	90 e5       	ldi	r25, 0x50	; 80
     a66:	90 93 bb 00 	sts	0x00BB, r25
     a6a:	94 e8       	ldi	r25, 0x84	; 132
     a6c:	90 93 bc 00 	sts	0x00BC, r25
     a70:	ec eb       	ldi	r30, 0xBC	; 188
     a72:	f0 e0       	ldi	r31, 0x00	; 0
     a74:	90 81       	ld	r25, Z
     a76:	99 23       	and	r25, r25
     a78:	ec f7       	brge	.-6      	; 0xa74 <m_rf_open+0x30>
     a7a:	90 91 b9 00 	lds	r25, 0x00B9
     a7e:	98 7f       	andi	r25, 0xF8	; 248
     a80:	90 32       	cpi	r25, 0x20	; 32
     a82:	29 f4       	brne	.+10     	; 0xa8e <m_rf_open+0x4a>
     a84:	84 e9       	ldi	r24, 0x94	; 148
     a86:	80 93 bc 00 	sts	0x00BC, r24
     a8a:	80 e0       	ldi	r24, 0x00	; 0
     a8c:	2d c0       	rjmp	.+90     	; 0xae8 <m_rf_open+0xa4>
     a8e:	81 e0       	ldi	r24, 0x01	; 1
     a90:	80 93 bb 00 	sts	0x00BB, r24
     a94:	84 e8       	ldi	r24, 0x84	; 132
     a96:	80 93 bc 00 	sts	0x00BC, r24
     a9a:	ec eb       	ldi	r30, 0xBC	; 188
     a9c:	f0 e0       	ldi	r31, 0x00	; 0
     a9e:	90 81       	ld	r25, Z
     aa0:	99 23       	and	r25, r25
     aa2:	ec f7       	brge	.-6      	; 0xa9e <m_rf_open+0x5a>
     aa4:	10 93 bb 00 	sts	0x00BB, r17
     aa8:	84 e8       	ldi	r24, 0x84	; 132
     aaa:	80 93 bc 00 	sts	0x00BC, r24
     aae:	ec eb       	ldi	r30, 0xBC	; 188
     ab0:	f0 e0       	ldi	r31, 0x00	; 0
     ab2:	80 81       	ld	r24, Z
     ab4:	88 23       	and	r24, r24
     ab6:	ec f7       	brge	.-6      	; 0xab2 <m_rf_open+0x6e>
     ab8:	d0 93 bb 00 	sts	0x00BB, r29
     abc:	84 e8       	ldi	r24, 0x84	; 132
     abe:	80 93 bc 00 	sts	0x00BC, r24
     ac2:	ec eb       	ldi	r30, 0xBC	; 188
     ac4:	f0 e0       	ldi	r31, 0x00	; 0
     ac6:	80 81       	ld	r24, Z
     ac8:	88 23       	and	r24, r24
     aca:	ec f7       	brge	.-6      	; 0xac6 <m_rf_open+0x82>
     acc:	c0 93 bb 00 	sts	0x00BB, r28
     ad0:	84 e8       	ldi	r24, 0x84	; 132
     ad2:	80 93 bc 00 	sts	0x00BC, r24
     ad6:	ec eb       	ldi	r30, 0xBC	; 188
     ad8:	f0 e0       	ldi	r31, 0x00	; 0
     ada:	80 81       	ld	r24, Z
     adc:	88 23       	and	r24, r24
     ade:	ec f7       	brge	.-6      	; 0xada <m_rf_open+0x96>
     ae0:	84 e9       	ldi	r24, 0x94	; 148
     ae2:	80 93 bc 00 	sts	0x00BC, r24
     ae6:	81 e0       	ldi	r24, 0x01	; 1
     ae8:	df 91       	pop	r29
     aea:	cf 91       	pop	r28
     aec:	1f 91       	pop	r17
     aee:	08 95       	ret

00000af0 <m_rf_read>:
     af0:	cf 93       	push	r28
     af2:	df 93       	push	r29
     af4:	9c 01       	movw	r18, r24
     af6:	84 ea       	ldi	r24, 0xA4	; 164
     af8:	80 93 bc 00 	sts	0x00BC, r24
     afc:	ec eb       	ldi	r30, 0xBC	; 188
     afe:	f0 e0       	ldi	r31, 0x00	; 0
     b00:	90 81       	ld	r25, Z
     b02:	99 23       	and	r25, r25
     b04:	ec f7       	brge	.-6      	; 0xb00 <__stack+0x1>
     b06:	81 e5       	ldi	r24, 0x51	; 81
     b08:	80 93 bb 00 	sts	0x00BB, r24
     b0c:	84 e8       	ldi	r24, 0x84	; 132
     b0e:	80 93 bc 00 	sts	0x00BC, r24
     b12:	ec eb       	ldi	r30, 0xBC	; 188
     b14:	f0 e0       	ldi	r31, 0x00	; 0
     b16:	90 81       	ld	r25, Z
     b18:	99 23       	and	r25, r25
     b1a:	ec f7       	brge	.-6      	; 0xb16 <__stack+0x17>
     b1c:	80 91 b9 00 	lds	r24, 0x00B9
     b20:	88 7f       	andi	r24, 0xF8	; 248
     b22:	88 34       	cpi	r24, 0x48	; 72
     b24:	29 f4       	brne	.+10     	; 0xb30 <__stack+0x31>
     b26:	84 e9       	ldi	r24, 0x94	; 148
     b28:	80 93 bc 00 	sts	0x00BC, r24
     b2c:	80 e0       	ldi	r24, 0x00	; 0
     b2e:	41 c0       	rjmp	.+130    	; 0xbb2 <__stack+0xb3>
     b30:	84 ec       	ldi	r24, 0xC4	; 196
     b32:	80 93 bc 00 	sts	0x00BC, r24
     b36:	ec eb       	ldi	r30, 0xBC	; 188
     b38:	f0 e0       	ldi	r31, 0x00	; 0
     b3a:	90 81       	ld	r25, Z
     b3c:	99 23       	and	r25, r25
     b3e:	ec f7       	brge	.-6      	; 0xb3a <__stack+0x3b>
     b40:	40 91 bb 00 	lds	r20, 0x00BB
     b44:	46 13       	cpse	r20, r22
     b46:	09 c0       	rjmp	.+18     	; 0xb5a <__stack+0x5b>
     b48:	84 2f       	mov	r24, r20
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	01 97       	sbiw	r24, 0x01	; 1
     b4e:	18 16       	cp	r1, r24
     b50:	19 06       	cpc	r1, r25
     b52:	44 f0       	brlt	.+16     	; 0xb64 <__stack+0x65>
     b54:	40 e0       	ldi	r20, 0x00	; 0
     b56:	50 e0       	ldi	r21, 0x00	; 0
     b58:	1a c0       	rjmp	.+52     	; 0xb8e <__stack+0x8f>
     b5a:	84 e9       	ldi	r24, 0x94	; 148
     b5c:	80 93 bc 00 	sts	0x00BC, r24
     b60:	80 e0       	ldi	r24, 0x00	; 0
     b62:	27 c0       	rjmp	.+78     	; 0xbb2 <__stack+0xb3>
     b64:	d9 01       	movw	r26, r18
     b66:	50 e0       	ldi	r21, 0x00	; 0
     b68:	41 50       	subi	r20, 0x01	; 1
     b6a:	51 09       	sbc	r21, r1
     b6c:	b9 01       	movw	r22, r18
     b6e:	64 0f       	add	r22, r20
     b70:	75 1f       	adc	r23, r21
     b72:	ec eb       	ldi	r30, 0xBC	; 188
     b74:	f0 e0       	ldi	r31, 0x00	; 0
     b76:	84 ec       	ldi	r24, 0xC4	; 196
     b78:	cb eb       	ldi	r28, 0xBB	; 187
     b7a:	d0 e0       	ldi	r29, 0x00	; 0
     b7c:	80 83       	st	Z, r24
     b7e:	90 81       	ld	r25, Z
     b80:	99 23       	and	r25, r25
     b82:	ec f7       	brge	.-6      	; 0xb7e <__stack+0x7f>
     b84:	98 81       	ld	r25, Y
     b86:	9d 93       	st	X+, r25
     b88:	a6 17       	cp	r26, r22
     b8a:	b7 07       	cpc	r27, r23
     b8c:	b9 f7       	brne	.-18     	; 0xb7c <__stack+0x7d>
     b8e:	84 e8       	ldi	r24, 0x84	; 132
     b90:	80 93 bc 00 	sts	0x00BC, r24
     b94:	ec eb       	ldi	r30, 0xBC	; 188
     b96:	f0 e0       	ldi	r31, 0x00	; 0
     b98:	90 81       	ld	r25, Z
     b9a:	99 23       	and	r25, r25
     b9c:	ec f7       	brge	.-6      	; 0xb98 <__stack+0x99>
     b9e:	80 91 bb 00 	lds	r24, 0x00BB
     ba2:	f9 01       	movw	r30, r18
     ba4:	e4 0f       	add	r30, r20
     ba6:	f5 1f       	adc	r31, r21
     ba8:	80 83       	st	Z, r24
     baa:	84 e9       	ldi	r24, 0x94	; 148
     bac:	80 93 bc 00 	sts	0x00BC, r24
     bb0:	81 e0       	ldi	r24, 0x01	; 1
     bb2:	df 91       	pop	r29
     bb4:	cf 91       	pop	r28
     bb6:	08 95       	ret

00000bb8 <m_usb_init>:
     bb8:	81 e0       	ldi	r24, 0x01	; 1
     bba:	80 93 d7 00 	sts	0x00D7, r24
     bbe:	80 ea       	ldi	r24, 0xA0	; 160
     bc0:	80 93 d8 00 	sts	0x00D8, r24
     bc4:	82 e1       	ldi	r24, 0x12	; 18
     bc6:	89 bd       	out	0x29, r24	; 41
     bc8:	09 b4       	in	r0, 0x29	; 41
     bca:	00 fe       	sbrs	r0, 0
     bcc:	fd cf       	rjmp	.-6      	; 0xbc8 <m_usb_init+0x10>
     bce:	80 e9       	ldi	r24, 0x90	; 144
     bd0:	80 93 d8 00 	sts	0x00D8, r24
     bd4:	10 92 e0 00 	sts	0x00E0, r1
     bd8:	10 92 3b 01 	sts	0x013B, r1
     bdc:	10 92 38 01 	sts	0x0138, r1
     be0:	8c e0       	ldi	r24, 0x0C	; 12
     be2:	80 93 e2 00 	sts	0x00E2, r24
     be6:	78 94       	sei
     be8:	08 95       	ret

00000bea <m_usb_tx_char>:
     bea:	cf 93       	push	r28
     bec:	df 93       	push	r29
     bee:	90 91 3b 01 	lds	r25, 0x013B
     bf2:	99 23       	and	r25, r25
     bf4:	09 f4       	brne	.+2      	; 0xbf8 <m_usb_tx_char+0xe>
     bf6:	4c c0       	rjmp	.+152    	; 0xc90 <m_usb_tx_char+0xa6>
     bf8:	9f b7       	in	r25, 0x3f	; 63
     bfa:	f8 94       	cli
     bfc:	24 e0       	ldi	r18, 0x04	; 4
     bfe:	20 93 e9 00 	sts	0x00E9, r18
     c02:	20 91 39 01 	lds	r18, 0x0139
     c06:	22 23       	and	r18, r18
     c08:	49 f0       	breq	.+18     	; 0xc1c <m_usb_tx_char+0x32>
     c0a:	20 91 e8 00 	lds	r18, 0x00E8
     c0e:	25 fd       	sbrc	r18, 5
     c10:	03 c0       	rjmp	.+6      	; 0xc18 <m_usb_tx_char+0x2e>
     c12:	9f bf       	out	0x3f, r25	; 63
     c14:	8f ef       	ldi	r24, 0xFF	; 255
     c16:	41 c0       	rjmp	.+130    	; 0xc9a <m_usb_tx_char+0xb0>
     c18:	10 92 39 01 	sts	0x0139, r1
     c1c:	30 91 e4 00 	lds	r19, 0x00E4
     c20:	37 5e       	subi	r19, 0xE7	; 231
     c22:	20 91 e8 00 	lds	r18, 0x00E8
     c26:	25 fd       	sbrc	r18, 5
     c28:	24 c0       	rjmp	.+72     	; 0xc72 <m_usb_tx_char+0x88>
     c2a:	9f bf       	out	0x3f, r25	; 63
     c2c:	90 91 e4 00 	lds	r25, 0x00E4
     c30:	93 17       	cp	r25, r19
     c32:	81 f0       	breq	.+32     	; 0xc54 <m_usb_tx_char+0x6a>
     c34:	90 91 3b 01 	lds	r25, 0x013B
     c38:	99 23       	and	r25, r25
     c3a:	61 f1       	breq	.+88     	; 0xc94 <m_usb_tx_char+0xaa>
     c3c:	a9 ee       	ldi	r26, 0xE9	; 233
     c3e:	b0 e0       	ldi	r27, 0x00	; 0
     c40:	44 e0       	ldi	r20, 0x04	; 4
     c42:	e8 ee       	ldi	r30, 0xE8	; 232
     c44:	f0 e0       	ldi	r31, 0x00	; 0
     c46:	c4 ee       	ldi	r28, 0xE4	; 228
     c48:	d0 e0       	ldi	r29, 0x00	; 0
     c4a:	0d c0       	rjmp	.+26     	; 0xc66 <m_usb_tx_char+0x7c>
     c4c:	9f bf       	out	0x3f, r25	; 63
     c4e:	98 81       	ld	r25, Y
     c50:	93 13       	cpse	r25, r19
     c52:	05 c0       	rjmp	.+10     	; 0xc5e <m_usb_tx_char+0x74>
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	80 93 39 01 	sts	0x0139, r24
     c5a:	8f ef       	ldi	r24, 0xFF	; 255
     c5c:	1e c0       	rjmp	.+60     	; 0xc9a <m_usb_tx_char+0xb0>
     c5e:	90 91 3b 01 	lds	r25, 0x013B
     c62:	99 23       	and	r25, r25
     c64:	c9 f0       	breq	.+50     	; 0xc98 <m_usb_tx_char+0xae>
     c66:	9f b7       	in	r25, 0x3f	; 63
     c68:	f8 94       	cli
     c6a:	4c 93       	st	X, r20
     c6c:	20 81       	ld	r18, Z
     c6e:	25 ff       	sbrs	r18, 5
     c70:	ed cf       	rjmp	.-38     	; 0xc4c <m_usb_tx_char+0x62>
     c72:	80 93 f1 00 	sts	0x00F1, r24
     c76:	80 91 e8 00 	lds	r24, 0x00E8
     c7a:	85 fd       	sbrc	r24, 5
     c7c:	03 c0       	rjmp	.+6      	; 0xc84 <m_usb_tx_char+0x9a>
     c7e:	8a e3       	ldi	r24, 0x3A	; 58
     c80:	80 93 e8 00 	sts	0x00E8, r24
     c84:	85 e0       	ldi	r24, 0x05	; 5
     c86:	80 93 3a 01 	sts	0x013A, r24
     c8a:	9f bf       	out	0x3f, r25	; 63
     c8c:	80 e0       	ldi	r24, 0x00	; 0
     c8e:	05 c0       	rjmp	.+10     	; 0xc9a <m_usb_tx_char+0xb0>
     c90:	8f ef       	ldi	r24, 0xFF	; 255
     c92:	03 c0       	rjmp	.+6      	; 0xc9a <m_usb_tx_char+0xb0>
     c94:	8f ef       	ldi	r24, 0xFF	; 255
     c96:	01 c0       	rjmp	.+2      	; 0xc9a <m_usb_tx_char+0xb0>
     c98:	8f ef       	ldi	r24, 0xFF	; 255
     c9a:	df 91       	pop	r29
     c9c:	cf 91       	pop	r28
     c9e:	08 95       	ret

00000ca0 <__vector_10>:
     ca0:	1f 92       	push	r1
     ca2:	0f 92       	push	r0
     ca4:	0f b6       	in	r0, 0x3f	; 63
     ca6:	0f 92       	push	r0
     ca8:	11 24       	eor	r1, r1
     caa:	8f 93       	push	r24
     cac:	9f 93       	push	r25
     cae:	ef 93       	push	r30
     cb0:	ff 93       	push	r31
     cb2:	e1 ee       	ldi	r30, 0xE1	; 225
     cb4:	f0 e0       	ldi	r31, 0x00	; 0
     cb6:	80 81       	ld	r24, Z
     cb8:	10 82       	st	Z, r1
     cba:	83 ff       	sbrs	r24, 3
     cbc:	11 c0       	rjmp	.+34     	; 0xce0 <__vector_10+0x40>
     cbe:	10 92 e9 00 	sts	0x00E9, r1
     cc2:	91 e0       	ldi	r25, 0x01	; 1
     cc4:	90 93 eb 00 	sts	0x00EB, r25
     cc8:	10 92 ec 00 	sts	0x00EC, r1
     ccc:	92 e1       	ldi	r25, 0x12	; 18
     cce:	90 93 ed 00 	sts	0x00ED, r25
     cd2:	98 e0       	ldi	r25, 0x08	; 8
     cd4:	90 93 f0 00 	sts	0x00F0, r25
     cd8:	10 92 3b 01 	sts	0x013B, r1
     cdc:	10 92 38 01 	sts	0x0138, r1
     ce0:	82 ff       	sbrs	r24, 2
     ce2:	13 c0       	rjmp	.+38     	; 0xd0a <__vector_10+0x6a>
     ce4:	80 91 3b 01 	lds	r24, 0x013B
     ce8:	88 23       	and	r24, r24
     cea:	79 f0       	breq	.+30     	; 0xd0a <__vector_10+0x6a>
     cec:	80 91 3a 01 	lds	r24, 0x013A
     cf0:	88 23       	and	r24, r24
     cf2:	59 f0       	breq	.+22     	; 0xd0a <__vector_10+0x6a>
     cf4:	81 50       	subi	r24, 0x01	; 1
     cf6:	80 93 3a 01 	sts	0x013A, r24
     cfa:	81 11       	cpse	r24, r1
     cfc:	06 c0       	rjmp	.+12     	; 0xd0a <__vector_10+0x6a>
     cfe:	84 e0       	ldi	r24, 0x04	; 4
     d00:	80 93 e9 00 	sts	0x00E9, r24
     d04:	8a e3       	ldi	r24, 0x3A	; 58
     d06:	80 93 e8 00 	sts	0x00E8, r24
     d0a:	ff 91       	pop	r31
     d0c:	ef 91       	pop	r30
     d0e:	9f 91       	pop	r25
     d10:	8f 91       	pop	r24
     d12:	0f 90       	pop	r0
     d14:	0f be       	out	0x3f, r0	; 63
     d16:	0f 90       	pop	r0
     d18:	1f 90       	pop	r1
     d1a:	18 95       	reti

00000d1c <__vector_11>:
     d1c:	1f 92       	push	r1
     d1e:	0f 92       	push	r0
     d20:	0f b6       	in	r0, 0x3f	; 63
     d22:	0f 92       	push	r0
     d24:	11 24       	eor	r1, r1
     d26:	0f 93       	push	r16
     d28:	1f 93       	push	r17
     d2a:	2f 93       	push	r18
     d2c:	3f 93       	push	r19
     d2e:	4f 93       	push	r20
     d30:	5f 93       	push	r21
     d32:	6f 93       	push	r22
     d34:	7f 93       	push	r23
     d36:	8f 93       	push	r24
     d38:	9f 93       	push	r25
     d3a:	af 93       	push	r26
     d3c:	bf 93       	push	r27
     d3e:	cf 93       	push	r28
     d40:	df 93       	push	r29
     d42:	ef 93       	push	r30
     d44:	ff 93       	push	r31
     d46:	10 92 e9 00 	sts	0x00E9, r1
     d4a:	80 91 e8 00 	lds	r24, 0x00E8
     d4e:	83 ff       	sbrs	r24, 3
     d50:	4c c1       	rjmp	.+664    	; 0xfea <__vector_11+0x2ce>
     d52:	e1 ef       	ldi	r30, 0xF1	; 241
     d54:	f0 e0       	ldi	r31, 0x00	; 0
     d56:	60 81       	ld	r22, Z
     d58:	80 81       	ld	r24, Z
     d5a:	20 81       	ld	r18, Z
     d5c:	90 81       	ld	r25, Z
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	39 2b       	or	r19, r25
     d62:	40 81       	ld	r20, Z
     d64:	90 81       	ld	r25, Z
     d66:	50 e0       	ldi	r21, 0x00	; 0
     d68:	59 2b       	or	r21, r25
     d6a:	70 81       	ld	r23, Z
     d6c:	c0 81       	ld	r28, Z
     d6e:	92 ef       	ldi	r25, 0xF2	; 242
     d70:	90 93 e8 00 	sts	0x00E8, r25
     d74:	86 30       	cpi	r24, 0x06	; 6
     d76:	09 f0       	breq	.+2      	; 0xd7a <__vector_11+0x5e>
     d78:	58 c0       	rjmp	.+176    	; 0xe2a <__vector_11+0x10e>
     d7a:	04 c0       	rjmp	.+8      	; 0xd84 <__vector_11+0x68>
     d7c:	81 e2       	ldi	r24, 0x21	; 33
     d7e:	80 93 eb 00 	sts	0x00EB, r24
     d82:	3a c1       	rjmp	.+628    	; 0xff8 <__vector_11+0x2dc>
     d84:	66 e0       	ldi	r22, 0x06	; 6
     d86:	82 ec       	ldi	r24, 0xC2	; 194
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	fc 01       	movw	r30, r24
     d8c:	a5 91       	lpm	r26, Z+
     d8e:	b4 91       	lpm	r27, Z
     d90:	2a 17       	cp	r18, r26
     d92:	3b 07       	cpc	r19, r27
     d94:	11 f0       	breq	.+4      	; 0xd9a <__vector_11+0x7e>
     d96:	07 96       	adiw	r24, 0x07	; 7
     d98:	23 c0       	rjmp	.+70     	; 0xde0 <__vector_11+0xc4>
     d9a:	fc 01       	movw	r30, r24
     d9c:	32 96       	adiw	r30, 0x02	; 2
     d9e:	a5 91       	lpm	r26, Z+
     da0:	b4 91       	lpm	r27, Z
     da2:	4a 17       	cp	r20, r26
     da4:	5b 07       	cpc	r21, r27
     da6:	11 f0       	breq	.+4      	; 0xdac <__vector_11+0x90>
     da8:	07 96       	adiw	r24, 0x07	; 7
     daa:	1a c0       	rjmp	.+52     	; 0xde0 <__vector_11+0xc4>
     dac:	fc 01       	movw	r30, r24
     dae:	34 96       	adiw	r30, 0x04	; 4
     db0:	45 91       	lpm	r20, Z+
     db2:	54 91       	lpm	r21, Z
     db4:	fc 01       	movw	r30, r24
     db6:	36 96       	adiw	r30, 0x06	; 6
     db8:	24 91       	lpm	r18, Z
     dba:	87 2f       	mov	r24, r23
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	9c 2b       	or	r25, r28
     dc0:	8f 3f       	cpi	r24, 0xFF	; 255
     dc2:	91 05       	cpc	r25, r1
     dc4:	19 f0       	breq	.+6      	; 0xdcc <__vector_11+0xb0>
     dc6:	10 f0       	brcs	.+4      	; 0xdcc <__vector_11+0xb0>
     dc8:	8f ef       	ldi	r24, 0xFF	; 255
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	82 17       	cp	r24, r18
     dce:	08 f4       	brcc	.+2      	; 0xdd2 <__vector_11+0xb6>
     dd0:	28 2f       	mov	r18, r24
     dd2:	a8 ee       	ldi	r26, 0xE8	; 232
     dd4:	b0 e0       	ldi	r27, 0x00	; 0
     dd6:	70 e1       	ldi	r23, 0x10	; 16
     dd8:	6e ef       	ldi	r22, 0xFE	; 254
     dda:	c1 ef       	ldi	r28, 0xF1	; 241
     ddc:	d0 e0       	ldi	r29, 0x00	; 0
     dde:	03 c0       	rjmp	.+6      	; 0xde6 <__vector_11+0xca>
     de0:	61 50       	subi	r22, 0x01	; 1
     de2:	99 f6       	brne	.-90     	; 0xd8a <__vector_11+0x6e>
     de4:	cb cf       	rjmp	.-106    	; 0xd7c <__vector_11+0x60>
     de6:	8c 91       	ld	r24, X
     de8:	98 2f       	mov	r25, r24
     dea:	95 70       	andi	r25, 0x05	; 5
     dec:	e1 f3       	breq	.-8      	; 0xde6 <__vector_11+0xca>
     dee:	82 fd       	sbrc	r24, 2
     df0:	03 c1       	rjmp	.+518    	; 0xff8 <__vector_11+0x2dc>
     df2:	32 2f       	mov	r19, r18
     df4:	21 31       	cpi	r18, 0x11	; 17
     df6:	08 f0       	brcs	.+2      	; 0xdfa <__vector_11+0xde>
     df8:	37 2f       	mov	r19, r23
     dfa:	33 23       	and	r19, r19
     dfc:	09 f4       	brne	.+2      	; 0xe00 <__vector_11+0xe4>
     dfe:	f9 c0       	rjmp	.+498    	; 0xff2 <__vector_11+0x2d6>
     e00:	fa 01       	movw	r30, r20
     e02:	83 2f       	mov	r24, r19
     e04:	94 91       	lpm	r25, Z
     e06:	98 83       	st	Y, r25
     e08:	81 50       	subi	r24, 0x01	; 1
     e0a:	31 96       	adiw	r30, 0x01	; 1
     e0c:	81 11       	cpse	r24, r1
     e0e:	fa cf       	rjmp	.-12     	; 0xe04 <__vector_11+0xe8>
     e10:	8f ef       	ldi	r24, 0xFF	; 255
     e12:	83 0f       	add	r24, r19
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	01 96       	adiw	r24, 0x01	; 1
     e18:	48 0f       	add	r20, r24
     e1a:	59 1f       	adc	r21, r25
     e1c:	23 1b       	sub	r18, r19
     e1e:	6c 93       	st	X, r22
     e20:	21 11       	cpse	r18, r1
     e22:	e1 cf       	rjmp	.-62     	; 0xde6 <__vector_11+0xca>
     e24:	30 31       	cpi	r19, 0x10	; 16
     e26:	f9 f2       	breq	.-66     	; 0xde6 <__vector_11+0xca>
     e28:	e7 c0       	rjmp	.+462    	; 0xff8 <__vector_11+0x2dc>
     e2a:	85 30       	cpi	r24, 0x05	; 5
     e2c:	61 f4       	brne	.+24     	; 0xe46 <__vector_11+0x12a>
     e2e:	8e ef       	ldi	r24, 0xFE	; 254
     e30:	80 93 e8 00 	sts	0x00E8, r24
     e34:	e8 ee       	ldi	r30, 0xE8	; 232
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	80 81       	ld	r24, Z
     e3a:	80 ff       	sbrs	r24, 0
     e3c:	fd cf       	rjmp	.-6      	; 0xe38 <__vector_11+0x11c>
     e3e:	20 68       	ori	r18, 0x80	; 128
     e40:	20 93 e3 00 	sts	0x00E3, r18
     e44:	d9 c0       	rjmp	.+434    	; 0xff8 <__vector_11+0x2dc>
     e46:	89 30       	cpi	r24, 0x09	; 9
     e48:	09 f0       	breq	.+2      	; 0xe4c <__vector_11+0x130>
     e4a:	35 c0       	rjmp	.+106    	; 0xeb6 <__vector_11+0x19a>
     e4c:	61 11       	cpse	r22, r1
     e4e:	cd c0       	rjmp	.+410    	; 0xfea <__vector_11+0x2ce>
     e50:	20 93 3b 01 	sts	0x013B, r18
     e54:	10 92 38 01 	sts	0x0138, r1
     e58:	10 92 3a 01 	sts	0x013A, r1
     e5c:	8e ef       	ldi	r24, 0xFE	; 254
     e5e:	80 93 e8 00 	sts	0x00E8, r24
     e62:	81 e0       	ldi	r24, 0x01	; 1
     e64:	2b e6       	ldi	r18, 0x6B	; 107
     e66:	31 e0       	ldi	r19, 0x01	; 1
     e68:	c9 ee       	ldi	r28, 0xE9	; 233
     e6a:	d0 e0       	ldi	r29, 0x00	; 0
     e6c:	ab ee       	ldi	r26, 0xEB	; 235
     e6e:	b0 e0       	ldi	r27, 0x00	; 0
     e70:	0c ee       	ldi	r16, 0xEC	; 236
     e72:	10 e0       	ldi	r17, 0x00	; 0
     e74:	6d ee       	ldi	r22, 0xED	; 237
     e76:	70 e0       	ldi	r23, 0x00	; 0
     e78:	88 83       	st	Y, r24
     e7a:	a9 01       	movw	r20, r18
     e7c:	4f 5f       	subi	r20, 0xFF	; 255
     e7e:	5f 4f       	sbci	r21, 0xFF	; 255
     e80:	f9 01       	movw	r30, r18
     e82:	94 91       	lpm	r25, Z
     e84:	9c 93       	st	X, r25
     e86:	99 23       	and	r25, r25
     e88:	61 f0       	breq	.+24     	; 0xea2 <__vector_11+0x186>
     e8a:	fa 01       	movw	r30, r20
     e8c:	44 91       	lpm	r20, Z
     e8e:	f8 01       	movw	r30, r16
     e90:	40 83       	st	Z, r20
     e92:	f9 01       	movw	r30, r18
     e94:	32 96       	adiw	r30, 0x02	; 2
     e96:	94 91       	lpm	r25, Z
     e98:	2d 5f       	subi	r18, 0xFD	; 253
     e9a:	3f 4f       	sbci	r19, 0xFF	; 255
     e9c:	fb 01       	movw	r30, r22
     e9e:	90 83       	st	Z, r25
     ea0:	01 c0       	rjmp	.+2      	; 0xea4 <__vector_11+0x188>
     ea2:	9a 01       	movw	r18, r20
     ea4:	8f 5f       	subi	r24, 0xFF	; 255
     ea6:	85 30       	cpi	r24, 0x05	; 5
     ea8:	39 f7       	brne	.-50     	; 0xe78 <__vector_11+0x15c>
     eaa:	ea ee       	ldi	r30, 0xEA	; 234
     eac:	f0 e0       	ldi	r31, 0x00	; 0
     eae:	8e e1       	ldi	r24, 0x1E	; 30
     eb0:	80 83       	st	Z, r24
     eb2:	10 82       	st	Z, r1
     eb4:	a1 c0       	rjmp	.+322    	; 0xff8 <__vector_11+0x2dc>
     eb6:	88 30       	cpi	r24, 0x08	; 8
     eb8:	81 f4       	brne	.+32     	; 0xeda <__vector_11+0x1be>
     eba:	60 38       	cpi	r22, 0x80	; 128
     ebc:	09 f0       	breq	.+2      	; 0xec0 <__vector_11+0x1a4>
     ebe:	95 c0       	rjmp	.+298    	; 0xfea <__vector_11+0x2ce>
     ec0:	e8 ee       	ldi	r30, 0xE8	; 232
     ec2:	f0 e0       	ldi	r31, 0x00	; 0
     ec4:	80 81       	ld	r24, Z
     ec6:	80 ff       	sbrs	r24, 0
     ec8:	fd cf       	rjmp	.-6      	; 0xec4 <__vector_11+0x1a8>
     eca:	80 91 3b 01 	lds	r24, 0x013B
     ece:	80 93 f1 00 	sts	0x00F1, r24
     ed2:	8e ef       	ldi	r24, 0xFE	; 254
     ed4:	80 93 e8 00 	sts	0x00E8, r24
     ed8:	8f c0       	rjmp	.+286    	; 0xff8 <__vector_11+0x2dc>
     eda:	81 32       	cpi	r24, 0x21	; 33
     edc:	b9 f4       	brne	.+46     	; 0xf0c <__vector_11+0x1f0>
     ede:	61 3a       	cpi	r22, 0xA1	; 161
     ee0:	09 f0       	breq	.+2      	; 0xee4 <__vector_11+0x1c8>
     ee2:	83 c0       	rjmp	.+262    	; 0xfea <__vector_11+0x2ce>
     ee4:	e8 ee       	ldi	r30, 0xE8	; 232
     ee6:	f0 e0       	ldi	r31, 0x00	; 0
     ee8:	80 81       	ld	r24, Z
     eea:	80 ff       	sbrs	r24, 0
     eec:	fd cf       	rjmp	.-6      	; 0xee8 <__vector_11+0x1cc>
     eee:	e6 e0       	ldi	r30, 0x06	; 6
     ef0:	f1 e0       	ldi	r31, 0x01	; 1
     ef2:	2d e0       	ldi	r18, 0x0D	; 13
     ef4:	31 e0       	ldi	r19, 0x01	; 1
     ef6:	a1 ef       	ldi	r26, 0xF1	; 241
     ef8:	b0 e0       	ldi	r27, 0x00	; 0
     efa:	81 91       	ld	r24, Z+
     efc:	8c 93       	st	X, r24
     efe:	e2 17       	cp	r30, r18
     f00:	f3 07       	cpc	r31, r19
     f02:	d9 f7       	brne	.-10     	; 0xefa <__vector_11+0x1de>
     f04:	8e ef       	ldi	r24, 0xFE	; 254
     f06:	80 93 e8 00 	sts	0x00E8, r24
     f0a:	76 c0       	rjmp	.+236    	; 0xff8 <__vector_11+0x2dc>
     f0c:	80 32       	cpi	r24, 0x20	; 32
     f0e:	d1 f4       	brne	.+52     	; 0xf44 <__vector_11+0x228>
     f10:	61 32       	cpi	r22, 0x21	; 33
     f12:	09 f0       	breq	.+2      	; 0xf16 <__vector_11+0x1fa>
     f14:	6a c0       	rjmp	.+212    	; 0xfea <__vector_11+0x2ce>
     f16:	e8 ee       	ldi	r30, 0xE8	; 232
     f18:	f0 e0       	ldi	r31, 0x00	; 0
     f1a:	80 81       	ld	r24, Z
     f1c:	82 ff       	sbrs	r24, 2
     f1e:	fd cf       	rjmp	.-6      	; 0xf1a <__vector_11+0x1fe>
     f20:	e6 e0       	ldi	r30, 0x06	; 6
     f22:	f1 e0       	ldi	r31, 0x01	; 1
     f24:	2d e0       	ldi	r18, 0x0D	; 13
     f26:	31 e0       	ldi	r19, 0x01	; 1
     f28:	a1 ef       	ldi	r26, 0xF1	; 241
     f2a:	b0 e0       	ldi	r27, 0x00	; 0
     f2c:	8c 91       	ld	r24, X
     f2e:	81 93       	st	Z+, r24
     f30:	e2 17       	cp	r30, r18
     f32:	f3 07       	cpc	r31, r19
     f34:	d9 f7       	brne	.-10     	; 0xf2c <__vector_11+0x210>
     f36:	e8 ee       	ldi	r30, 0xE8	; 232
     f38:	f0 e0       	ldi	r31, 0x00	; 0
     f3a:	8b ef       	ldi	r24, 0xFB	; 251
     f3c:	80 83       	st	Z, r24
     f3e:	8e ef       	ldi	r24, 0xFE	; 254
     f40:	80 83       	st	Z, r24
     f42:	5a c0       	rjmp	.+180    	; 0xff8 <__vector_11+0x2dc>
     f44:	82 32       	cpi	r24, 0x22	; 34
     f46:	71 f4       	brne	.+28     	; 0xf64 <__vector_11+0x248>
     f48:	61 32       	cpi	r22, 0x21	; 33
     f4a:	09 f0       	breq	.+2      	; 0xf4e <__vector_11+0x232>
     f4c:	4e c0       	rjmp	.+156    	; 0xfea <__vector_11+0x2ce>
     f4e:	20 93 38 01 	sts	0x0138, r18
     f52:	e8 ee       	ldi	r30, 0xE8	; 232
     f54:	f0 e0       	ldi	r31, 0x00	; 0
     f56:	80 81       	ld	r24, Z
     f58:	80 ff       	sbrs	r24, 0
     f5a:	fd cf       	rjmp	.-6      	; 0xf56 <__vector_11+0x23a>
     f5c:	8e ef       	ldi	r24, 0xFE	; 254
     f5e:	80 93 e8 00 	sts	0x00E8, r24
     f62:	4a c0       	rjmp	.+148    	; 0xff8 <__vector_11+0x2dc>
     f64:	81 11       	cpse	r24, r1
     f66:	1a c0       	rjmp	.+52     	; 0xf9c <__vector_11+0x280>
     f68:	e8 ee       	ldi	r30, 0xE8	; 232
     f6a:	f0 e0       	ldi	r31, 0x00	; 0
     f6c:	80 81       	ld	r24, Z
     f6e:	80 ff       	sbrs	r24, 0
     f70:	fd cf       	rjmp	.-6      	; 0xf6c <__vector_11+0x250>
     f72:	62 38       	cpi	r22, 0x82	; 130
     f74:	51 f4       	brne	.+20     	; 0xf8a <__vector_11+0x26e>
     f76:	e9 ee       	ldi	r30, 0xE9	; 233
     f78:	f0 e0       	ldi	r31, 0x00	; 0
     f7a:	40 83       	st	Z, r20
     f7c:	80 91 eb 00 	lds	r24, 0x00EB
     f80:	85 fb       	bst	r24, 5
     f82:	88 27       	eor	r24, r24
     f84:	80 f9       	bld	r24, 0
     f86:	10 82       	st	Z, r1
     f88:	01 c0       	rjmp	.+2      	; 0xf8c <__vector_11+0x270>
     f8a:	80 e0       	ldi	r24, 0x00	; 0
     f8c:	e1 ef       	ldi	r30, 0xF1	; 241
     f8e:	f0 e0       	ldi	r31, 0x00	; 0
     f90:	80 83       	st	Z, r24
     f92:	10 82       	st	Z, r1
     f94:	8e ef       	ldi	r24, 0xFE	; 254
     f96:	80 93 e8 00 	sts	0x00E8, r24
     f9a:	2e c0       	rjmp	.+92     	; 0xff8 <__vector_11+0x2dc>
     f9c:	98 2f       	mov	r25, r24
     f9e:	9d 7f       	andi	r25, 0xFD	; 253
     fa0:	91 30       	cpi	r25, 0x01	; 1
     fa2:	19 f5       	brne	.+70     	; 0xfea <__vector_11+0x2ce>
     fa4:	62 30       	cpi	r22, 0x02	; 2
     fa6:	09 f5       	brne	.+66     	; 0xfea <__vector_11+0x2ce>
     fa8:	23 2b       	or	r18, r19
     faa:	f9 f4       	brne	.+62     	; 0xfea <__vector_11+0x2ce>
     fac:	4f 77       	andi	r20, 0x7F	; 127
     fae:	9f ef       	ldi	r25, 0xFF	; 255
     fb0:	94 0f       	add	r25, r20
     fb2:	94 30       	cpi	r25, 0x04	; 4
     fb4:	d0 f4       	brcc	.+52     	; 0xfea <__vector_11+0x2ce>
     fb6:	9e ef       	ldi	r25, 0xFE	; 254
     fb8:	90 93 e8 00 	sts	0x00E8, r25
     fbc:	40 93 e9 00 	sts	0x00E9, r20
     fc0:	83 30       	cpi	r24, 0x03	; 3
     fc2:	21 f4       	brne	.+8      	; 0xfcc <__vector_11+0x2b0>
     fc4:	81 e2       	ldi	r24, 0x21	; 33
     fc6:	80 93 eb 00 	sts	0x00EB, r24
     fca:	16 c0       	rjmp	.+44     	; 0xff8 <__vector_11+0x2dc>
     fcc:	89 e1       	ldi	r24, 0x19	; 25
     fce:	80 93 eb 00 	sts	0x00EB, r24
     fd2:	81 e0       	ldi	r24, 0x01	; 1
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	02 c0       	rjmp	.+4      	; 0xfdc <__vector_11+0x2c0>
     fd8:	88 0f       	add	r24, r24
     fda:	99 1f       	adc	r25, r25
     fdc:	4a 95       	dec	r20
     fde:	e2 f7       	brpl	.-8      	; 0xfd8 <__vector_11+0x2bc>
     fe0:	ea ee       	ldi	r30, 0xEA	; 234
     fe2:	f0 e0       	ldi	r31, 0x00	; 0
     fe4:	80 83       	st	Z, r24
     fe6:	10 82       	st	Z, r1
     fe8:	07 c0       	rjmp	.+14     	; 0xff8 <__vector_11+0x2dc>
     fea:	81 e2       	ldi	r24, 0x21	; 33
     fec:	80 93 eb 00 	sts	0x00EB, r24
     ff0:	03 c0       	rjmp	.+6      	; 0xff8 <__vector_11+0x2dc>
     ff2:	6c 93       	st	X, r22
     ff4:	21 11       	cpse	r18, r1
     ff6:	f7 ce       	rjmp	.-530    	; 0xde6 <__vector_11+0xca>
     ff8:	ff 91       	pop	r31
     ffa:	ef 91       	pop	r30
     ffc:	df 91       	pop	r29
     ffe:	cf 91       	pop	r28
    1000:	bf 91       	pop	r27
    1002:	af 91       	pop	r26
    1004:	9f 91       	pop	r25
    1006:	8f 91       	pop	r24
    1008:	7f 91       	pop	r23
    100a:	6f 91       	pop	r22
    100c:	5f 91       	pop	r21
    100e:	4f 91       	pop	r20
    1010:	3f 91       	pop	r19
    1012:	2f 91       	pop	r18
    1014:	1f 91       	pop	r17
    1016:	0f 91       	pop	r16
    1018:	0f 90       	pop	r0
    101a:	0f be       	out	0x3f, r0	; 63
    101c:	0f 90       	pop	r0
    101e:	1f 90       	pop	r1
    1020:	18 95       	reti

00001022 <print_P>:
    1022:	0f 93       	push	r16
    1024:	1f 93       	push	r17
    1026:	cf 93       	push	r28
    1028:	8c 01       	movw	r16, r24
    102a:	0f 5f       	subi	r16, 0xFF	; 255
    102c:	1f 4f       	sbci	r17, 0xFF	; 255
    102e:	fc 01       	movw	r30, r24
    1030:	c4 91       	lpm	r28, Z
    1032:	cc 23       	and	r28, r28
    1034:	71 f0       	breq	.+28     	; 0x1052 <print_P+0x30>
    1036:	ca 30       	cpi	r28, 0x0A	; 10
    1038:	19 f4       	brne	.+6      	; 0x1040 <print_P+0x1e>
    103a:	8d e0       	ldi	r24, 0x0D	; 13
    103c:	0e 94 f5 05 	call	0xbea	; 0xbea <m_usb_tx_char>
    1040:	8c 2f       	mov	r24, r28
    1042:	0e 94 f5 05 	call	0xbea	; 0xbea <m_usb_tx_char>
    1046:	f8 01       	movw	r30, r16
    1048:	c4 91       	lpm	r28, Z
    104a:	0f 5f       	subi	r16, 0xFF	; 255
    104c:	1f 4f       	sbci	r17, 0xFF	; 255
    104e:	c1 11       	cpse	r28, r1
    1050:	f2 cf       	rjmp	.-28     	; 0x1036 <print_P+0x14>
    1052:	cf 91       	pop	r28
    1054:	1f 91       	pop	r17
    1056:	0f 91       	pop	r16
    1058:	08 95       	ret

0000105a <m_usb_tx_int>:
    105a:	ef 92       	push	r14
    105c:	ff 92       	push	r15
    105e:	0f 93       	push	r16
    1060:	1f 93       	push	r17
    1062:	cf 93       	push	r28
    1064:	df 93       	push	r29
    1066:	cd b7       	in	r28, 0x3d	; 61
    1068:	de b7       	in	r29, 0x3e	; 62
    106a:	27 97       	sbiw	r28, 0x07	; 7
    106c:	0f b6       	in	r0, 0x3f	; 63
    106e:	f8 94       	cli
    1070:	de bf       	out	0x3e, r29	; 62
    1072:	0f be       	out	0x3f, r0	; 63
    1074:	cd bf       	out	0x3d, r28	; 61
    1076:	8e 01       	movw	r16, r28
    1078:	0f 5f       	subi	r16, 0xFF	; 255
    107a:	1f 4f       	sbci	r17, 0xFF	; 255
    107c:	27 e0       	ldi	r18, 0x07	; 7
    107e:	f8 01       	movw	r30, r16
    1080:	11 92       	st	Z+, r1
    1082:	2a 95       	dec	r18
    1084:	e9 f7       	brne	.-6      	; 0x1080 <m_usb_tx_int+0x26>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    1086:	4a e0       	ldi	r20, 0x0A	; 10
    1088:	b8 01       	movw	r22, r16
    108a:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <__itoa_ncheck>
    108e:	7e 01       	movw	r14, r28
    1090:	f8 e0       	ldi	r31, 0x08	; 8
    1092:	ef 0e       	add	r14, r31
    1094:	f1 1c       	adc	r15, r1
    1096:	f8 01       	movw	r30, r16
    1098:	81 91       	ld	r24, Z+
    109a:	8f 01       	movw	r16, r30
    109c:	81 11       	cpse	r24, r1
    109e:	0e 94 f5 05 	call	0xbea	; 0xbea <m_usb_tx_char>
    10a2:	0e 15       	cp	r16, r14
    10a4:	1f 05       	cpc	r17, r15
    10a6:	b9 f7       	brne	.-18     	; 0x1096 <m_usb_tx_int+0x3c>
    10a8:	27 96       	adiw	r28, 0x07	; 7
    10aa:	0f b6       	in	r0, 0x3f	; 63
    10ac:	f8 94       	cli
    10ae:	de bf       	out	0x3e, r29	; 62
    10b0:	0f be       	out	0x3f, r0	; 63
    10b2:	cd bf       	out	0x3d, r28	; 61
    10b4:	df 91       	pop	r29
    10b6:	cf 91       	pop	r28
    10b8:	1f 91       	pop	r17
    10ba:	0f 91       	pop	r16
    10bc:	ff 90       	pop	r15
    10be:	ef 90       	pop	r14
    10c0:	08 95       	ret

000010c2 <__subsf3>:
    10c2:	50 58       	subi	r21, 0x80	; 128

000010c4 <__addsf3>:
    10c4:	bb 27       	eor	r27, r27
    10c6:	aa 27       	eor	r26, r26
    10c8:	0e 94 79 08 	call	0x10f2	; 0x10f2 <__addsf3x>
    10cc:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__fp_round>
    10d0:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__fp_pscA>
    10d4:	38 f0       	brcs	.+14     	; 0x10e4 <__addsf3+0x20>
    10d6:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <__fp_pscB>
    10da:	20 f0       	brcs	.+8      	; 0x10e4 <__addsf3+0x20>
    10dc:	39 f4       	brne	.+14     	; 0x10ec <__addsf3+0x28>
    10de:	9f 3f       	cpi	r25, 0xFF	; 255
    10e0:	19 f4       	brne	.+6      	; 0x10e8 <__addsf3+0x24>
    10e2:	26 f4       	brtc	.+8      	; 0x10ec <__addsf3+0x28>
    10e4:	0c 94 e2 09 	jmp	0x13c4	; 0x13c4 <__fp_nan>
    10e8:	0e f4       	brtc	.+2      	; 0x10ec <__addsf3+0x28>
    10ea:	e0 95       	com	r30
    10ec:	e7 fb       	bst	r30, 7
    10ee:	0c 94 dc 09 	jmp	0x13b8	; 0x13b8 <__fp_inf>

000010f2 <__addsf3x>:
    10f2:	e9 2f       	mov	r30, r25
    10f4:	0e 94 04 0a 	call	0x1408	; 0x1408 <__fp_split3>
    10f8:	58 f3       	brcs	.-42     	; 0x10d0 <__addsf3+0xc>
    10fa:	ba 17       	cp	r27, r26
    10fc:	62 07       	cpc	r22, r18
    10fe:	73 07       	cpc	r23, r19
    1100:	84 07       	cpc	r24, r20
    1102:	95 07       	cpc	r25, r21
    1104:	20 f0       	brcs	.+8      	; 0x110e <__addsf3x+0x1c>
    1106:	79 f4       	brne	.+30     	; 0x1126 <__addsf3x+0x34>
    1108:	a6 f5       	brtc	.+104    	; 0x1172 <__addsf3x+0x80>
    110a:	0c 94 26 0a 	jmp	0x144c	; 0x144c <__fp_zero>
    110e:	0e f4       	brtc	.+2      	; 0x1112 <__addsf3x+0x20>
    1110:	e0 95       	com	r30
    1112:	0b 2e       	mov	r0, r27
    1114:	ba 2f       	mov	r27, r26
    1116:	a0 2d       	mov	r26, r0
    1118:	0b 01       	movw	r0, r22
    111a:	b9 01       	movw	r22, r18
    111c:	90 01       	movw	r18, r0
    111e:	0c 01       	movw	r0, r24
    1120:	ca 01       	movw	r24, r20
    1122:	a0 01       	movw	r20, r0
    1124:	11 24       	eor	r1, r1
    1126:	ff 27       	eor	r31, r31
    1128:	59 1b       	sub	r21, r25
    112a:	99 f0       	breq	.+38     	; 0x1152 <__addsf3x+0x60>
    112c:	59 3f       	cpi	r21, 0xF9	; 249
    112e:	50 f4       	brcc	.+20     	; 0x1144 <__addsf3x+0x52>
    1130:	50 3e       	cpi	r21, 0xE0	; 224
    1132:	68 f1       	brcs	.+90     	; 0x118e <__addsf3x+0x9c>
    1134:	1a 16       	cp	r1, r26
    1136:	f0 40       	sbci	r31, 0x00	; 0
    1138:	a2 2f       	mov	r26, r18
    113a:	23 2f       	mov	r18, r19
    113c:	34 2f       	mov	r19, r20
    113e:	44 27       	eor	r20, r20
    1140:	58 5f       	subi	r21, 0xF8	; 248
    1142:	f3 cf       	rjmp	.-26     	; 0x112a <__addsf3x+0x38>
    1144:	46 95       	lsr	r20
    1146:	37 95       	ror	r19
    1148:	27 95       	ror	r18
    114a:	a7 95       	ror	r26
    114c:	f0 40       	sbci	r31, 0x00	; 0
    114e:	53 95       	inc	r21
    1150:	c9 f7       	brne	.-14     	; 0x1144 <__addsf3x+0x52>
    1152:	7e f4       	brtc	.+30     	; 0x1172 <__addsf3x+0x80>
    1154:	1f 16       	cp	r1, r31
    1156:	ba 0b       	sbc	r27, r26
    1158:	62 0b       	sbc	r22, r18
    115a:	73 0b       	sbc	r23, r19
    115c:	84 0b       	sbc	r24, r20
    115e:	ba f0       	brmi	.+46     	; 0x118e <__addsf3x+0x9c>
    1160:	91 50       	subi	r25, 0x01	; 1
    1162:	a1 f0       	breq	.+40     	; 0x118c <__addsf3x+0x9a>
    1164:	ff 0f       	add	r31, r31
    1166:	bb 1f       	adc	r27, r27
    1168:	66 1f       	adc	r22, r22
    116a:	77 1f       	adc	r23, r23
    116c:	88 1f       	adc	r24, r24
    116e:	c2 f7       	brpl	.-16     	; 0x1160 <__addsf3x+0x6e>
    1170:	0e c0       	rjmp	.+28     	; 0x118e <__addsf3x+0x9c>
    1172:	ba 0f       	add	r27, r26
    1174:	62 1f       	adc	r22, r18
    1176:	73 1f       	adc	r23, r19
    1178:	84 1f       	adc	r24, r20
    117a:	48 f4       	brcc	.+18     	; 0x118e <__addsf3x+0x9c>
    117c:	87 95       	ror	r24
    117e:	77 95       	ror	r23
    1180:	67 95       	ror	r22
    1182:	b7 95       	ror	r27
    1184:	f7 95       	ror	r31
    1186:	9e 3f       	cpi	r25, 0xFE	; 254
    1188:	08 f0       	brcs	.+2      	; 0x118c <__addsf3x+0x9a>
    118a:	b0 cf       	rjmp	.-160    	; 0x10ec <__addsf3+0x28>
    118c:	93 95       	inc	r25
    118e:	88 0f       	add	r24, r24
    1190:	08 f0       	brcs	.+2      	; 0x1194 <__addsf3x+0xa2>
    1192:	99 27       	eor	r25, r25
    1194:	ee 0f       	add	r30, r30
    1196:	97 95       	ror	r25
    1198:	87 95       	ror	r24
    119a:	08 95       	ret

0000119c <__cmpsf2>:
    119c:	0e 94 b8 09 	call	0x1370	; 0x1370 <__fp_cmp>
    11a0:	08 f4       	brcc	.+2      	; 0x11a4 <__cmpsf2+0x8>
    11a2:	81 e0       	ldi	r24, 0x01	; 1
    11a4:	08 95       	ret

000011a6 <__divsf3>:
    11a6:	0e 94 e7 08 	call	0x11ce	; 0x11ce <__divsf3x>
    11aa:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__fp_round>
    11ae:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <__fp_pscB>
    11b2:	58 f0       	brcs	.+22     	; 0x11ca <__divsf3+0x24>
    11b4:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__fp_pscA>
    11b8:	40 f0       	brcs	.+16     	; 0x11ca <__divsf3+0x24>
    11ba:	29 f4       	brne	.+10     	; 0x11c6 <__divsf3+0x20>
    11bc:	5f 3f       	cpi	r21, 0xFF	; 255
    11be:	29 f0       	breq	.+10     	; 0x11ca <__divsf3+0x24>
    11c0:	0c 94 dc 09 	jmp	0x13b8	; 0x13b8 <__fp_inf>
    11c4:	51 11       	cpse	r21, r1
    11c6:	0c 94 27 0a 	jmp	0x144e	; 0x144e <__fp_szero>
    11ca:	0c 94 e2 09 	jmp	0x13c4	; 0x13c4 <__fp_nan>

000011ce <__divsf3x>:
    11ce:	0e 94 04 0a 	call	0x1408	; 0x1408 <__fp_split3>
    11d2:	68 f3       	brcs	.-38     	; 0x11ae <__divsf3+0x8>

000011d4 <__divsf3_pse>:
    11d4:	99 23       	and	r25, r25
    11d6:	b1 f3       	breq	.-20     	; 0x11c4 <__divsf3+0x1e>
    11d8:	55 23       	and	r21, r21
    11da:	91 f3       	breq	.-28     	; 0x11c0 <__divsf3+0x1a>
    11dc:	95 1b       	sub	r25, r21
    11de:	55 0b       	sbc	r21, r21
    11e0:	bb 27       	eor	r27, r27
    11e2:	aa 27       	eor	r26, r26
    11e4:	62 17       	cp	r22, r18
    11e6:	73 07       	cpc	r23, r19
    11e8:	84 07       	cpc	r24, r20
    11ea:	38 f0       	brcs	.+14     	; 0x11fa <__divsf3_pse+0x26>
    11ec:	9f 5f       	subi	r25, 0xFF	; 255
    11ee:	5f 4f       	sbci	r21, 0xFF	; 255
    11f0:	22 0f       	add	r18, r18
    11f2:	33 1f       	adc	r19, r19
    11f4:	44 1f       	adc	r20, r20
    11f6:	aa 1f       	adc	r26, r26
    11f8:	a9 f3       	breq	.-22     	; 0x11e4 <__divsf3_pse+0x10>
    11fa:	35 d0       	rcall	.+106    	; 0x1266 <__divsf3_pse+0x92>
    11fc:	0e 2e       	mov	r0, r30
    11fe:	3a f0       	brmi	.+14     	; 0x120e <__divsf3_pse+0x3a>
    1200:	e0 e8       	ldi	r30, 0x80	; 128
    1202:	32 d0       	rcall	.+100    	; 0x1268 <__divsf3_pse+0x94>
    1204:	91 50       	subi	r25, 0x01	; 1
    1206:	50 40       	sbci	r21, 0x00	; 0
    1208:	e6 95       	lsr	r30
    120a:	00 1c       	adc	r0, r0
    120c:	ca f7       	brpl	.-14     	; 0x1200 <__divsf3_pse+0x2c>
    120e:	2b d0       	rcall	.+86     	; 0x1266 <__divsf3_pse+0x92>
    1210:	fe 2f       	mov	r31, r30
    1212:	29 d0       	rcall	.+82     	; 0x1266 <__divsf3_pse+0x92>
    1214:	66 0f       	add	r22, r22
    1216:	77 1f       	adc	r23, r23
    1218:	88 1f       	adc	r24, r24
    121a:	bb 1f       	adc	r27, r27
    121c:	26 17       	cp	r18, r22
    121e:	37 07       	cpc	r19, r23
    1220:	48 07       	cpc	r20, r24
    1222:	ab 07       	cpc	r26, r27
    1224:	b0 e8       	ldi	r27, 0x80	; 128
    1226:	09 f0       	breq	.+2      	; 0x122a <__divsf3_pse+0x56>
    1228:	bb 0b       	sbc	r27, r27
    122a:	80 2d       	mov	r24, r0
    122c:	bf 01       	movw	r22, r30
    122e:	ff 27       	eor	r31, r31
    1230:	93 58       	subi	r25, 0x83	; 131
    1232:	5f 4f       	sbci	r21, 0xFF	; 255
    1234:	3a f0       	brmi	.+14     	; 0x1244 <__divsf3_pse+0x70>
    1236:	9e 3f       	cpi	r25, 0xFE	; 254
    1238:	51 05       	cpc	r21, r1
    123a:	78 f0       	brcs	.+30     	; 0x125a <__divsf3_pse+0x86>
    123c:	0c 94 dc 09 	jmp	0x13b8	; 0x13b8 <__fp_inf>
    1240:	0c 94 27 0a 	jmp	0x144e	; 0x144e <__fp_szero>
    1244:	5f 3f       	cpi	r21, 0xFF	; 255
    1246:	e4 f3       	brlt	.-8      	; 0x1240 <__divsf3_pse+0x6c>
    1248:	98 3e       	cpi	r25, 0xE8	; 232
    124a:	d4 f3       	brlt	.-12     	; 0x1240 <__divsf3_pse+0x6c>
    124c:	86 95       	lsr	r24
    124e:	77 95       	ror	r23
    1250:	67 95       	ror	r22
    1252:	b7 95       	ror	r27
    1254:	f7 95       	ror	r31
    1256:	9f 5f       	subi	r25, 0xFF	; 255
    1258:	c9 f7       	brne	.-14     	; 0x124c <__divsf3_pse+0x78>
    125a:	88 0f       	add	r24, r24
    125c:	91 1d       	adc	r25, r1
    125e:	96 95       	lsr	r25
    1260:	87 95       	ror	r24
    1262:	97 f9       	bld	r25, 7
    1264:	08 95       	ret
    1266:	e1 e0       	ldi	r30, 0x01	; 1
    1268:	66 0f       	add	r22, r22
    126a:	77 1f       	adc	r23, r23
    126c:	88 1f       	adc	r24, r24
    126e:	bb 1f       	adc	r27, r27
    1270:	62 17       	cp	r22, r18
    1272:	73 07       	cpc	r23, r19
    1274:	84 07       	cpc	r24, r20
    1276:	ba 07       	cpc	r27, r26
    1278:	20 f0       	brcs	.+8      	; 0x1282 <__divsf3_pse+0xae>
    127a:	62 1b       	sub	r22, r18
    127c:	73 0b       	sbc	r23, r19
    127e:	84 0b       	sbc	r24, r20
    1280:	ba 0b       	sbc	r27, r26
    1282:	ee 1f       	adc	r30, r30
    1284:	88 f7       	brcc	.-30     	; 0x1268 <__divsf3_pse+0x94>
    1286:	e0 95       	com	r30
    1288:	08 95       	ret

0000128a <__fixsfsi>:
    128a:	0e 94 4c 09 	call	0x1298	; 0x1298 <__fixunssfsi>
    128e:	68 94       	set
    1290:	b1 11       	cpse	r27, r1
    1292:	0c 94 27 0a 	jmp	0x144e	; 0x144e <__fp_szero>
    1296:	08 95       	ret

00001298 <__fixunssfsi>:
    1298:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__fp_splitA>
    129c:	88 f0       	brcs	.+34     	; 0x12c0 <__fixunssfsi+0x28>
    129e:	9f 57       	subi	r25, 0x7F	; 127
    12a0:	98 f0       	brcs	.+38     	; 0x12c8 <__fixunssfsi+0x30>
    12a2:	b9 2f       	mov	r27, r25
    12a4:	99 27       	eor	r25, r25
    12a6:	b7 51       	subi	r27, 0x17	; 23
    12a8:	b0 f0       	brcs	.+44     	; 0x12d6 <__fixunssfsi+0x3e>
    12aa:	e1 f0       	breq	.+56     	; 0x12e4 <__fixunssfsi+0x4c>
    12ac:	66 0f       	add	r22, r22
    12ae:	77 1f       	adc	r23, r23
    12b0:	88 1f       	adc	r24, r24
    12b2:	99 1f       	adc	r25, r25
    12b4:	1a f0       	brmi	.+6      	; 0x12bc <__fixunssfsi+0x24>
    12b6:	ba 95       	dec	r27
    12b8:	c9 f7       	brne	.-14     	; 0x12ac <__fixunssfsi+0x14>
    12ba:	14 c0       	rjmp	.+40     	; 0x12e4 <__fixunssfsi+0x4c>
    12bc:	b1 30       	cpi	r27, 0x01	; 1
    12be:	91 f0       	breq	.+36     	; 0x12e4 <__fixunssfsi+0x4c>
    12c0:	0e 94 26 0a 	call	0x144c	; 0x144c <__fp_zero>
    12c4:	b1 e0       	ldi	r27, 0x01	; 1
    12c6:	08 95       	ret
    12c8:	0c 94 26 0a 	jmp	0x144c	; 0x144c <__fp_zero>
    12cc:	67 2f       	mov	r22, r23
    12ce:	78 2f       	mov	r23, r24
    12d0:	88 27       	eor	r24, r24
    12d2:	b8 5f       	subi	r27, 0xF8	; 248
    12d4:	39 f0       	breq	.+14     	; 0x12e4 <__fixunssfsi+0x4c>
    12d6:	b9 3f       	cpi	r27, 0xF9	; 249
    12d8:	cc f3       	brlt	.-14     	; 0x12cc <__fixunssfsi+0x34>
    12da:	86 95       	lsr	r24
    12dc:	77 95       	ror	r23
    12de:	67 95       	ror	r22
    12e0:	b3 95       	inc	r27
    12e2:	d9 f7       	brne	.-10     	; 0x12da <__fixunssfsi+0x42>
    12e4:	3e f4       	brtc	.+14     	; 0x12f4 <__fixunssfsi+0x5c>
    12e6:	90 95       	com	r25
    12e8:	80 95       	com	r24
    12ea:	70 95       	com	r23
    12ec:	61 95       	neg	r22
    12ee:	7f 4f       	sbci	r23, 0xFF	; 255
    12f0:	8f 4f       	sbci	r24, 0xFF	; 255
    12f2:	9f 4f       	sbci	r25, 0xFF	; 255
    12f4:	08 95       	ret

000012f6 <__floatunsisf>:
    12f6:	e8 94       	clt
    12f8:	09 c0       	rjmp	.+18     	; 0x130c <__floatsisf+0x12>

000012fa <__floatsisf>:
    12fa:	97 fb       	bst	r25, 7
    12fc:	3e f4       	brtc	.+14     	; 0x130c <__floatsisf+0x12>
    12fe:	90 95       	com	r25
    1300:	80 95       	com	r24
    1302:	70 95       	com	r23
    1304:	61 95       	neg	r22
    1306:	7f 4f       	sbci	r23, 0xFF	; 255
    1308:	8f 4f       	sbci	r24, 0xFF	; 255
    130a:	9f 4f       	sbci	r25, 0xFF	; 255
    130c:	99 23       	and	r25, r25
    130e:	a9 f0       	breq	.+42     	; 0x133a <__floatsisf+0x40>
    1310:	f9 2f       	mov	r31, r25
    1312:	96 e9       	ldi	r25, 0x96	; 150
    1314:	bb 27       	eor	r27, r27
    1316:	93 95       	inc	r25
    1318:	f6 95       	lsr	r31
    131a:	87 95       	ror	r24
    131c:	77 95       	ror	r23
    131e:	67 95       	ror	r22
    1320:	b7 95       	ror	r27
    1322:	f1 11       	cpse	r31, r1
    1324:	f8 cf       	rjmp	.-16     	; 0x1316 <__floatsisf+0x1c>
    1326:	fa f4       	brpl	.+62     	; 0x1366 <__floatsisf+0x6c>
    1328:	bb 0f       	add	r27, r27
    132a:	11 f4       	brne	.+4      	; 0x1330 <__floatsisf+0x36>
    132c:	60 ff       	sbrs	r22, 0
    132e:	1b c0       	rjmp	.+54     	; 0x1366 <__floatsisf+0x6c>
    1330:	6f 5f       	subi	r22, 0xFF	; 255
    1332:	7f 4f       	sbci	r23, 0xFF	; 255
    1334:	8f 4f       	sbci	r24, 0xFF	; 255
    1336:	9f 4f       	sbci	r25, 0xFF	; 255
    1338:	16 c0       	rjmp	.+44     	; 0x1366 <__floatsisf+0x6c>
    133a:	88 23       	and	r24, r24
    133c:	11 f0       	breq	.+4      	; 0x1342 <__floatsisf+0x48>
    133e:	96 e9       	ldi	r25, 0x96	; 150
    1340:	11 c0       	rjmp	.+34     	; 0x1364 <__floatsisf+0x6a>
    1342:	77 23       	and	r23, r23
    1344:	21 f0       	breq	.+8      	; 0x134e <__floatsisf+0x54>
    1346:	9e e8       	ldi	r25, 0x8E	; 142
    1348:	87 2f       	mov	r24, r23
    134a:	76 2f       	mov	r23, r22
    134c:	05 c0       	rjmp	.+10     	; 0x1358 <__floatsisf+0x5e>
    134e:	66 23       	and	r22, r22
    1350:	71 f0       	breq	.+28     	; 0x136e <__floatsisf+0x74>
    1352:	96 e8       	ldi	r25, 0x86	; 134
    1354:	86 2f       	mov	r24, r22
    1356:	70 e0       	ldi	r23, 0x00	; 0
    1358:	60 e0       	ldi	r22, 0x00	; 0
    135a:	2a f0       	brmi	.+10     	; 0x1366 <__floatsisf+0x6c>
    135c:	9a 95       	dec	r25
    135e:	66 0f       	add	r22, r22
    1360:	77 1f       	adc	r23, r23
    1362:	88 1f       	adc	r24, r24
    1364:	da f7       	brpl	.-10     	; 0x135c <__floatsisf+0x62>
    1366:	88 0f       	add	r24, r24
    1368:	96 95       	lsr	r25
    136a:	87 95       	ror	r24
    136c:	97 f9       	bld	r25, 7
    136e:	08 95       	ret

00001370 <__fp_cmp>:
    1370:	99 0f       	add	r25, r25
    1372:	00 08       	sbc	r0, r0
    1374:	55 0f       	add	r21, r21
    1376:	aa 0b       	sbc	r26, r26
    1378:	e0 e8       	ldi	r30, 0x80	; 128
    137a:	fe ef       	ldi	r31, 0xFE	; 254
    137c:	16 16       	cp	r1, r22
    137e:	17 06       	cpc	r1, r23
    1380:	e8 07       	cpc	r30, r24
    1382:	f9 07       	cpc	r31, r25
    1384:	c0 f0       	brcs	.+48     	; 0x13b6 <__fp_cmp+0x46>
    1386:	12 16       	cp	r1, r18
    1388:	13 06       	cpc	r1, r19
    138a:	e4 07       	cpc	r30, r20
    138c:	f5 07       	cpc	r31, r21
    138e:	98 f0       	brcs	.+38     	; 0x13b6 <__fp_cmp+0x46>
    1390:	62 1b       	sub	r22, r18
    1392:	73 0b       	sbc	r23, r19
    1394:	84 0b       	sbc	r24, r20
    1396:	95 0b       	sbc	r25, r21
    1398:	39 f4       	brne	.+14     	; 0x13a8 <__fp_cmp+0x38>
    139a:	0a 26       	eor	r0, r26
    139c:	61 f0       	breq	.+24     	; 0x13b6 <__fp_cmp+0x46>
    139e:	23 2b       	or	r18, r19
    13a0:	24 2b       	or	r18, r20
    13a2:	25 2b       	or	r18, r21
    13a4:	21 f4       	brne	.+8      	; 0x13ae <__fp_cmp+0x3e>
    13a6:	08 95       	ret
    13a8:	0a 26       	eor	r0, r26
    13aa:	09 f4       	brne	.+2      	; 0x13ae <__fp_cmp+0x3e>
    13ac:	a1 40       	sbci	r26, 0x01	; 1
    13ae:	a6 95       	lsr	r26
    13b0:	8f ef       	ldi	r24, 0xFF	; 255
    13b2:	81 1d       	adc	r24, r1
    13b4:	81 1d       	adc	r24, r1
    13b6:	08 95       	ret

000013b8 <__fp_inf>:
    13b8:	97 f9       	bld	r25, 7
    13ba:	9f 67       	ori	r25, 0x7F	; 127
    13bc:	80 e8       	ldi	r24, 0x80	; 128
    13be:	70 e0       	ldi	r23, 0x00	; 0
    13c0:	60 e0       	ldi	r22, 0x00	; 0
    13c2:	08 95       	ret

000013c4 <__fp_nan>:
    13c4:	9f ef       	ldi	r25, 0xFF	; 255
    13c6:	80 ec       	ldi	r24, 0xC0	; 192
    13c8:	08 95       	ret

000013ca <__fp_pscA>:
    13ca:	00 24       	eor	r0, r0
    13cc:	0a 94       	dec	r0
    13ce:	16 16       	cp	r1, r22
    13d0:	17 06       	cpc	r1, r23
    13d2:	18 06       	cpc	r1, r24
    13d4:	09 06       	cpc	r0, r25
    13d6:	08 95       	ret

000013d8 <__fp_pscB>:
    13d8:	00 24       	eor	r0, r0
    13da:	0a 94       	dec	r0
    13dc:	12 16       	cp	r1, r18
    13de:	13 06       	cpc	r1, r19
    13e0:	14 06       	cpc	r1, r20
    13e2:	05 06       	cpc	r0, r21
    13e4:	08 95       	ret

000013e6 <__fp_round>:
    13e6:	09 2e       	mov	r0, r25
    13e8:	03 94       	inc	r0
    13ea:	00 0c       	add	r0, r0
    13ec:	11 f4       	brne	.+4      	; 0x13f2 <__fp_round+0xc>
    13ee:	88 23       	and	r24, r24
    13f0:	52 f0       	brmi	.+20     	; 0x1406 <__fp_round+0x20>
    13f2:	bb 0f       	add	r27, r27
    13f4:	40 f4       	brcc	.+16     	; 0x1406 <__fp_round+0x20>
    13f6:	bf 2b       	or	r27, r31
    13f8:	11 f4       	brne	.+4      	; 0x13fe <__fp_round+0x18>
    13fa:	60 ff       	sbrs	r22, 0
    13fc:	04 c0       	rjmp	.+8      	; 0x1406 <__fp_round+0x20>
    13fe:	6f 5f       	subi	r22, 0xFF	; 255
    1400:	7f 4f       	sbci	r23, 0xFF	; 255
    1402:	8f 4f       	sbci	r24, 0xFF	; 255
    1404:	9f 4f       	sbci	r25, 0xFF	; 255
    1406:	08 95       	ret

00001408 <__fp_split3>:
    1408:	57 fd       	sbrc	r21, 7
    140a:	90 58       	subi	r25, 0x80	; 128
    140c:	44 0f       	add	r20, r20
    140e:	55 1f       	adc	r21, r21
    1410:	59 f0       	breq	.+22     	; 0x1428 <__fp_splitA+0x10>
    1412:	5f 3f       	cpi	r21, 0xFF	; 255
    1414:	71 f0       	breq	.+28     	; 0x1432 <__fp_splitA+0x1a>
    1416:	47 95       	ror	r20

00001418 <__fp_splitA>:
    1418:	88 0f       	add	r24, r24
    141a:	97 fb       	bst	r25, 7
    141c:	99 1f       	adc	r25, r25
    141e:	61 f0       	breq	.+24     	; 0x1438 <__fp_splitA+0x20>
    1420:	9f 3f       	cpi	r25, 0xFF	; 255
    1422:	79 f0       	breq	.+30     	; 0x1442 <__fp_splitA+0x2a>
    1424:	87 95       	ror	r24
    1426:	08 95       	ret
    1428:	12 16       	cp	r1, r18
    142a:	13 06       	cpc	r1, r19
    142c:	14 06       	cpc	r1, r20
    142e:	55 1f       	adc	r21, r21
    1430:	f2 cf       	rjmp	.-28     	; 0x1416 <__fp_split3+0xe>
    1432:	46 95       	lsr	r20
    1434:	f1 df       	rcall	.-30     	; 0x1418 <__fp_splitA>
    1436:	08 c0       	rjmp	.+16     	; 0x1448 <__fp_splitA+0x30>
    1438:	16 16       	cp	r1, r22
    143a:	17 06       	cpc	r1, r23
    143c:	18 06       	cpc	r1, r24
    143e:	99 1f       	adc	r25, r25
    1440:	f1 cf       	rjmp	.-30     	; 0x1424 <__fp_splitA+0xc>
    1442:	86 95       	lsr	r24
    1444:	71 05       	cpc	r23, r1
    1446:	61 05       	cpc	r22, r1
    1448:	08 94       	sec
    144a:	08 95       	ret

0000144c <__fp_zero>:
    144c:	e8 94       	clt

0000144e <__fp_szero>:
    144e:	bb 27       	eor	r27, r27
    1450:	66 27       	eor	r22, r22
    1452:	77 27       	eor	r23, r23
    1454:	cb 01       	movw	r24, r22
    1456:	97 f9       	bld	r25, 7
    1458:	08 95       	ret

0000145a <__mulsf3>:
    145a:	0e 94 40 0a 	call	0x1480	; 0x1480 <__mulsf3x>
    145e:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__fp_round>
    1462:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__fp_pscA>
    1466:	38 f0       	brcs	.+14     	; 0x1476 <__mulsf3+0x1c>
    1468:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <__fp_pscB>
    146c:	20 f0       	brcs	.+8      	; 0x1476 <__mulsf3+0x1c>
    146e:	95 23       	and	r25, r21
    1470:	11 f0       	breq	.+4      	; 0x1476 <__mulsf3+0x1c>
    1472:	0c 94 dc 09 	jmp	0x13b8	; 0x13b8 <__fp_inf>
    1476:	0c 94 e2 09 	jmp	0x13c4	; 0x13c4 <__fp_nan>
    147a:	11 24       	eor	r1, r1
    147c:	0c 94 27 0a 	jmp	0x144e	; 0x144e <__fp_szero>

00001480 <__mulsf3x>:
    1480:	0e 94 04 0a 	call	0x1408	; 0x1408 <__fp_split3>
    1484:	70 f3       	brcs	.-36     	; 0x1462 <__mulsf3+0x8>

00001486 <__mulsf3_pse>:
    1486:	95 9f       	mul	r25, r21
    1488:	c1 f3       	breq	.-16     	; 0x147a <__mulsf3+0x20>
    148a:	95 0f       	add	r25, r21
    148c:	50 e0       	ldi	r21, 0x00	; 0
    148e:	55 1f       	adc	r21, r21
    1490:	62 9f       	mul	r22, r18
    1492:	f0 01       	movw	r30, r0
    1494:	72 9f       	mul	r23, r18
    1496:	bb 27       	eor	r27, r27
    1498:	f0 0d       	add	r31, r0
    149a:	b1 1d       	adc	r27, r1
    149c:	63 9f       	mul	r22, r19
    149e:	aa 27       	eor	r26, r26
    14a0:	f0 0d       	add	r31, r0
    14a2:	b1 1d       	adc	r27, r1
    14a4:	aa 1f       	adc	r26, r26
    14a6:	64 9f       	mul	r22, r20
    14a8:	66 27       	eor	r22, r22
    14aa:	b0 0d       	add	r27, r0
    14ac:	a1 1d       	adc	r26, r1
    14ae:	66 1f       	adc	r22, r22
    14b0:	82 9f       	mul	r24, r18
    14b2:	22 27       	eor	r18, r18
    14b4:	b0 0d       	add	r27, r0
    14b6:	a1 1d       	adc	r26, r1
    14b8:	62 1f       	adc	r22, r18
    14ba:	73 9f       	mul	r23, r19
    14bc:	b0 0d       	add	r27, r0
    14be:	a1 1d       	adc	r26, r1
    14c0:	62 1f       	adc	r22, r18
    14c2:	83 9f       	mul	r24, r19
    14c4:	a0 0d       	add	r26, r0
    14c6:	61 1d       	adc	r22, r1
    14c8:	22 1f       	adc	r18, r18
    14ca:	74 9f       	mul	r23, r20
    14cc:	33 27       	eor	r19, r19
    14ce:	a0 0d       	add	r26, r0
    14d0:	61 1d       	adc	r22, r1
    14d2:	23 1f       	adc	r18, r19
    14d4:	84 9f       	mul	r24, r20
    14d6:	60 0d       	add	r22, r0
    14d8:	21 1d       	adc	r18, r1
    14da:	82 2f       	mov	r24, r18
    14dc:	76 2f       	mov	r23, r22
    14de:	6a 2f       	mov	r22, r26
    14e0:	11 24       	eor	r1, r1
    14e2:	9f 57       	subi	r25, 0x7F	; 127
    14e4:	50 40       	sbci	r21, 0x00	; 0
    14e6:	9a f0       	brmi	.+38     	; 0x150e <__mulsf3_pse+0x88>
    14e8:	f1 f0       	breq	.+60     	; 0x1526 <__mulsf3_pse+0xa0>
    14ea:	88 23       	and	r24, r24
    14ec:	4a f0       	brmi	.+18     	; 0x1500 <__mulsf3_pse+0x7a>
    14ee:	ee 0f       	add	r30, r30
    14f0:	ff 1f       	adc	r31, r31
    14f2:	bb 1f       	adc	r27, r27
    14f4:	66 1f       	adc	r22, r22
    14f6:	77 1f       	adc	r23, r23
    14f8:	88 1f       	adc	r24, r24
    14fa:	91 50       	subi	r25, 0x01	; 1
    14fc:	50 40       	sbci	r21, 0x00	; 0
    14fe:	a9 f7       	brne	.-22     	; 0x14ea <__mulsf3_pse+0x64>
    1500:	9e 3f       	cpi	r25, 0xFE	; 254
    1502:	51 05       	cpc	r21, r1
    1504:	80 f0       	brcs	.+32     	; 0x1526 <__mulsf3_pse+0xa0>
    1506:	0c 94 dc 09 	jmp	0x13b8	; 0x13b8 <__fp_inf>
    150a:	0c 94 27 0a 	jmp	0x144e	; 0x144e <__fp_szero>
    150e:	5f 3f       	cpi	r21, 0xFF	; 255
    1510:	e4 f3       	brlt	.-8      	; 0x150a <__mulsf3_pse+0x84>
    1512:	98 3e       	cpi	r25, 0xE8	; 232
    1514:	d4 f3       	brlt	.-12     	; 0x150a <__mulsf3_pse+0x84>
    1516:	86 95       	lsr	r24
    1518:	77 95       	ror	r23
    151a:	67 95       	ror	r22
    151c:	b7 95       	ror	r27
    151e:	f7 95       	ror	r31
    1520:	e7 95       	ror	r30
    1522:	9f 5f       	subi	r25, 0xFF	; 255
    1524:	c1 f7       	brne	.-16     	; 0x1516 <__mulsf3_pse+0x90>
    1526:	fe 2b       	or	r31, r30
    1528:	88 0f       	add	r24, r24
    152a:	91 1d       	adc	r25, r1
    152c:	96 95       	lsr	r25
    152e:	87 95       	ror	r24
    1530:	97 f9       	bld	r25, 7
    1532:	08 95       	ret
    1534:	19 f4       	brne	.+6      	; 0x153c <__mulsf3_pse+0xb6>
    1536:	16 f4       	brtc	.+4      	; 0x153c <__mulsf3_pse+0xb6>
    1538:	0c 94 e2 09 	jmp	0x13c4	; 0x13c4 <__fp_nan>
    153c:	0c 94 e0 0a 	jmp	0x15c0	; 0x15c0 <__fp_mpack>

00001540 <sqrt>:
    1540:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__fp_splitA>
    1544:	b8 f3       	brcs	.-18     	; 0x1534 <__mulsf3_pse+0xae>
    1546:	99 23       	and	r25, r25
    1548:	c9 f3       	breq	.-14     	; 0x153c <__mulsf3_pse+0xb6>
    154a:	b6 f3       	brts	.-20     	; 0x1538 <__mulsf3_pse+0xb2>
    154c:	9f 57       	subi	r25, 0x7F	; 127
    154e:	55 0b       	sbc	r21, r21
    1550:	87 ff       	sbrs	r24, 7
    1552:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <__fp_norm2>
    1556:	00 24       	eor	r0, r0
    1558:	a0 e6       	ldi	r26, 0x60	; 96
    155a:	40 ea       	ldi	r20, 0xA0	; 160
    155c:	90 01       	movw	r18, r0
    155e:	80 58       	subi	r24, 0x80	; 128
    1560:	56 95       	lsr	r21
    1562:	97 95       	ror	r25
    1564:	28 f4       	brcc	.+10     	; 0x1570 <sqrt+0x30>
    1566:	80 5c       	subi	r24, 0xC0	; 192
    1568:	66 0f       	add	r22, r22
    156a:	77 1f       	adc	r23, r23
    156c:	88 1f       	adc	r24, r24
    156e:	20 f0       	brcs	.+8      	; 0x1578 <sqrt+0x38>
    1570:	26 17       	cp	r18, r22
    1572:	37 07       	cpc	r19, r23
    1574:	48 07       	cpc	r20, r24
    1576:	30 f4       	brcc	.+12     	; 0x1584 <sqrt+0x44>
    1578:	62 1b       	sub	r22, r18
    157a:	73 0b       	sbc	r23, r19
    157c:	84 0b       	sbc	r24, r20
    157e:	20 29       	or	r18, r0
    1580:	31 29       	or	r19, r1
    1582:	4a 2b       	or	r20, r26
    1584:	a6 95       	lsr	r26
    1586:	17 94       	ror	r1
    1588:	07 94       	ror	r0
    158a:	20 25       	eor	r18, r0
    158c:	31 25       	eor	r19, r1
    158e:	4a 27       	eor	r20, r26
    1590:	58 f7       	brcc	.-42     	; 0x1568 <sqrt+0x28>
    1592:	66 0f       	add	r22, r22
    1594:	77 1f       	adc	r23, r23
    1596:	88 1f       	adc	r24, r24
    1598:	20 f0       	brcs	.+8      	; 0x15a2 <sqrt+0x62>
    159a:	26 17       	cp	r18, r22
    159c:	37 07       	cpc	r19, r23
    159e:	48 07       	cpc	r20, r24
    15a0:	30 f4       	brcc	.+12     	; 0x15ae <sqrt+0x6e>
    15a2:	62 0b       	sbc	r22, r18
    15a4:	73 0b       	sbc	r23, r19
    15a6:	84 0b       	sbc	r24, r20
    15a8:	20 0d       	add	r18, r0
    15aa:	31 1d       	adc	r19, r1
    15ac:	41 1d       	adc	r20, r1
    15ae:	a0 95       	com	r26
    15b0:	81 f7       	brne	.-32     	; 0x1592 <sqrt+0x52>
    15b2:	b9 01       	movw	r22, r18
    15b4:	84 2f       	mov	r24, r20
    15b6:	91 58       	subi	r25, 0x81	; 129
    15b8:	88 0f       	add	r24, r24
    15ba:	96 95       	lsr	r25
    15bc:	87 95       	ror	r24
    15be:	08 95       	ret

000015c0 <__fp_mpack>:
    15c0:	9f 3f       	cpi	r25, 0xFF	; 255
    15c2:	31 f0       	breq	.+12     	; 0x15d0 <__fp_mpack_finite+0xc>

000015c4 <__fp_mpack_finite>:
    15c4:	91 50       	subi	r25, 0x01	; 1
    15c6:	20 f4       	brcc	.+8      	; 0x15d0 <__fp_mpack_finite+0xc>
    15c8:	87 95       	ror	r24
    15ca:	77 95       	ror	r23
    15cc:	67 95       	ror	r22
    15ce:	b7 95       	ror	r27
    15d0:	88 0f       	add	r24, r24
    15d2:	91 1d       	adc	r25, r1
    15d4:	96 95       	lsr	r25
    15d6:	87 95       	ror	r24
    15d8:	97 f9       	bld	r25, 7
    15da:	08 95       	ret

000015dc <__fp_norm2>:
    15dc:	91 50       	subi	r25, 0x01	; 1
    15de:	50 40       	sbci	r21, 0x00	; 0
    15e0:	66 0f       	add	r22, r22
    15e2:	77 1f       	adc	r23, r23
    15e4:	88 1f       	adc	r24, r24
    15e6:	d2 f7       	brpl	.-12     	; 0x15dc <__fp_norm2>
    15e8:	08 95       	ret

000015ea <__itoa_ncheck>:
    15ea:	bb 27       	eor	r27, r27
    15ec:	4a 30       	cpi	r20, 0x0A	; 10
    15ee:	31 f4       	brne	.+12     	; 0x15fc <__itoa_ncheck+0x12>
    15f0:	99 23       	and	r25, r25
    15f2:	22 f4       	brpl	.+8      	; 0x15fc <__itoa_ncheck+0x12>
    15f4:	bd e2       	ldi	r27, 0x2D	; 45
    15f6:	90 95       	com	r25
    15f8:	81 95       	neg	r24
    15fa:	9f 4f       	sbci	r25, 0xFF	; 255
    15fc:	0c 94 01 0b 	jmp	0x1602	; 0x1602 <__utoa_common>

00001600 <__utoa_ncheck>:
    1600:	bb 27       	eor	r27, r27

00001602 <__utoa_common>:
    1602:	fb 01       	movw	r30, r22
    1604:	55 27       	eor	r21, r21
    1606:	aa 27       	eor	r26, r26
    1608:	88 0f       	add	r24, r24
    160a:	99 1f       	adc	r25, r25
    160c:	aa 1f       	adc	r26, r26
    160e:	a4 17       	cp	r26, r20
    1610:	10 f0       	brcs	.+4      	; 0x1616 <__utoa_common+0x14>
    1612:	a4 1b       	sub	r26, r20
    1614:	83 95       	inc	r24
    1616:	50 51       	subi	r21, 0x10	; 16
    1618:	b9 f7       	brne	.-18     	; 0x1608 <__utoa_common+0x6>
    161a:	a0 5d       	subi	r26, 0xD0	; 208
    161c:	aa 33       	cpi	r26, 0x3A	; 58
    161e:	08 f0       	brcs	.+2      	; 0x1622 <__utoa_common+0x20>
    1620:	a9 5d       	subi	r26, 0xD9	; 217
    1622:	a1 93       	st	Z+, r26
    1624:	00 97       	sbiw	r24, 0x00	; 0
    1626:	79 f7       	brne	.-34     	; 0x1606 <__utoa_common+0x4>
    1628:	b1 11       	cpse	r27, r1
    162a:	b1 93       	st	Z+, r27
    162c:	11 92       	st	Z+, r1
    162e:	cb 01       	movw	r24, r22
    1630:	0c 94 1a 0b 	jmp	0x1634	; 0x1634 <strrev>

00001634 <strrev>:
    1634:	dc 01       	movw	r26, r24
    1636:	fc 01       	movw	r30, r24
    1638:	67 2f       	mov	r22, r23
    163a:	71 91       	ld	r23, Z+
    163c:	77 23       	and	r23, r23
    163e:	e1 f7       	brne	.-8      	; 0x1638 <strrev+0x4>
    1640:	32 97       	sbiw	r30, 0x02	; 2
    1642:	04 c0       	rjmp	.+8      	; 0x164c <strrev+0x18>
    1644:	7c 91       	ld	r23, X
    1646:	6d 93       	st	X+, r22
    1648:	70 83       	st	Z, r23
    164a:	62 91       	ld	r22, -Z
    164c:	ae 17       	cp	r26, r30
    164e:	bf 07       	cpc	r27, r31
    1650:	c8 f3       	brcs	.-14     	; 0x1644 <strrev+0x10>
    1652:	08 95       	ret

00001654 <_exit>:
    1654:	f8 94       	cli

00001656 <__stop_program>:
    1656:	ff cf       	rjmp	.-2      	; 0x1656 <__stop_program>
